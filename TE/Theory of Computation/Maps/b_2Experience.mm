<map version="freeplane 1.7.0">
<!--To view this file, download free mind mapping software Freeplane from http://freeplane.sourceforge.net -->
<attribute_registry SHOW_ATTRIBUTES="hide"/>
<node TEXT="Theory of Computation" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" FOLDED="false" ID="ID_191153586" CREATED="1562675315160" MODIFIED="1562823713858" ICON_SIZE="36.0 pt" LINK="../1_Theory%20of%20Computation_MasterLookup.mm"><hook NAME="MapStyle">
    <properties show_icon_for_attributes="false" fit_to_viewport="false" edgeColorConfiguration="#6BF67Bff,#6BF67Bff,#6BF67Bff,#6BF67Bff,#6BF67Bff,#6BF67Bff,#6BF67Bff,#6BF67Bff,#6BF67Bff,#6BF67Bff,#6BF67Bff,#6BF67Bff"/>

<map_styles>
<stylenode LOCALIZED_TEXT="styles.root_node" STYLE="oval" UNIFORM_SHAPE="true" VGAP_QUANTITY="24.0 pt">
<font SIZE="24"/>
<stylenode LOCALIZED_TEXT="styles.predefined" POSITION="right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="default" ICON_SIZE="12.0 pt" COLOR="#000000" STYLE="fork">
<font NAME="SansSerif" SIZE="10" BOLD="false" ITALIC="false"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.details"/>
<stylenode LOCALIZED_TEXT="defaultstyle.attributes">
<font SIZE="9"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.note" COLOR="#000000" BACKGROUND_COLOR="#ffffff" TEXT_ALIGN="LEFT"/>
<stylenode LOCALIZED_TEXT="defaultstyle.floating">
<edge STYLE="hide_edge"/>
<cloud COLOR="#f0f0f0" SHAPE="ROUND_RECT"/>
</stylenode>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.user-defined" POSITION="right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="styles.topic" COLOR="#18898b" STYLE="fork">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.subtopic" COLOR="#cc3300" STYLE="fork">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.subsubtopic" COLOR="#669900">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.important">
<icon BUILTIN="yes"/>
</stylenode>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.AutomaticLayout" POSITION="right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="AutomaticLayout.level.root" ICON_SIZE="14.0 pt" COLOR="#000000" STYLE="oval">
<font NAME="Segoe Print" SIZE="22"/>
<edge COLOR="#ffffff"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,1" ICON_SIZE="18.0 px" BORDER_WIDTH_LIKE_EDGE="true" COLOR="#000000" SHAPE_HORIZONTAL_MARGIN="0.1 pt" SHAPE_VERTICAL_MARGIN="0.1 pt">
<font SIZE="18" BOLD="false" ITALIC="true"/>
<edge STYLE="sharp_bezier" COLOR="#6bf67b" WIDTH="8"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,2" ICON_SIZE="16.0 px" BORDER_WIDTH_LIKE_EDGE="true" COLOR="#000000">
<font SIZE="16"/>
<edge STYLE="sharp_bezier" COLOR="#6bf67b" WIDTH="3"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,3" ICON_SIZE="14.0 px" BORDER_WIDTH_LIKE_EDGE="true" COLOR="#000000">
<font SIZE="14"/>
<edge STYLE="sharp_bezier" COLOR="#6bf67b" WIDTH="3"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,4" ICON_SIZE="14.0 px" BORDER_WIDTH_LIKE_EDGE="true" COLOR="#000000">
<font SIZE="13"/>
<edge STYLE="sharp_bezier" COLOR="#6bf67b" WIDTH="2"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,5" ICON_SIZE="14.0 px" BORDER_WIDTH_LIKE_EDGE="true">
<font SIZE="13"/>
<edge STYLE="sharp_bezier" COLOR="#6bf67b" WIDTH="1"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,6" ICON_SIZE="14.0 px">
<font SIZE="13"/>
<edge STYLE="bezier"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,7" ICON_SIZE="14.0 px">
<font SIZE="13"/>
<edge STYLE="bezier"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,8" ICON_SIZE="14.0 px">
<edge STYLE="bezier"/>
<font SIZE="13"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,9" ICON_SIZE="14.0 px">
<font SIZE="13"/>
<edge STYLE="bezier"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,10" ICON_SIZE="14.0 px">
<font SIZE="13"/>
<edge STYLE="bezier"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,11" ICON_SIZE="14.0 px">
<edge STYLE="bezier"/>
</stylenode>
</stylenode>
</stylenode>
</map_styles>
</hook>
<hook NAME="AutomaticEdgeColor" COUNTER="27" RULE="ON_BRANCH_CREATION"/>
<hook NAME="accessories/plugins/AutomaticLayout.properties" VALUE="ALL"/>
<font SIZE="20"/>
<node TEXT="Resources" LOCALIZED_STYLE_REF="defaultstyle.floating" POSITION="left" ID="ID_722152869" CREATED="1549425355520" MODIFIED="1549425374086">
<node TEXT="Interactive Visualizations" ID="ID_1735562326" CREATED="1549425374954" MODIFIED="1549426426858">
<edge STYLE="bezier"/>
</node>
<node TEXT="Codes" ID="ID_423859036" CREATED="1549425394175" MODIFIED="1549426426859">
<edge STYLE="bezier"/>
<node TEXT="Easy" ID="ID_93398200" CREATED="1549425490878" MODIFIED="1549425662221">
<edge STYLE="bezier"/>
</node>
<node TEXT="Medium" ID="ID_673550388" CREATED="1549425497463" MODIFIED="1549425643297">
<edge STYLE="bezier"/>
</node>
<node TEXT="Hard" ID="ID_1020256588" CREATED="1549425503835" MODIFIED="1549425626370">
<edge STYLE="bezier"/>
</node>
</node>
<node TEXT="Interactive Software" ID="ID_36928936" CREATED="1549451752938" MODIFIED="1549451817203">
<edge STYLE="bezier"/>
<node TEXT="Android Apps" ID="ID_1430289388" CREATED="1549425672713" MODIFIED="1549426426859">
<edge STYLE="bezier"/>
</node>
<node TEXT="Desktop" ID="ID_1458400556" CREATED="1549451765625" MODIFIED="1549451817202">
<edge STYLE="bezier"/>
</node>
</node>
<node TEXT="VR  AR Apps" ID="ID_1540112602" CREATED="1549425707880" MODIFIED="1549426426859">
<edge STYLE="bezier"/>
</node>
</node>
<node TEXT="Formal Language Theory and Finite Automata " FOLDED="true" POSITION="right" ID="ID_300048044" CREATED="1566881027535" MODIFIED="1566881027535" Folded="true">
<edge COLOR="#6bf67b"/>
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Introduction to Formal language" ID="ID_1825190175" CREATED="1566881027535" MODIFIED="1566881027535" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Formal Language Theory Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1075542085" CREATED="1566553719105" MODIFIED="1566553719105">
<icon BUILTIN="stop-sign"/>
<node TEXT="Visualization (graphics) - Wikipedia" FOLDED="true" ID="ID_248839501" CREATED="1566553719105" MODIFIED="1566553719105" LINK="https://en.wikipedia.org/wiki/Visualization_(graphics)">
<node TEXT="As a subject in computer science scientific visualization is the use of interactive sensory representations typically visual of abstract data to reinforce cognition hypothesis building and reasoning. Data visualization is a related subcategory of visualization dealing with statistical graphics and geographic or spatial data (as in thematic cartography) that is abstracted in schematic form." ID="ID_566690373" CREATED="1566553719105" MODIFIED="1566553719105"/>
</node>
<node TEXT="A Formal Study of a Visual Language for the Visualization " FOLDED="true" ID="ID_65251604" CREATED="1566553719105" MODIFIED="1566553719105" LINK="https://www.researchgate.net/publication/3943513_A_Formal_Study_of_a_Visual_Language_for_the_Visualization_of_Document_Type_Definition">
<node TEXT="A Formal Study of a Visual Language for the Visualization of Document Type Definition.  thus establishing some practical links between visual language theory and classical language theory " ID="ID_7562094" CREATED="1566553719105" MODIFIED="1566553719105"/>
</node>
<node TEXT="Visualization and Interaction in the Computer Science " FOLDED="true" ID="ID_1262050570" CREATED="1566553719105" MODIFIED="1566553719105" LINK="https://www.academia.edu/2792453/Visualization_and_Interaction_in_the_Computer_Science_Formal_Languages_Course_withJFLAP">
<node TEXT="Visualization and Interaction in the Computer Science Formal Languages Course with JFLAP Magdalena Procopiuc1 Octavian Procopiuc and Susan H. Rodger1 Computer Science Department Box 90129 Duke University Durham North Carolina 27708-0129 rodger@cs.duke.edu ABSTRACT 2 Visualization The computer science formal languages course be- A picture of a concept can be easier to understand comes a more " ID="ID_1259163700" CREATED="1566553719105" MODIFIED="1566553719105"/>
</node>
<node TEXT="Theories in Information Visualization: What Why and How" FOLDED="true" ID="ID_1894915119" CREATED="1566553719105" MODIFIED="1566553719105" LINK="http://www.cc.gatech.edu/~john.stasko/papers/infovis10-ws-theory.pdf">
<node TEXT="Theories in Information Visualization: What Why and How Zhicheng Liu* and John Stasko&#xc2;&#xa7; School of Interactive Computing  GVU Center Georgia Institute of Technology ABSTRACT In this paper we explore the perceived absence and greater need for theories in information visualization through the perspectives of what why and how." ID="ID_1188017601" CREATED="1566553719105" MODIFIED="1566553719105"/>
</node>
<node TEXT="JFLAP: An Interactive Formal Languages and Automata Package" FOLDED="true" ID="ID_614827299" CREATED="1566553719105" MODIFIED="1566553719105" LINK="http://www.cs.duke.edu/csed/jflap/jflapbook/">
<node TEXT="This book is a hands-on guide through the Java Formal Language and Automata Package (JFLAP) an interactive visualization and teaching tool for formal languages. This book is intended as a supplement to an undergraduate automata theory course or an undergraduate compiler course. This book is not a textbook!" ID="ID_360059702" CREATED="1566553719105" MODIFIED="1566553719105"/>
</node>
<node TEXT="(PDF) JLambda: A Language for Interactive Visualization of " FOLDED="true" ID="ID_1378441930" CREATED="1566553719105" MODIFIED="1566553719105" LINK="https://www.researchgate.net/publication/228642884_JLambda_A_Language_for_Interactive_Visualization_of_Formal_Models">
<node TEXT="What is needed is language support for interactive visualization of formal models that allo ws users to navigate and query models based on visual representation of underlying formal structures " ID="ID_887779801" CREATED="1566553719105" MODIFIED="1566553719105"/>
</node>
<node TEXT="CiteSeerX &#xe2;&#x20ac;&#x201d; Visualization and Interaction in the Computer " FOLDED="true" ID="ID_1180417823" CREATED="1566553719105" MODIFIED="1566553719105" LINK="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.49.8099">
<node TEXT="CiteSeerX - Document Details (Isaac Councill Lee Giles Pradeep Teregowda): The computer science formal languages course becomes a more traditional computer science course by integrating visual and interactive tools into the course allowing students to gain hands-on experience with theoretical concepts. We explain how the tool JFLAP can be used in such a manner." ID="ID_1055705618" CREATED="1566553719105" MODIFIED="1566553719105"/>
</node>
<node TEXT="Data visualization - Wikipedia" FOLDED="true" ID="ID_423202705" CREATED="1566553719105" MODIFIED="1566553719105" LINK="https://en.wikipedia.org/wiki/Data_visualization">
<node TEXT="Data visualization is viewed by many disciplines as a modern equivalent of visual communication.It involves the creation and study of the visual representation of data.. To communicate information clearly and efficiently data visualization uses statistical graphics plots information graphics and other tools. Numerical data may be encoded using dots lines or bars to visually communicate a " ID="ID_26718033" CREATED="1566553719105" MODIFIED="1566553719105"/>
</node>
<node TEXT="Theoretical Models of the Role of Visualisation in " FOLDED="true" ID="ID_390807526" CREATED="1566553719105" MODIFIED="1566553719105" LINK="https://www.academia.edu/2117635/Theoretical_Models_of_the_Role_of_Visualisation_in_Learning_Formal_Reasoning">
<node TEXT="The introduction of a software tool Jape that uses visualisation Journal of Interactive Media in Education 2002 (3) Page 24 Theoretical models of the role of visualisation in learning Oliver Aczel techniques to support formal reasoning changed learning in a number of identifiable and explicable ways." ID="ID_689241151" CREATED="1566553719105" MODIFIED="1566553719105"/>
</node>
<node TEXT="Graduate Data Science Courses | Center for Data Science " FOLDED="true" ID="ID_1635094655" CREATED="1566553719105" MODIFIED="1566553719105" LINK="http://ds.cs.umass.edu/academics/grad-courses">
<node TEXT="COMPSCI 501: Formal Language Theory . Introduction to formal language theory. Topics include finite state languages context-free languages the relationship between language classes and formal machine models the Turing Machine model of computation theories of computability resource-bounded models and NP-completeness." ID="ID_1607791590" CREATED="1566553719105" MODIFIED="1566553719105"/>
</node>
<node TEXT="USE OF DATA VISUALISATION IN THE TEACHING OF" FOLDED="true" ID="ID_1788995779" CREATED="1566553719106" MODIFIED="1566553719106" LINK="http://www.iase-web.org/documents/SERJ/SERJ13(2)_Forbes.pdf">
<node TEXT="The wide availability of web browsers and the Java programming language in the late 1990s allowed dynamic and interactive visualisation of concepts to be incorporated seamlessly into wider instructional material. Two of the specific discussed in this paper were developed specifically for the New" ID="ID_1424029224" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="On the Use of Visualization in Formal Requirements " FOLDED="true" ID="ID_1436816215" CREATED="1566553719106" MODIFIED="1566553719106" LINK="http://sunnyday.mit.edu/papers/icre-02.pdf">
<node TEXT="The visualization may be created through slicing the basic formal model i.e. a selection based on dependences between the parts of the model or by filtering i.e. eliding parts of the model based on a common property or attribute. 4. Annotation Support The visualization may include only information" ID="ID_967956620" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
</node>
<node TEXT="Formal Language Theory Code#$D$#" FOLDED="true" ID="ID_1810016912" CREATED="1566553719106" MODIFIED="1566553719106">
<icon BUILTIN="stop-sign"/>
<node TEXT="Code - Wikipedia" FOLDED="true" ID="ID_515591243" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://en.wikipedia.org/wiki/Code">
<node TEXT="Semantics encoding of formal language A in formal language B is a method of representing all terms (e.g. programs or descriptions) of language A using language B. Electronic encoding transforms a signal into a code optimized for transmission or storage generally done with a codec. Neural encoding - the way in which information is represented " ID="ID_1641215194" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="Formal language - Wikipedia" FOLDED="true" ID="ID_993986558" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://en.wikipedia.org/wiki/Formal_language">
<node TEXT="A formal language is often defined by means of a formal grammar such as a regular grammar or context-free grammar which consists of its formation rules. The field of formal language theory studies primarily the purely syntactical aspects of such languages&#xe2;&#x20ac;&#x201d;that is their internal" ID="ID_1313667602" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="Chapter 6 Formal Language Theory - California Institute of " FOLDED="true" ID="ID_1626042497" CREATED="1566553719106" MODIFIED="1566553719106" LINK="http://www.its.caltech.edu/~matilde/FormalLanguageTheory.pdf">
<node TEXT="Formal Language Theory In this chapter we introduce formal language theory the computational theories of languages and grammars. The models are actually inspired by formal logic enriched with insights from the theory of computation. We begin with the de&#xef;&#xac;&#xfffd;nition of a language and then proceed to a rough" ID="ID_85192253" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="GitHub - PLASS-Lab/FLT-2019: Formal Language Theory Course " FOLDED="true" ID="ID_233370468" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://github.com/PLASS-Lab/FLT-2019">
<node TEXT="Formal Language Theory Course 2019. Contribute to PLASS-Lab/FLT-2019 development by creating an account on GitHub. Formal Language Theory Course 2019. Contribute to PLASS-Lab/FLT-2019 development by creating an account on GitHub.  Code. Issues 0. Pull requests 0. Projects 0 Security Insights Dismiss Join GitHub today." ID="ID_1548830406" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="Formal language theory: refining the Chomsky hierarchy" FOLDED="true" ID="ID_1907576411" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3367686/">
<node TEXT="1. Introduction. The field of formal language theory (FLT)&#xe2;&#x20ac;&#x201d;initiated by Noam Chomsky in the 1950s building on earlier work by Axel Thue Alan Turing and Emil Post&#xe2;&#x20ac;&#x201d;provides a measuring stick for linguistic theories that sets a minimal limit of descriptive adequacy." ID="ID_735552050" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="What is formal language theory? - Quora" FOLDED="true" ID="ID_1973355200" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://www.quora.com/What-is-formal-language-theory">
<node TEXT="Formal language theory is a system of ideas intended to explain languages and grammars as computational objects. It is based on set theory and its mathematical properties. For the average reader the field is difficult to penetrate because formal " ID="ID_746649018" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="Formal Language Theory - 1st Edition - Elsevier" FOLDED="true" ID="ID_611316862" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://www.elsevier.com/books/formal-language-theory/book/978-0-12-115350-2">
<node TEXT="Formal Language Theory: Perspectives and Open Problems focuses on the trends and major open problems on the formal language theory. The selection first ponders on the methods for specifying families of formal languages open problems about regular languages and generators of cones and cylinders." ID="ID_1922747992" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="Formal and informal language - English Grammar Today " FOLDED="true" ID="ID_1946801527" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://dictionary.cambridge.org/us/grammar/british-grammar/types-of-english-formal-informal-etc/formal-and-informal-language">
<node TEXT="Formal and informal language - English Grammar Today - a reference to written and spoken English grammar and usage - Cambridge Dictionary" ID="ID_623732850" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="Theoretical Physicist Finds Computer Code in String Theory " FOLDED="true" ID="ID_1179562459" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://www.youtube.com/watch?v=cvMlUepVgbA">
<node TEXT="Theoretical Physicist Finds Computer Code in String Theory  That&#xe2;&#x20ac;&#x2122;s a long-winded label for codes that are commonly used to remove errors in computer transmissions for example to correct " ID="ID_1640397997" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="What is the actual string of computer code that they " FOLDED="true" ID="ID_257852818" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://www.quora.com/What-is-the-actual-string-of-computer-code-that-they-apparently-found-in-string-theory-Does-this-mean-that-were-in-a-simulation">
<node TEXT="Fie! Fie! A pox on the house of pop science reporting! There is not literal computer code like lines of C++ source code or anything like that &#xe2;&#x20ac;&#x153;embedded in string theory.&#xe2;&#x20ac;&#xfffd; (Insert huge eyeroll here.) Do not listen to pop news reports or Heaven h" ID="ID_1553713816" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="Formal Languages and Compilers Lecture I: Introduction to " FOLDED="true" ID="ID_1920921024" CREATED="1566553719106" MODIFIED="1566553719106" LINK="http://www.inf.unibz.it/~artale/Compiler/Lectures/slide1.pdf">
<node TEXT="The Context of a Compiler A compiler is a program that reads a program written in one language&#xe2;&#x20ac;&#x201c;the source language&#xe2;&#x20ac;&#x201c;and translates it into an equivalent program in another language&#xe2;&#x20ac;&#x201c;the target language. In addition to a compiler other programs are needed to generate an executable code." ID="ID_1794094216" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="FORMAL LANGUAGES - math.tut.fi" FOLDED="true" ID="ID_1244897477" CREATED="1566553719106" MODIFIED="1566553719106" LINK="http://math.tut.fi/~ruohonen/FL.pdf">
<node TEXT="addition surveys of Lindenmayer system theory and the mathematical theory of codes are given. As a somewhat uncommon topic an overview of formal power series is included. Apart from being a nice algebraic alternative formalism they give a mechanism for gen-eralizing the concept of language in numerous ways by changing the underlying concept" ID="ID_1629084595" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
</node>
<node TEXT="Introduction to Formal language Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1747972399" CREATED="1566553719107" MODIFIED="1566553719107">
<icon BUILTIN="stop-sign"/>
<node TEXT="Intro to Data Visualization with R  ggplot2 - YouTube" FOLDED="true" ID="ID_372057665" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://www.youtube.com/watch?v=49fADBfcDD4">
<node TEXT="The R programming language is experiencing rapid increases in popularity and wide adoption across industries. This popularity is due in part to R&#xe2;&#x20ac;&#x2122;s rich and powerful data visualization " ID="ID_1050210726" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Visualization (graphics) - Wikipedia" FOLDED="true" ID="ID_1238080469" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://en.wikipedia.org/wiki/Visualization_(graphics)">
<node TEXT="As a subject in computer science scientific visualization is the use of interactive sensory representations typically visual of abstract data to reinforce cognition hypothesis building and reasoning. Data visualization is a related subcategory of visualization dealing with statistical graphics and geographic or spatial data (as in thematic cartography) that is abstracted in schematic form." ID="ID_1406694118" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="(PDF) JLambda: A Language for Interactive Visualization of " FOLDED="true" ID="ID_908724373" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://www.researchgate.net/publication/228642884_JLambda_A_Language_for_Interactive_Visualization_of_Formal_Models">
<node TEXT="What is needed is language support for interactive visualization of formal models that allo ws users to navigate and query models based on visual representation of underlying formal structures " ID="ID_678046219" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="&#xe2;&#x20ac;&#xab;&#xd7;&#x2014;&#xd7;&#x2022;&#xd7;&#x2022;&#xd7;&#x2122;&#xd7;&#xaa; &#xd7;&#xa9;&#xd7;&#x2122;&#xd7;&#xa2;&#xd7;&#x2022;&#xd7;&#xa8; &#xd7;&#x2018;&#xd7;&#xa7;&#xd7;&#x2022;&#xd7;&#xa8;&#xd7;&#xa1; Introduction to Interactive " FOLDED="true" ID="ID_1139463054" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://www.youtube.com/watch?v=Ddf5QlRnFDc">
<node TEXT="&#xd7;&#xa7;&#xd7;&#x2022;&#xd7;&#xa8;&#xd7;&#xa1; Introduction to Interactive Visualization in Virtual Environments. &#xd7;&#xa7;&#xd7;&#x2022;&#xd7;&#xa8;&#xd7;&#xa1; &#xd7;&#xa8;&#xd7;&#xfffd;&#xd7;&#xa9;&#xd7;&#x2022;&#xd7;&#x178; &#xd7;&#x17e;&#xd7;&#xa1;&#xd7;&#x2022;&#xd7;&#x2019;&#xd7;&#x2022; &#xd7;&#x2018;&#xd7;&#xfffd;&#xd7;&#xa7;&#xd7;&#x201c;&#xd7;&#x17e;&#xd7;&#x2122;&#xd7;&#x201d; &#xd7;&#x2018;&#xd7;&#xfffd;&#xd7;&#xa8;&#xd7;&#xa5; &#xd7;&#xa0;&#xd7;&#x153;&#xd7;&#x17e;&#xd7;&#x201c; &#xd7;&#x2018;&#xd7;&#x2018;&#xd7;&#x2122;&#xd7;&#xaa; &#xd7;&#x201d;&#xd7;&#xa1;&#xd7;&#xa4;&#xd7;&#xa8; &#xd7;&#x153;&#xd7;&#xa2;&#xd7;&#x2122;&#xd7;&#xa6;&#xd7;&#x2022;&#xd7;&#x2018; &#xd7;&#x2022;&#xd7;&#x2014;&#xd7;&#x201c;&#xd7;&#xa9;&#xd7;&#xa0;&#xd7;&#x2022;&#xd7;&#xaa; " ID="ID_224405104" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Interactive Visualisation of Formal Concept Lattices" FOLDED="true" ID="ID_690972145" CREATED="1566553719107" MODIFIED="1566553719107" LINK="http://ceur-ws.org/Vol-1244/GViP-paper6.pdf">
<node TEXT="computational analysis with interactive visualisation. Scalability is a key chal-lenge for visual analytics. Algorithms must scale to large data sets visualisations must make e cient and intelligible use of screen real-estate and both must be responsive for interactive use. The number of formal concepts derived from a" ID="ID_319673878" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Visualization and Interaction in the Computer Science " FOLDED="true" ID="ID_1333894725" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://www.academia.edu/2792453/Visualization_and_Interaction_in_the_Computer_Science_Formal_Languages_Course_withJFLAP">
<node TEXT="Visualization and Interaction in the Computer Science Formal Languages Course with JFLAP Magdalena Procopiuc1 Octavian Procopiuc and Susan H. Rodger1 Computer Science Department Box 90129 Duke University Durham North Carolina 27708-0129 rodger@cs.duke.edu ABSTRACT 2 Visualization The computer science formal languages course be- A picture of a concept can be easier to understand comes a more " ID="ID_609503374" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="20 Exploratory Data Analysis: Visualization | Lecture " FOLDED="true" ID="ID_371171349" CREATED="1566553719107" MODIFIED="1566553719107" LINK="http://www.hcbravo.org/IntroDataSci/bookdown-notes/exploratory-data-analysis-visualization.html">
<node TEXT="20 Exploratory Data Analysis: Visualization. We are now entering the last step of what we would want to do with a dataset before starting modeling using statistics or Machine Learning. We have seen manipulations and operations that prepare datasets into tidy (or normal form) compute summaries and join tables to obtain organized clean data tables that contain the observational units or " ID="ID_1622881479" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Introduction to Infographics and Data Visualization (MOOC " FOLDED="true" ID="ID_1074533809" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://knightcenter.utexas.edu/course/introduction-inforgraphics-and-data-visualization-january-2013">
<node TEXT="The course will have a theoretical component as we will cover the main rules of the discipline and also a practical one as you will learn how to use Adobe Illustrator to design basic infographics and mock ups for interactive visualizations. You do not need any previous experience in infographics and visualization to take this course." ID="ID_502068391" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Graduate Data Science Courses | Center for Data Science " FOLDED="true" ID="ID_1515691145" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://ds.cs.umass.edu/academics/grad-courses">
<node TEXT="COMPSCI 501: Formal Language Theory . Introduction to formal language theory. Topics include finite state languages context-free languages the relationship between language classes and formal machine models the Turing Machine model of computation theories of computability resource-bounded models and NP-completeness." ID="ID_1821713547" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Data Science with Python: Intro to Data Visualization with " FOLDED="true" ID="ID_1481786234" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://towardsdatascience.com/data-science-with-python-intro-to-data-visualization-and-matplotlib-5f799b7c6d82">
<node TEXT="Also there is an awesome interactive version of this chart available here in which you can play historic time series search for a certain country change the data on the axis and so on. Here is a video that shows how to use this interactive chart. However the idea here is to learn the fundamentals of Data Visualization and Matplotlib." ID="ID_111076816" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="CiteSeerX &#xe2;&#x20ac;&#x201d; Visualization and Interaction in the Computer " FOLDED="true" ID="ID_1499419674" CREATED="1566553719107" MODIFIED="1566553719107" LINK="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.49.8099">
<node TEXT="CiteSeerX - Document Details (Isaac Councill Lee Giles Pradeep Teregowda): The computer science formal languages course becomes a more traditional computer science course by integrating visual and interactive tools into the course allowing students to gain hands-on experience with theoretical concepts. We explain how the tool JFLAP can be used in such a manner." ID="ID_828817123" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Introduction - Data Visualization with D3.js Cookbook" FOLDED="true" ID="ID_381377698" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://subscription.packtpub.com/book/web_development/9781782162162/1/ch01lvl1sec08/introduction">
<node TEXT="Building Interactive Analytics in Minutes. Building Interactive Analytics in Minutes  For more formal introduction to the idea behind D3 see the Declarative Language Design for Interactive Visualization paper  the predecessor of D3.js also created by Mike Bostock and Jeff Heer of the Stanford Visualization Group can be found at http " ID="ID_1113074769" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
</node>
<node TEXT="Introduction to Formal language Code#$D$#" FOLDED="true" ID="ID_1591377018" CREATED="1566553719107" MODIFIED="1566553719107">
<icon BUILTIN="stop-sign"/>
<node TEXT="An Introduction to Formal Languages and Automata" FOLDED="true" ID="ID_1386071452" CREATED="1566553719107" MODIFIED="1566553719107" LINK="http://almuhammadi.com/sultan/books/Linz.5ed.pdf">
<node TEXT="An introduction to formal languages and automata / Peter Linz.&#xe2;&#x20ac;&#x201d;5th ed. p. cm. Includes bibliographical references and index. ISBN 978-1-4496-1552-9 (casebound) 1. Formal languages. 2. Machine theory. I. Title. QA267.3.L56 2011 005.13&#xe2;&#x20ac;&#x2122;1&#xe2;&#x20ac;&#x201d;dc22 2010040050 6048 Printed in the United States of America" ID="ID_918496689" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Code Switching Definition and Examples in Language" FOLDED="true" ID="ID_1065138347" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://www.thoughtco.com/code-switching-language-1689858">
<node TEXT="Code switching (also code-switching CS) is the practice of moving back and forth between two languages or between two dialects or registers of the same language at one time. Code switching occurs far more often in conversation than in writing. It is also called code-mixing and style-shifting." ID="ID_927570711" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Formal Languages Grammars and Automata - sti.uniurb.it" FOLDED="true" ID="ID_1388157151" CREATED="1566553719107" MODIFIED="1566553719107" LINK="http://www.sti.uniurb.it/aldini/publications/lfga.pdf">
<node TEXT="Formal languages are studied in linguistics and computer science. Computer science In computer science formal languages are used for the precise de nition of programming languages and therefore in the development of compilers. A compiler is a computer program (or set of programs) that transforms source code written in a programming language (the" ID="ID_1023490077" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Formal Languages and Compilers Lecture I: Introduction to " FOLDED="true" ID="ID_541960727" CREATED="1566553719108" MODIFIED="1566553719108" LINK="http://www.inf.unibz.it/~artale/Compiler/Lectures/slide1.pdf">
<node TEXT="The Context of a Compiler A compiler is a program that reads a program written in one language&#xe2;&#x20ac;&#x201c;the source language&#xe2;&#x20ac;&#x201c;and translates it into an equivalent program in another language&#xe2;&#x20ac;&#x201c;the target language. In addition to a compiler other programs are needed to generate an executable code." ID="ID_903752779" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="An Introduction to Formal Logic - English" FOLDED="true" ID="ID_748255175" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://www.thegreatcourses.com/courses/an-introduction-to-formal-logic.html">
<node TEXT="You may have seen logical arguments expressed with these arrows v&#xe2;&#x20ac;&#x2122;s backwards E&#xe2;&#x20ac;&#x2122;s upside down A&#xe2;&#x20ac;&#x2122;s and other inscrutable signs which can seem as bewildering as higher math or an ancient language. But An Introduction to Formal Logic shows that the symbols convey simple ideas compactly and become second nature with use. In case after " ID="ID_729666899" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="FORMAL LANGUAGES - math.tut.fi" FOLDED="true" ID="ID_518068127" CREATED="1566553719108" MODIFIED="1566553719108" LINK="http://math.tut.fi/~ruohonen/FL.pdf">
<node TEXT="Languages&#xe2;&#x20ac;&#xfffd;. They contain an introduction to the basic concepts and constructs as seen  surveys of Lindenmayer system theory and the mathematical theory of codes are given. As a somewhat uncommon topic an overview of formal power series is included.  In formal language theory de&#xef;&#xac;&#xfffd;ning languages and investigating languages via their" ID="ID_101449861" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="9781284077247: An Introduction to Formal Languages and " FOLDED="true" ID="ID_1459027809" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://www.abebooks.com/9781284077247/Introduction-Formal-Languages-Automata-Peter-1284077241/plp">
<node TEXT="AbeBooks.com: An Introduction to Formal Languages and Automata (9781284077247) by Peter Linz and a great selection of similar New Used and Collectible Books available now at great prices." ID="ID_1794184593" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="Formal language - Wikipedia" FOLDED="true" ID="ID_1368646582" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://en.wikipedia.org/wiki/Formal_language">
<node TEXT="In mathematics computer science and linguistics a formal language consists of words whose letters are taken from an alphabet and are well-formed according to a specific set of rules. The alphabet of a formal language consist of symbols letters or tokens that concatenate into strings of the language." ID="ID_1502549133" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="Theory of Computation 01 Introduction to Formal Languages " FOLDED="true" ID="ID_882287526" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://www.youtube.com/watch?v=fp0RKpQHBVw">
<node TEXT="#Call_9821876104 #Best_Institute_for_GATE #NTANET In this video you will learn about different languages and theory of computation which is the essential par" ID="ID_1882484285" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="The Difference of Formal and Informal Language - A " FOLDED="true" ID="ID_1063689039" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://www.aresearchguide.com/formal-vs-informal-language.html">
<node TEXT="By definition formal language is defined as being &#xe2;&#x20ac;&#x2dc;a language designed for use in situations where natural language (informal English language) is deemed to be unacceptable.. Learning when to best use formal language is all part of mastering the English language. In a business situation it is always best to be more formal." ID="ID_1518958860" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="R Examples" FOLDED="true" ID="ID_831926281" CREATED="1566553719108" MODIFIED="1566553719108" LINK="http://www.rexamples.com/">
<node TEXT="A collection of R code snippets with explanations. A set of basic examples can serve as an introduction to the language." ID="ID_1381314541" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="Alphabet (computer science) - Simple English Wikipedia " FOLDED="true" ID="ID_493814018" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://simple.wikipedia.org/wiki/Alphabet_(computer_science)">
<node TEXT="In computer science an alphabet is a finite non-empty set.The elements of an alphabet are called the letters or symbols of the alphabet.. An example of an alphabet is {&#xe2;&#x2c6;&#x2019; &#xe2;&#x2039;&#x2026;} which may be used for Morse code or {begin if else for while} which may be the keywords of a Programming language.. The set of natural numbers is not an alphabet because as it is not finite." ID="ID_1457563233" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
</node>
</node>
<node TEXT="introduction to language translation logic" ID="ID_1104599459" CREATED="1566881027542" MODIFIED="1566881027542" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="introduction to language translation logic Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1528798782" CREATED="1566553719108" MODIFIED="1566553719108">
<icon BUILTIN="stop-sign"/>
<node TEXT="Google Translate" FOLDED="true" ID="ID_1656289987" CREATED="1566553719108" MODIFIED="1566553719108" LINK="http://translate.google.com/">
<node TEXT="Googles free service instantly translates words phrases and web pages between English and over 100 other languages." ID="ID_1484685906" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="and Programming - Cengage" FOLDED="true" ID="ID_1201409365" CREATED="1566553719108" MODIFIED="1566553719108" LINK="http://cengage.com.cn/data/upfiles/catalog/Acad%20Asia%20Computer%20Science%20n%20Programming.pdf">
<node TEXT="Numbers Boolean Logic and Gates. 5. Computer Systems Organization. 6. An Introduction to System Software and Virtual Machines. 7. Computer Networks the Internet and the World Wide Web. 8. Information Security. 9. Introduction to High-Level Language Programming. 10. The Tower of Ba-bel: Multiple Programming Voices. 11. Compilers and Language " ID="ID_1698362603" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="CRITICAL THINKING - Fundamentals: Introduction to Critical " FOLDED="true" ID="ID_1569084942" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://www.youtube.com/watch?v=Cum3k-Wglfw">
<node TEXT="Geoff Pynn (Northern Illinois University) gets you started on the critical thinking journey. He tells you what critical thinking is what an argument is and" ID="ID_1397283272" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="Introduction to Linguistics - Scientific Study of Language " FOLDED="true" ID="ID_1738632217" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://ielanguages.com/linguistics.html">
<node TEXT="Linguistics Bibliography; Linguistics encompasses many fields related to language in general but my major concentrations are in second language acquisition (SLA) and language pedagogy. I received my Bachelors degree in French  Linguistics in 2004 and my Masters degree in Linguistics  Teaching English as a Second Language in 2007." ID="ID_1782294051" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="A TEXTBOOK OF TRANSLATION - ILTS" FOLDED="true" ID="ID_570148337" CREATED="1566553719108" MODIFIED="1566553719108" LINK="http://ilts.ir/Content/ilts.ir/Page/142/ContentImage/A%20Textbook%20of%20Translation%20by%20Peter%20Newmark%20(1).pdf">
<node TEXT="A TEXTBOOK OF TRANSLATION Peter Newmark W *MRtt SHANGHAI FOREIGN LANGUAGE EDUCATION PRESS.  language into the interpersonal function stating that there is no distinction between the  11 The Use of Componeniial Analysis in Translation U4 Introduction 114 Lexical words 317 Cultural words 119 Synonyms 120" ID="ID_1071385027" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="Visual programming language - Wikipedia" FOLDED="true" ID="ID_763097673" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://en.wikipedia.org/wiki/Visual_programming_language">
<node TEXT="In computing a visual programming language (VPL) is any programming language that lets users create programs by manipulating program elements graphically rather than by specifying them textually. A VPL allows programming with visual expressions spatial arrangements of text and graphic symbols used either as elements of syntax or secondary notation.For example many VPLs (known as dataflow " ID="ID_1551271133" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="Codesys 01 Intro and Ladder - YouTube" FOLDED="true" ID="ID_601432740" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://www.youtube.com/watch?v=2tX6gumm2zg">
<node TEXT="Opening a new project for simulation one rung of Ladder Code and Visualisation." ID="ID_1299189397" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="Computer science - Programming languages - Quizlet" FOLDED="true" ID="ID_9350619" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://quizlet.com/76552039/computer-science-programming-languages-flash-cards/">
<node TEXT="High level translation software. Converts each file of source code in turn and executes it on the (specific) CPU usually one statement at a time but does not create the actual machine code. It identifies exactly where the problem is as it goes through all the lines &#xe2;&#x2020;&#x2019; Debugging (this is what Visual Basic uses)." ID="ID_374665775" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="Google Translate - Wikipedia" FOLDED="true" ID="ID_1819010382" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://en.wikipedia.org/wiki/Google_Translate">
<node TEXT="Google Translate is a free multilingual machine translation service developed by Google to translate text.It offers a website interface mobile apps for Android and iOS and an API that helps developers build browser extensions and software applications. Google Translate supports over 100 languages at various levels and as of May 2017 serves over 500 million people daily." ID="ID_1400400852" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="3. Fifteen exercises (with answers) | Introduction to Logic" FOLDED="true" ID="ID_1016926416" CREATED="1566553719108" MODIFIED="1566553719108" LINK="http://logic.umwblogs.org/arguments-and-non-arguments/exercises/more-argument-non-argument-examples/">
<node TEXT="3. Fifteen Exercises (and answers) The following passages contain a mix of arguments and non arguments. Try to identify what each is. 1. Conditionals are included in the list of non-arguments because they can feel like arguments." ID="ID_257176348" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="Learn the Latest Tech Skills; Advance Your Career | Udacity" FOLDED="true" ID="ID_812261553" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://www.udacity.com/">
<node TEXT="Advance your career with online courses in programming data science artificial intelligence digital marketing and more. Built with industry leaders." ID="ID_1129081756" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="Introduction to Logic: Problems and solutions - nptel.ac.in" FOLDED="true" ID="ID_1894693263" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://nptel.ac.in/courses/109104040/ExerciseswithAnswersNPTEL2014.pdf">
<node TEXT="8. Since particle like behavior and wave like behavior are the only properties that we ascribe to light and since these properties now are recognized to belong not to light" ID="ID_1072756009" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
</node>
<node TEXT="introduction to language translation logic Code#$D$#" FOLDED="true" ID="ID_314518912" CREATED="1566553719108" MODIFIED="1566553719108">
<icon BUILTIN="stop-sign"/>
<node TEXT="Translator (computing) - Wikipedia" FOLDED="true" ID="ID_218718499" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://en.wikipedia.org/wiki/Translator_(computing)">
<node TEXT="A translator or programming language processor is a generic term that could refer to a compiler assembler or interpreter; anything that converts code from one language into another. These include translations between high-level and human-readable computer languages such as C++ and Java intermediate-level languages such as Java bytecode low-level languages such as the assembly language and " ID="ID_1625588260" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="Google Translate" FOLDED="true" ID="ID_716057421" CREATED="1566553719108" MODIFIED="1566553719108" LINK="http://translate.google.com/">
<node TEXT="Googles free service instantly translates words phrases and web pages between English and over 100 other languages." ID="ID_20067452" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="Part 2: Localization and Language Fallback Code Examples " FOLDED="true" ID="ID_1099605771" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://blogs.oracle.com/pdit-cas/part-2:-localization-and-language-fallback-code-examples">
<node TEXT="Part 2: Localization and Language Fallback Code Examples. Mark Fincham.  (country code / language page requested by the user) and the path to the file from the URL and send these values to the wrapper.  Package all asset translation filtering logic into a single class that can be reused by the Wrapper directly and by a taglibrary that is " ID="ID_1423368279" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="Formal Logic/Sentential Logic/Translations - Wikibooks " FOLDED="true" ID="ID_1057756161" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://en.wikibooks.org/wiki/Formal_Logic/Sentential_Logic/Translations">
<node TEXT="Formal Logic/Sentential Logic/Translations. From Wikibooks open books for an open world  The page The Sentential Language gave a very brief look at translation between English and . We look at this in more detail here." ID="ID_34948666" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="LX 502 - Handout PL Examples - bu.edu" FOLDED="true" ID="ID_1141243115" CREATED="1566553719108" MODIFIED="1566553719108" LINK="http://www.bu.edu/linguistics/UG/course/lx502/_docs/lx502-propositional%20logic.pdf">
<node TEXT="3. Propositional Logic (PL) 3.1. Introduction Propositional logic is the logical language of propositions. We are going to use PL as our metalanguage to describe English (the object language)&#xe2;&#x20ac;&#x201d;in particular the meaning of English sentences. We are going to use PL because it is unambiguous and fully determined." ID="ID_785718115" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="TRANSLATIONS IN SENTENTIAL LOGIC - UMass Amherst" FOLDED="true" ID="ID_550890380" CREATED="1566553719108" MODIFIED="1566553719108" LINK="http://courses.umass.edu/phil110-gmh/text/c04_3-99.pdf">
<node TEXT="In the present chapter we discuss how to translate a variety of English state- ments into the language of sentential logic. From the viewpoint of sentential logic there are five" ID="ID_961554319" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="Section 6.1 Symbols and Translation - thinkingshop.com" FOLDED="true" ID="ID_1137461572" CREATED="1566553719108" MODIFIED="1566553719108" LINK="http://thinkingshop.com/Clarion/logic/pdf/Clarion_Logic_CH6_Notes.pdf">
<node TEXT="Section 6.1 Symbols and Translation . Terms to learn: &#xe2;&#x20ac;&#xa2; operators/connectives  Clarion Logic Chapter 6 Notes translate statements that depend on subtleties of expression. o.  interpretation of a conditional and any inferential connection expressed in a conditional statement. In ordinary language we usually interpret the conditional" ID="ID_573488854" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="Part 1: Symbolic Logic (The basics letters operators " FOLDED="true" ID="ID_740414900" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://www.youtube.com/watch?v=1asxHpewYi8">
<node TEXT="Translating sentences symbols operators. How to express opposing ideas in English: despite although nevertheless in spite of" ID="ID_1472734559" CREATED="1566553719108" MODIFIED="1566553719108"/>
</node>
<node TEXT="Introduction to Language | Boundless Psychology" FOLDED="true" ID="ID_1010319613" CREATED="1566553719108" MODIFIED="1566553719108" LINK="https://courses.lumenlearning.com/boundless-psychology/chapter/introduction-to-language/">
<node TEXT="Language is the ability to produce and comprehend both spoken and written (and in the case of sign language signed) words. Understanding how language works means reaching across many branches of psychology&#xe2;&#x20ac;&#x201d;everything from basic neurological functioning to high-level cognitive processing." ID="ID_167230088" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Binary translation - Wikipedia" FOLDED="true" ID="ID_1375390059" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://en.wikipedia.org/wiki/Binary_translation">
<node TEXT="A translator using static binary translation aims to convert all of the code of an executable file into code that runs on the target architecture without having to run the code first as is done in dynamic binary translation. This is very difficult to do correctly since not all the code can be discovered by the translator." ID="ID_275642921" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="An Introduction to Formal Logic - Open Textbook Library" FOLDED="true" ID="ID_991979650" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://open.umn.edu/opentextbooks/textbooks/54">
<node TEXT="The simplification comes at a cost and different formal languages are suited to translating different parts of natural language. The book is designed to provide a semesters worth of material for an introductory college course. It would be possible to use the book only for sentential logic by skipping chapters 4-5 and parts of chapter 6." ID="ID_69472008" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Language Translation and Culture - ipedr.com" FOLDED="true" ID="ID_185869126" CREATED="1566553719109" MODIFIED="1566553719109" LINK="http://www.ipedr.com/vol33/017-ICLMC2012-L00062.pdf">
<node TEXT="Keywords: language culture translation bridge censorship 1. Introduction Studying on language culture and translation and the relationship between them are valuable issues due to the importance of human communication in the world. The variety of languages with different cultures" ID="ID_194009847" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
</node>
</node>
<node TEXT="Essentials of translation" ID="ID_1724611190" CREATED="1566881027544" MODIFIED="1566881027544" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="Alphabets and languages" ID="ID_1719402102" CREATED="1566881027544" MODIFIED="1566881027544" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Alphabets and languages Finite Automata Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1570921140" CREATED="1566553719109" MODIFIED="1566553719109">
<icon BUILTIN="stop-sign"/>
<node TEXT="Alphabets Strings Languages (Formal Language) Automata " FOLDED="true" ID="ID_645472710" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://www.youtube.com/watch?v=mAmZvn9lKYk">
<node TEXT="Alphabets Strings Languages (Formal Language) Automata Engineers Hub.  The interactive transcript could not be loaded.  1 Automata : Alphabet String and Language (Introduction) " ID="ID_1042635993" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="1 Automata : Alphabet String and Language (Introduction " FOLDED="true" ID="ID_1384650577" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://www.youtube.com/watch?v=BrDowMQljl0">
<node TEXT="This video lecture is produced by S. Saurabh. He is B.Tech from IIT and MS from USA In this lecture you will learn 1. Introduction of theory of computation 2. Alphabets 3. strings 4. language To " ID="ID_1886943017" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Increasing Visualization and Interaction in the Automata " FOLDED="true" ID="ID_50191066" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://www.researchgate.net/publication/2369575_Increasing_Visualization_and_Interaction_in_the_Automata_Theory_Course">
<node TEXT="JFLAP is one of the projects that shares most of our goals. Its main motivation is teaching and the current emphasis is in animation and interactive visualisation of automata theory concepts [8 " ID="ID_717847574" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Automata theory - Wikipedia" FOLDED="true" ID="ID_713686923" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://en.wikipedia.org/wiki/Automata_theory">
<node TEXT="Automata theory is the study of abstract machines and automata as well as the computational problems that can be solved using them. It is a theory in theoretical computer science and discrete mathematics (a subject of study in both mathematics and computer science).The word automata (the plural of automaton) comes from the Greek word &#xce;&#xb1;&#xe1;&#xbd;&#xfffd;&#xcf;&#x201e;&#xcf;&#x152;&#xce;&#xbc;&#xce;&#xb1;&#xcf;&#x201e;&#xce;&#xb1; which means self-acting." ID="ID_206691419" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Regular Languages | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_512942030" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://brilliant.org/wiki/regular-languages/">
<node TEXT="A regular language is a language that can be expressed with a regular expression or a deterministic or non-deterministic finite automata or state machine. A language is a set of strings which are made up of characters from a specified alphabet or set of symbols. Regular languages are a subset of the set of all strings. Regular languages are used in parsing and designing programming languages " ID="ID_1845637106" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="FAdo Interactive Tools for Learning Formal Computational " FOLDED="true" ID="ID_1013781555" CREATED="1566553719109" MODIFIED="1566553719109" LINK="http://www.dcc.fc.up.pt/~nam/publica/fado_envc05.pdf">
<node TEXT="FAdo: Interactive Tools for Learning Formal  Finite automata can be deterministic (DFA) or non-deterministic (NDFA). All three notations can represent the same set of languages. In FAdo we can manipulate  3 Interactive Visualisation Currently the FAdo graphical environment allows the editing and visualisation of di-" ID="ID_191924507" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Fifty years of automata simulation: a review" FOLDED="true" ID="ID_465914536" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://users.cs.duke.edu/~rodger/jflappapers/ChakrabortyX2011.pdf">
<node TEXT="Fifty Years of Automata Simulation: A Review 62cm a Inroads 2011 December &#xe2;&#x20ac;&#xa2; Vol. 2 &#xe2;&#x20ac;&#xa2; No. 4 tomata. In this language the description of a finite automaton is writ-ten in a formal textbook-like way (Figure 4). A finite automaton mod-eled in this language is compiled by using a fast single-pass compiler." ID="ID_1671854413" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Finite Automata (FA) - asethome.org" FOLDED="true" ID="ID_100530927" CREATED="1566553719109" MODIFIED="1566553719109" LINK="http://www.asethome.org/fa/FA_TransitionGraphs.htm">
<node TEXT="The above notation for finite automata is given in Daniel I. Cohen 1997 Introduction to Computer Theory  2 nd Edition Finite automata can be drawn with different notations. The above FA for a*ba* is drawn below in the notation of Hopcroft Motwani  Ullman (2007)Introduction to Automata Theory Languages and Computation." ID="ID_1029544779" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Finite-state machine - Wikipedia" FOLDED="true" ID="ID_1496590429" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://en.wikipedia.org/wiki/Finite_automaton">
<node TEXT="A finite-state machine (FSM) or finite-state automaton (FSA plural: automata) finite automaton or simply a state machine is a mathematical model of computation.It is an abstract machine that can be in exactly one of a finite number of states at any given time. The FSM can change from one state to another in response to some external inputs; the change from one state to another is called a " ID="ID_319357574" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="(PDF) FAdo: Interactive Tools for Learning Formal " FOLDED="true" ID="ID_145953664" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://www.academia.edu/2757259/FAdo_Interactive_Tools_for_Learning_Formal_Computational_Models">
<node TEXT="FAdo: Interactive Tools for Learning Formal Computational Models&#xe2;&#x2c6;&#x2014; Rog&#xc2;&#xb4;erio Reis Nelma Moreira DCC-FC LIACC Universidade do Porto R. do Campo Alegre 823 4150 Porto Portugal {rvrnam}@ncc.up.pt Abstract FAdo1 is an ongoing project which aims the development of an interactive en- vironment for symbolic manipulation of formal languages." ID="ID_532353541" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="FAdo and GUItar: Tools for Automata Manipulation and " FOLDED="true" ID="ID_1320096208" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://www.researchgate.net/publication/267199057_FAdo_and_GUItar_Tools_for_Automata_Manipulation_and_Visualization">
<node TEXT="[Show full abstract] of a pedagogical tool for teaching automata theory and formal languages. For the graphical visualization and interactive manipulation a new interface application GUItar is " ID="ID_579438660" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Improving the Capabilities of JFLAP Creating Effective " FOLDED="true" ID="ID_1371160938" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://www2.cs.duke.edu/education/undergrad/assets_research/2014_ian_mcmahon_thesis.pdf">
<node TEXT="countries have downloaded JFLAP. With its graphic visualization tools to aid in the learning of formal languages finite automata Turing machines grammars parsing and L-systems JFLAP provides for a comprehensive framework. Started under Professor Susan Rodger at Rensselaer Polytechnic Institute in the early 1990s as a" ID="ID_1581570849" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
</node>
<node TEXT="Alphabets and languages Finite Automata Code#$D$#" FOLDED="true" ID="ID_996438682" CREATED="1566553719109" MODIFIED="1566553719109">
<icon BUILTIN="stop-sign"/>
<node TEXT="Alphabet (formal languages) - Wikipedia" FOLDED="true" ID="ID_643823894" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://en.wikipedia.org/wiki/Alphabet_%28formal_languages%29">
<node TEXT="Alphabets are important in the use of formal languages automata and semiautomata. In most cases for defining instances of automata such as deterministic finite automata (DFAs) it is required to specify an alphabet from which the input strings for" ID="ID_1666245458" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="1 Automata : Alphabet String and Language (Introduction " FOLDED="true" ID="ID_167746044" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://www.youtube.com/watch?v=BrDowMQljl0">
<node TEXT="This video lecture is produced by S. Saurabh. He is B.Tech from IIT and MS from USA In this lecture you will learn 1. Introduction of theory of computation 2. Alphabets 3. strings 4. language To " ID="ID_1871168474" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Chapter 1 AUTOMATA and LANGUAGES - ETH Z" FOLDED="true" ID="ID_1711178390" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://disco.ethz.ch/courses/ws0607/eventsystems/lecture/chap1.pdf">
<node TEXT="Designing Finite Automata: Examples 1) Binary Alphabet {01} Language consists of all strings with odd number of ones. 2) &#xce;&#xa3;= {01} Language consists of all strings with substring &#xe2;&#x20ac;&#x153;001&#xe2;&#x20ac;&#xfffd; for example 100101 but not 1010110101. More examples in exercises&#xe2;&#x20ac;&#xa6;" ID="ID_1929748727" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Introduction to Theory Of Computation ll What is Symbol " FOLDED="true" ID="ID_1676106832" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://www.youtube.com/watch?v=zGlc6_zrc6U">
<node TEXT="Theory Of Computation Symbol Alphabet String Language Finite Automata TOC Basics Of TOC Introduction To Theory Of Computation GOOD NEWS FOR COMPUTER ENGINEERS INTRODUCING 5-MINUTES ENGINEERING " ID="ID_795542752" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Automata  languages - DISCO" FOLDED="true" ID="ID_1643619420" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://disco.ethz.ch/courses/des/lectures/des_chapter1-4on1.pdf">
<node TEXT="regular language context-free language turing machine Part 1 Automata  languages A primer on the Theory of Computation De&#xef;&#xac;&#xfffd;nition Finite Automata Part I: Regular Languages" ID="ID_1863535644" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Automata Theory : Deterministic Non Deterministic Finite " FOLDED="true" ID="ID_1528440480" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://www.elprocus.com/automata-theory-terminologies-formal-languages-applications/">
<node TEXT="Formal language is used to model a part of the natural language such as syntax etc&#xe2;&#x20ac;&#xa6;Formal languages are defined by finite state automata. There are two main perspectives of Finite state automata- Acceptors that can tell if a string is in the language and the second one is the generator that produces only the strings in the language." ID="ID_980652169" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Regular language - Wikipedia" FOLDED="true" ID="ID_1721931676" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://en.wikipedia.org/wiki/Regular_language">
<node TEXT="All finite languages are regular; in particular the empty string language {&#xce;&#xb5;} = &#xc3;&#x2dc;* is regular. Other typical examples include the language consisting of all strings over the alphabet {a b} which contain an even number of as or the language consisting of all strings of the form: several as followed by several bs.A simple example of a language that is not regular is the set of strings { a n " ID="ID_1227130330" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Alphabet (computer science) - Simple English Wikipedia " FOLDED="true" ID="ID_1539857258" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://simple.wikipedia.org/wiki/Alphabet_(computer_science)">
<node TEXT="In computer science an alphabet is a finite non-empty set. The elements of an alphabet are called the letters or symbols of the alphabet. An example of an alphabet is {&#xe2;&#x2c6;&#x2019; &#xe2;&#x2039;&#x2026;} which may be used for Morse code or {begin if else for while} which may be the keywords of a Programming language." ID="ID_1070275092" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="One Minute To Learn Programming: Finite Automata" FOLDED="true" ID="ID_69835900" CREATED="1566553719109" MODIFIED="1566553719109" LINK="http://www.cs.cmu.edu/afs/cs.cmu.edu/academic/class/15251-s05/Site/Materials/Lectures/Lecture09/lecture09.pdf">
<node TEXT="Lecture 9 Feb 8 2005 Carnegie Mellon University Steven Rudich CS 15-251 Spring 2005 Great Theoretical Ideas In Computer Science b b a b a a a b a b One Minute To Learn Programming:" ID="ID_1437007373" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="NPTEL :: Computer Science and Engineering - Theory of " FOLDED="true" ID="ID_935701340" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://www.nptel.ac.in/courses/106103070/">
<node TEXT="The notion of natural languages like English Hindi etc. is familiar to us. Informally language can be defined as a system suitable for expression of certain ideas facts or concepts which includes a set of symbols and rules to manipulate these. The languages we consider for our discussion is an abstraction of natural languages." ID="ID_312943500" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Finite Automata - macs.hw.ac.uk" FOLDED="true" ID="ID_1115359890" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://www.macs.hw.ac.uk/~markl/teaching/AUTOMATA/kleene.pdf">
<node TEXT="automata recognising the same language are isomorphic provedin Chapter 6. Kleene&#xe2;&#x20ac;&#x2122;s Theorem is the &#xef;&#xac;&#xfffd;rst main theorem of theoretical computer science whereas the second theorem can be used to show that every recognisable" ID="ID_1703888035" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
<node TEXT="Regular languages and finite automata - GeeksforGeeks" FOLDED="true" ID="ID_932266070" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://www.geeksforgeeks.org/regular-languages-and-finite-automata-gq/">
<node TEXT="Definition of a language L with alphabet {a} is given as following. L=  GATE-CS-2009 Regular languages and finite automata Discuss it. Question 10 Explanation:  Writing code in comment? Please use ide.geeksforgeeks.org generate link and share the link here." ID="ID_1081367693" CREATED="1566553719109" MODIFIED="1566553719109"/>
</node>
</node>
</node>
<node TEXT="Finite representation of language" ID="ID_184116098" CREATED="1566881027547" MODIFIED="1566881027547" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Finite representation of language Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1360518507" CREATED="1566553719109" MODIFIED="1566553719109">
<icon BUILTIN="stop-sign"/>
<node TEXT="Interactive visualization - Wikipedia" FOLDED="true" ID="ID_1653036908" CREATED="1566553719109" MODIFIED="1566553719109" LINK="https://en.wikipedia.org/wiki/Interactive_visualization">
<node TEXT="Interactive visualization or interactive visualisation is a branch of graphic visualization in computer science that involves studying how humans interact with computers to create graphic illustrations of information and how this process can be made more efficient.. For a visualization to be considered interactive it must satisfy two criteria: Human input: control of some aspect of the visual " ID="ID_1148914412" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Motivating Representations - YouTube" FOLDED="true" ID="ID_703860195" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://www.youtube.com/watch?v=fSuwYMaNz_s">
<node TEXT="G. Williamson - Character formulas in the modular representation theory of algebraic groups - Duration: 1:01:45. Institut des Hautes &#xc3;&#x2030;tudes Scientifiques (IH&#xc3;&#x2030;S) 1776 views" ID="ID_155117900" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Visualization (graphics) - Wikipedia" FOLDED="true" ID="ID_598279832" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://en.wikipedia.org/wiki/Visualization_(graphics)">
<node TEXT="As a subject in computer science scientific visualization is the use of interactive sensory representations typically visual of abstract data to reinforce cognition hypothesis building and reasoning. Data visualization is a related subcategory of visualization dealing with statistical graphics and geographic or spatial data (as in thematic cartography) that is abstracted in schematic form." ID="ID_891763553" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Interactive Visualization of Large Finite Element Models " FOLDED="true" ID="ID_247550734" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://www.researchgate.net/publication/2900485_Interactive_Visualization_of_Large_Finite_Element_Models">
<node TEXT="Interactive visualization of those models for pre- and postprocessing applications cannot be achieved by brute force rendering of all triangles on even advanced graphics hardware." ID="ID_1691699123" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Interactive High-Quality Visualization of Higher-Order " FOLDED="true" ID="ID_1827478428" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://www.researchgate.net/publication/51992302_Interactive_High-Quality_Visualization_of_Higher-Order_Finite_Elements">
<node TEXT="We present a GPU-based ray-tracing system for the accurate and interactive visualization of cut-surfaces through 3D simulations of physical processes created from spectral/hp high-order finite " ID="ID_394075720" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Top 4 Limitations of Data Visualization Tools - Yseop" FOLDED="true" ID="ID_871500720" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://yseop.com/blog/top-4-limitations-of-data-visualization-tools-2/">
<node TEXT="And while data visualization tools are meant to help analysts see trends and understand data there are significant limitations that can become problematic as data sets grow. Amongst these problems below are the top 4 limitations of your conventional data visualization tools and solutions to those problems. 1." ID="ID_415366659" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Technology in Action Chapter 10 Flashcards | Quizlet" FOLDED="true" ID="ID_1769827651" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://quizlet.com/208681807/technology-in-action-chapter-10-flash-cards/">
<node TEXT="Start studying Technology in Action Chapter 10. Learn vocabulary terms and more with flashcards games and other study tools.  Which of the following provides a visual representation of the patterns of an algorithm? a) Flow analysis b) Flowchart c) Pseudocode  Technology in Action - Chapter 12 45 Terms. marymorales117." ID="ID_81744412" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Lecture 04-Numerical method: Finite Difference Approach " FOLDED="true" ID="ID_1484333413" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://www.youtube.com/watch?v=vWiaOcTnOwo">
<node TEXT="Finite difference representation of partial derivatives.  Lecture 04-Numerical method: Finite Difference Approach  How to learn any language in six months " ID="ID_52778400" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Finite-state machine - Wikipedia" FOLDED="true" ID="ID_265124020" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://en.wikipedia.org/wiki/Finite_state_machine">
<node TEXT="A finite state machine has the same computational power as a Turing machine that is restricted such that its head may only perform read operations and always has to move from left to right. That is each formal language accepted by a finite state machine is accepted by such a kind of restricted Turing machine and vice versa." ID="ID_784241669" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Mathematical Representations 1 Running head: MATHEMATICAL " FOLDED="true" ID="ID_1535035601" CREATED="1566553719110" MODIFIED="1566553719110" LINK="http://mason.gmu.edu/~gsalkind/portfolio/products/857LitReview.pdf">
<node TEXT="Mathematical Representations 2 Introduction Representation received increased attention when it was added as a new process standard in the National Council of Teachers of Mathematics&#xe2;&#x20ac;&#x2122; (NCTM) Principles and Standards for School Mathematics (2000).&#xe2;&#x20ac;&#x153;The ways in which mathematical ideas are represented is" ID="ID_74773498" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Context Free Grammar Visualization Using SVG - svgopen.org" FOLDED="true" ID="ID_1414421192" CREATED="1566553719110" MODIFIED="1566553719110" LINK="http://www.svgopen.org/2009/papers/58-Interactive_Documentation_using_JavaScript_and_SVG/">
<node TEXT="Context free grammars are usually described in Backus Naur Form (BNF) and are a common part of computer programming language specifications. Visual representations of CFG productions are sometimes used in documentation to give a high-level overview of the different parts of a language that is easy to understand yet comprehensive in that it describes the full power of the language." ID="ID_1995813865" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Wolfram|Alpha Examples: Continued Fractions" FOLDED="true" ID="ID_679452178" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://www.wolframalpha.com/examples/mathematics/number-theory/continued-fractions/">
<node TEXT="The second is recursively defined as the reciprocal of the continued fraction form of the reciprocal of the original numbers fractional part. Rational numbers can be represented by finite continued fractions while irrationals require infinitely deep representations. Wolfram|Alpha can be used to convert between and utilize these representations." ID="ID_1827626043" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
</node>
<node TEXT="Finite representation of language Code#$D$#" FOLDED="true" ID="ID_23615650" CREATED="1566553719110" MODIFIED="1566553719110">
<icon BUILTIN="stop-sign"/>
<node TEXT="1 Finite Representations of Languages - Computer Science" FOLDED="true" ID="ID_1521783028" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://www.cs.unc.edu/~plaisted/comp455/slides/representations1.8.pdf">
<node TEXT="1 Finite Representations of Languages  Language generators have a hard time testing if a string is in the lan-guage. There are uncountably many languages over a nonempty set but only countably many representations in a nite set of symbols. Therefore most languages will never have a nite representation. 1.1 Regular Expressions" ID="ID_991980352" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="List of ISO 639-1 codes - Wikipedia" FOLDED="true" ID="ID_217705687" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">
<node TEXT="ISO 639-2/T: three-letter codes for the same languages as 639-1; ISO 639-2/B: three-letter codes mostly the same as 639-2/T but with some codes derived from English names rather than native names of languages (in the following table these differing codes are highlighted in boldface)" ID="ID_1900382463" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Finite-state machine - Wikipedia" FOLDED="true" ID="ID_1882531087" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://en.wikipedia.org/wiki/Finite_state_machine">
<node TEXT="A finite state machine has the same computational power as a Turing machine that is restricted such that its head may only perform read operations and always has to move from left to right. That is each formal language accepted by a finite state machine is accepted by such a kind of restricted Turing machine and vice versa." ID="ID_1066003424" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Finite Languages for the Representation of Finite Graphs " FOLDED="true" ID="ID_11989379" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://www.sciencedirect.com/science/article/pii/S0022000096900136">
<node TEXT="We introduce a new way of specifying graphs: through languages i.e. sets of strings. The strings of a given (finite prefix-free) language represent the vertices of the graph; whether or not there is an edge between the vertices represented by two strings is determined by the pair of symbols at the first position in these strings where they differ." ID="ID_903979775" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Hereditarily Finite Representations of Natural Numbers and " FOLDED="true" ID="ID_1293187214" CREATED="1566553719110" MODIFIED="1566553719110" LINK="http://www.cse.unt.edu/~tarau/research/bijectiveNSF/slides_msfp.pdf">
<node TEXT="Hereditarily Finite Representations of Natural Numbers and Self-Delimiting Codes Parenthesis Language Encoding of Hereditarily Finite Types as a Self-Delimiting code" ID="ID_1571728124" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Number Systems and Number Representation" FOLDED="true" ID="ID_1515706006" CREATED="1566553719110" MODIFIED="1566553719110" LINK="http://www.cs.princeton.edu/courses/archive/spr15/cos217/lectures/03_NumberSystems.pdf">
<node TEXT="&#xe2;&#x20ac;&#xa2; Finite representation of unsigned integers &#xe2;&#x20ac;&#xa2; Finite representation of signed integers &#xe2;&#x20ac;&#xa2; Finite representation of rational numbers (if time) Why? &#xe2;&#x20ac;&#xa2; A power programmer must know number systems and data representation to fully understand C&#xe2;&#x20ac;&#x2122;s primitive data types Primitive values and the operations on them" ID="ID_1534947645" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Non-deterministic Finite Automaton - tutorialspoint.com" FOLDED="true" ID="ID_671823073" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://www.tutorialspoint.com/automata_theory/non_deterministic_finite_automaton">
<node TEXT="As it has finite number of states the machine is called Non-deterministic Finite Machine or Non-deterministic Finite Automaton. Formal Definition of an NDFA. An NDFA can be represented by a 5-tuple (Q &#xe2;&#x2c6;&#x2018; &#xce;&#xb4; q 0 F) where &#xe2;&#x2c6;&#x2019; Q is a finite set of states. &#xe2;&#x2c6;&#x2018; is a finite set of symbols called the alphabets." ID="ID_1290471388" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="finite automata - Finiteness of Regular Language - Stack " FOLDED="true" ID="ID_1133665272" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://stackoverflow.com/questions/20803894/finiteness-of-regular-language">
<node TEXT="The word finite in finite automata significance the presence of finite amount of memory in automata for the class of regular languages hence only finite (or says bounded) amount of information can be stored at any instance of time while processing a string of language. In finite automata memory is present in the form of states only " ID="ID_680776355" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Deterministic Finite Automata - cse.chalmers.se" FOLDED="true" ID="ID_176056290" CREATED="1566553719110" MODIFIED="1566553719110" LINK="http://www.cse.chalmers.se/~coquand/AUTOMATA/o2.pdf">
<node TEXT="Deterministic Finite Automata De&#xef;&#xac;&#xfffd;nition: A deterministic &#xef;&#xac;&#xfffd;nite automaton (DFA) consists of 1. a &#xef;&#xac;&#xfffd;nite set of states (often denoted Q) 2. a &#xef;&#xac;&#xfffd;nite set &#xce;&#xa3; of symbols (alphabet) 3. a transition function that takes as argument a state and a symbol and returns a state (often denoted &#xce;&#xb4;) 4. a start state often denoted q0" ID="ID_1779272864" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="ISO 639-2 Language Code List - Codes for the " FOLDED="true" ID="ID_892941306" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://www.loc.gov/standards/iso639-2/php/code_list.php">
<node TEXT="Codes for the Representation of Names of Languages Codes arranged alphabetically by alpha-3/ISO 639-2 Code. Note: ISO 639-2 is the alpha-3 code in Codes for the representation of names of languages-- Part 2.There are 21 languages that have alternative codes for bibliographic or terminology purposes." ID="ID_123276025" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Codes for the representation of names of languages (ISO " FOLDED="true" ID="ID_1020219813" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://www.loc.gov/standards/iso639-5/langhome5.html">
<node TEXT="Introduction. ISO 639 provides codes for the identification of languages language variants and language groups. The identifiers may be used to denote the language used in a text the language of terms or words in a dictionary or terminological database the language used in a spoken presentation language capabilities of software etc." ID="ID_286958380" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
<node TEXT="Automata Theory : Deterministic Non Deterministic Finite " FOLDED="true" ID="ID_471871082" CREATED="1566553719110" MODIFIED="1566553719110" LINK="https://www.elprocus.com/automata-theory-terminologies-formal-languages-applications/">
<node TEXT="Language can be finite or infinite. For example if a language takes all the possible strings of length 2 over the set &#xce;&#xa3; = {a d} then L = {aa ad da dd}. Formal Languages and Automata. In automata theory Formal language is a set of strings where each string is composed of symbols belonging to the finite Alphabet set &#xce;&#xa3;. Let us consider a " ID="ID_1732298924" CREATED="1566553719110" MODIFIED="1566553719110"/>
</node>
</node>
<node TEXT="Language of grammar Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1477555780" CREATED="1566553719152" MODIFIED="1566553719152">
<icon BUILTIN="stop-sign"/>
<node TEXT="A Visualization Grammar | Vega" FOLDED="true" ID="ID_225316142" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://vega.github.io/vega/">
<node TEXT="Vega - A Visualization Grammar. Vega is a visualization grammar a declarative format for creating saving and sharing interactive visualization designs. With Vega you can describe the visual appearance and interactive behavior of a visualization in a JSON format and generate web-based views using Canvas or SVG." ID="ID_792182228" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Higher-Level Tools for Interactive Data Visualization " FOLDED="true" ID="ID_1225675801" CREATED="1566553719152" MODIFIED="1566553719152" LINK="http://istc-bigdata.org/index.php/higher-level-tools-for-interactive-data-visualization/">
<node TEXT="This goal has led us to develop a stack of higher-level tools for interactive data visualization. At the foundation of this stack is Vega a declarative visualization grammar. Similar in spirit to how SQL provides a language for expressing database queries Vega provides a language for describing visualizations." ID="ID_1750430616" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="The Grammar of Animation - YouTube" FOLDED="true" ID="ID_399330421" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://www.youtube.com/watch?v=21ZWDrTukEs">
<node TEXT="In the world of data visualisation much work has been put into defining a grammar for both static and interactive graphics. These efforts has often been coupled to the development of visualisation " ID="ID_1787228912" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Vega-Lite: A Grammar of Interactive Graphics" FOLDED="true" ID="ID_1890001598" CREATED="1566553719152" MODIFIED="1566553719152" LINK="http://vis.csail.mit.edu/pdf/2017-VegaLite-InfoVis.pdf">
<node TEXT="Vega-Lite builds on prior work on grammars of graphics visualization systems and techniques for interactive selection and querying. 2.1 Grammar-Based Visual Encoding Since the initial publication of Wilkinson&#xe2;&#x20ac;&#x2122;s The Grammar of Graph-ics [29] in 1999 formal grammars for statistical graphics have grown" ID="ID_1134277279" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="UW Interactive Data Lab - University of Washington" FOLDED="true" ID="ID_1809998046" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://idl.cs.washington.edu/">
<node TEXT="UW Interactive Data Lab. Visualization + Analysis. our mission is to enhance peoples ability to understand and communicate data through the design of new interactive systems for data visualization and analysis. Data-Driven Documents (D3.js)  A Grammar of Interactive Graphics. Voyager: Exploratory Analysis with Visualization Recommendations." ID="ID_114339156" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Vega: A Visualization Grammar" FOLDED="true" ID="ID_306877018" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://vega.github.io/">
<node TEXT="Vega is a visualization grammar a declarative language for creating saving and sharing interactive visualization designs. With Vega you can describe the visual appearance and interactive behavior of a visualization in a JSON format and generate web-based views using Canvas or SVG." ID="ID_426041319" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Vega: The Grammar of Interactive Graphics " FOLDED="true" ID="ID_1713060382" CREATED="1566553719153" MODIFIED="1566553719153" LINK="https://paulvanderlaken.com/2017/11/01/vega-the-grammar-of-interactive-graphics/">
<node TEXT="This post is not about ggplot2 nor specifically the Grammar of Graphics but rather a summary of the official release of Vega-Lite 2 a high-level language for rapidly creating interactive visualizations which you might know from the R-package ggvis. Vega-Lite has four operators to compose charts: layer facet concat and repeat." ID="ID_1291421030" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
<node TEXT="Declarative Language Design for Interactive Visualization" FOLDED="true" ID="ID_913799070" CREATED="1566553719153" MODIFIED="1566553719153" LINK="http://vis.stanford.edu/files/2010-Protovis-InfoVis.pdf">
<node TEXT="Declarative Language Design for Interactive Visualization Jeffrey Heer and Michael Bostock Abstract&#xe2;&#x20ac;&#x201d;We investigate the design of declarative domain-speci&#xef;&#xac;&#xfffd;c languages for constructing interactive visualizations.By sep-arating speci&#xef;&#xac;&#xfffd;cation from execution declarative languages can simplify development enable unobtrusive optimization and sup-" ID="ID_1879960184" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
<node TEXT="best tool / programming language for data visualization " FOLDED="true" ID="ID_843493734" CREATED="1566553719153" MODIFIED="1566553719153" LINK="https://stackoverflow.com/questions/6355131/best-tool-programming-language-for-data-visualization">
<node TEXT="best tool / programming language for data visualization.  Vega-Lite  Vega are designed based on the ideas of the Grammar of Graphics which inspired Rs popular ggplot2 library.  And the best part is that you can produce interactive charts that allow you to present different views or different levels of data as you drill into it. share " ID="ID_1295338589" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
<node TEXT="Vega: A Visualization Grammar | Hacker News" FOLDED="true" ID="ID_1580741159" CREATED="1566553719153" MODIFIED="1566553719153" LINK="https://news.ycombinator.com/item?id=10176595">
<node TEXT="Vega: A Visualization Grammar (vega.github.io) 192 points by hemapani on Sept 6 2015 | hide  If you provide a domain specific language with a set of useful primitives users can leverage it to describe what they want with more flexibility and freedom.  Having worked with dc.js and D3 for interactive visualizations Im eager to try " ID="ID_130769170" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
<node TEXT="Topic: interactive-visualizations &#xc2;&#xb7; GitHub" FOLDED="true" ID="ID_1898599002" CREATED="1566553719153" MODIFIED="1566553719153" LINK="https://github.com/topics/interactive-visualizations">
<node TEXT="visualization-tools visualization-grammar data-visualization interactive-visualizations large-scale-data-visualization postgresql database-index datavis d3js declarative-language spatial-index  An Interactive Tool for Natural Language Processing on Clinical Text" ID="ID_1495591590" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
<node TEXT="A pick of the best R packages for interactive plot and " FOLDED="true" ID="ID_1433949275" CREATED="1566553719153" MODIFIED="1566553719153" LINK="http://enhancedatascience.com/2017/04/12/pick-best-r-packages-data-visualization/">
<node TEXT="A pick of the best R packages for interactive plot and visualisation (2/2) - Enhance Data Science 6th July 2017 at 3:56 pm [&#xe2;&#x20ac;&#xa6;] the first part of A pick of the best R packages for interactive plot and visualization we saw the best packages to do interactive plot in R." ID="ID_303133932" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
</node>
<node TEXT="Language of grammar Code#$D$#" FOLDED="true" ID="ID_1432923163" CREATED="1566553719153" MODIFIED="1566553719153">
<icon BUILTIN="stop-sign"/>
<node TEXT="Grammar-based code - Wikipedia" FOLDED="true" ID="ID_969478797" CREATED="1566553719153" MODIFIED="1566553719153" LINK="https://en.wikipedia.org/wiki/Grammar-based_code">
<node TEXT="Grammar-based codes or Grammar-based compression are compression algorithms based on the idea of constructing a context-free grammar (CFG) for the string to be compressed. Examples include universal lossless data compression algorithms. To compress a data sequence = &#xe2;&#x2039;&#xaf; a grammar-based code transforms into a context-free grammar .The problem of finding a smallest grammar for an input sequence " ID="ID_1704593607" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
<node TEXT="ISO 639-2 Language Code List - Codes for the " FOLDED="true" ID="ID_1841313134" CREATED="1566553719153" MODIFIED="1566553719153" LINK="https://www.loc.gov/standards/iso639-2/php/code_list.php">
<node TEXT="Note: ISO 639-2 is the alpha-3 code in Codes for the representation of names of languages-- Part 2. There are 21 languages that have alternative codes for bibliographic or terminology purposes. In those cases each is listed separately and they are designated as B (bibliographic) or T " ID="ID_243856750" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
<node TEXT="Language - Wikipedia" FOLDED="true" ID="ID_105076559" CREATED="1566553719153" MODIFIED="1566553719153" LINK="https://en.wikipedia.org/wiki/Language">
<node TEXT="The English word language derives ultimately from Proto-Indo-European *dn&#xcc;&#xa5;&#xc7;&#xb5;&#xca;&#xb0;w&#xc3;&#xa9;h&#xe2;&#x201a;&#x201a;s tongue speech language through Latin lingua language; tongue and Old French language. The word is sometimes used to refer to codes ciphers and other kinds of artificially constructed communication systems such as formally defined computer languages used for computer programming." ID="ID_76702932" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
<node TEXT="Syntax Highlight Guide | Visual Studio Code Extension API" FOLDED="true" ID="ID_1277570990" CREATED="1566553719153" MODIFIED="1566553719153" LINK="https://code.visualstudio.com/api/language-extensions/syntax-highlight-guide">
<node TEXT="Remember if you are contributing a grammar to a language that VS Code already knows about be sure to delete the languages contribution point in the generated package.json. Converting an existing TextMate grammar. yo code can also help convert an existing TextMate grammar to a VS" ID="ID_327815030" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
<node TEXT="Code - Grammar (Lexical) [Gerardnico]" FOLDED="true" ID="ID_629832340" CREATED="1566553719153" MODIFIED="1566553719153" LINK="https://gerardnico.com/code/grammar/grammar">
<node TEXT="This section regroups the entity of a computer language from a lexical point of view. Its the same as Parts of the speech for a natural language.. To see how a grammar is defined to be able to parse it in a compiler. See Language - Formal (Grammar|Syntax|Structure|Language). Every language displays a structure called its grammar or syntax." ID="ID_1477540602" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
<node TEXT="Language Codes (2 Letters) Abbreviations" FOLDED="true" ID="ID_1762950428" CREATED="1566553719153" MODIFIED="1566553719153" LINK="https://www.abbreviations.com/acronyms/LANGUAGES2L">
<node TEXT="Browse and search thousands of Language Codes (2 Letters) Abbreviations and acronyms in our comprehensive reference resource." ID="ID_1622069494" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
<node TEXT="HTML ISO Language Code Reference - w3schools.com" FOLDED="true" ID="ID_777755462" CREATED="1566553719153" MODIFIED="1566553719153" LINK="https://www.w3schools.com/tags/ref_language_codes.asp">
<node TEXT="ISO Language Codes. The HTML lang attribute can be used to declare the language of a Web page or a portion of a Web page. This is meant to assist search engines and browsers." ID="ID_67843700" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
<node TEXT="Introduction to Programming Languages/Grammars - Wikibooks " FOLDED="true" ID="ID_1667204647" CREATED="1566553719153" MODIFIED="1566553719153" LINK="https://en.wikibooks.org/wiki/Introduction_to_Programming_Languages/Grammars">
<node TEXT="There are many different ways to describe the semantics of a programming language; however after decades of study there is mostly one technology to describe its syntax. We call this formalism the context free grammars. Notice that context-free grammars are not the only kind of grammar that computers can use to recognize languages." ID="ID_739628740" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
<node TEXT="A list of grammar terms with examples - Linguapress" FOLDED="true" ID="ID_1587657196" CREATED="1566553719153" MODIFIED="1566553719153" LINK="https://linguapress.com/grammar/list-of-terms.htm">
<node TEXT="Grammar: The corpus of rules and principles that describe how a language is used or should be used. Grammar can be prescriptive (telling people what is correct and what is not)  or descriptive (describing what how people actually use language). Grammar is constantly evolving but it does so more slowly that vocabulary." ID="ID_532200248" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
<node TEXT="GitHub - languagetool-org/languagetool: Style and Grammar " FOLDED="true" ID="ID_1672234717" CREATED="1566553719153" MODIFIED="1566553719153" LINK="https://github.com/languagetool-org/languagetool">
<node TEXT="LanguageTool is an Open Source proofreading software for English French German Polish Russian and more than 20 other languages. It finds many errors that a simple spell checker cannot detect. It finds many errors that a simple spell checker cannot detect." ID="ID_814895229" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
<node TEXT="Language Support in Visual Studio Code" FOLDED="true" ID="ID_866959077" CREATED="1566553719153" MODIFIED="1566553719153" LINK="https://code.visualstudio.com/docs/languages/overview">
<node TEXT="In Visual Studio Code we have support for almost every major programming language. Several ship in the box for example JavaScript TypeScript CSS and HTML but more rich language extensions can be found in the VS Code Marketplace. Here are eight of the most popular language extensions: Go to the " ID="ID_547634022" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
<node TEXT="Grammar Alivel - WAC Clearinghouse" FOLDED="true" ID="ID_889761032" CREATED="1566553719153" MODIFIED="1566553719153" LINK="https://wac.colostate.edu/books/grammar/alive.pdf">
<node TEXT="Preface vii Vignette: Language about Language: A Middle School Grammar Class IX Introduction xi I. Grammar in the Classroom 1. Three Goals for Teaching Grammar 3 2. Discovering Grammar 10 Vignette: Flossie and the Fox: Code-Switching between the Languages of Home and School 14 Vignette: Helping High School Juniors Get Comfortable" ID="ID_1339936951" CREATED="1566553719153" MODIFIED="1566553719153"/>
</node>
</node>
</node>
<node TEXT="Finite Automata (FA)" ID="ID_1982001082" CREATED="1566881027552" MODIFIED="1566881027552" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="An Informal Picture of FA" ID="ID_26757621" CREATED="1566881027552" MODIFIED="1566881027552" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Finite Automata  Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1536729585" CREATED="1566553719106" MODIFIED="1566553719106">
<icon BUILTIN="stop-sign"/>
<node TEXT="The Next Generation of Algorithm Visualizations of Finite " FOLDED="true" ID="ID_974716344" CREATED="1566553719106" MODIFIED="1566553719106" LINK="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.707.6201">
<node TEXT="In this thesis we will study on modernization of an educational software called GaniFA which was developed for the visualization of finite automata at the end of 1990s. The modernized software is called GaniFA NG (Next Gener-ation) and enables designing finite automata and simulating all the functioning processes." ID="ID_737498594" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="Visualization of Automata - asethome.org" FOLDED="true" ID="ID_538708531" CREATED="1566553719106" MODIFIED="1566553719106" LINK="http://www.asethome.org/automata/">
<node TEXT="Dynamic Visualization of Finite Automata (FA): Finite Automata (FA) accept Regular Languages such as L 2 = aba* = { ab aba abaa abaaa abaaaa abaaaaa . . . . }. Dynamic visualization of an FA can be seen following the link given below: A Finite Automaton for ab*" ID="ID_1829061572" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="String Matching Automaton - YouTube" FOLDED="true" ID="ID_988819364" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://www.youtube.com/watch?v=WDayKB9ukuw">
<node TEXT="The Wolfram Demonstrations Project contains thousands of free interactive visualizations with new entries added daily. Matching of strings can be done by automata." ID="ID_1994954877" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="Increasing visualization and interaction in the automata " FOLDED="true" ID="ID_277366166" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://www.researchgate.net/publication/221537777_Increasing_visualization_and_interaction_in_the_automata_theory_course">
<node TEXT="In this paper we describe how to increase the visualization and interaction in the automata theory course through the use of the tools JFLAP and Pate." ID="ID_222360058" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="Increasing Visualization and Interaction in the Automata " FOLDED="true" ID="ID_1641602895" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://www.researchgate.net/publication/2369575_Increasing_Visualization_and_Interaction_in_the_Automata_Theory_Course">
<node TEXT="JFLAP is one of the projects that shares most of our goals. Its main motivation is teaching and the current emphasis is in animation and interactive visualisation of automata theory concepts [8 " ID="ID_963551869" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="JFLAP &#xe2;&#x20ac;&#x201c; An Interactive Formal Languages and Automata Package" FOLDED="true" ID="ID_736137376" CREATED="1566553719106" MODIFIED="1566553719106" LINK="http://www.jflap.org/jflapbook/jflapbook2006.pdf">
<node TEXT="This book is a hands-on guide through the Java Formal Language and Automata Package (JFLAP) an interactive visualization and teaching tool for formal languages. This book is intended as a supplement to an undergraduate automata theory course or an undergraduate compiler course. This book is not a textbook!" ID="ID_559534006" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="OpenDSA" FOLDED="true" ID="ID_1791020446" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://opendsa-server.cs.vt.edu/">
<node TEXT="What Is OpenDSA? OpenDSA is infrastructure and materials to support courses in a wide variety of Computer Science-related topics such as Data Structures and Algorithms (DSA) Formal Languages Finite Automata and Programming Languages. OpenDSA materials include many visualizations and interactive exercises." ID="ID_1642796044" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="A Finite Automaton Editor - YouTube" FOLDED="true" ID="ID_15025266" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://www.youtube.com/watch?v=WmWdhepy308">
<node TEXT="The Wolfram Demonstrations Project contains thousands of free interactive visualizations with new entries added daily. This Demonstration allows you to edit the graphical representation of an " ID="ID_1212862765" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="FSA6.2xx: Finite State Automata Utilities" FOLDED="true" ID="ID_1883648443" CREATED="1566553719106" MODIFIED="1566553719106" LINK="http://www.let.rug.nl/vannoord/Fsa/">
<node TEXT="Manipulations include automata construction from regular expresssions determinization (both for finite-state acceptors and finite-state transducers) minimization composition complementation intersection Kleene closure etc. Various visualization tools are available to browse finite-state automata." ID="ID_1516505206" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="Visual and Interactive Tools - users.cs.duke.edu" FOLDED="true" ID="ID_290154562" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://users.cs.duke.edu/~rodger/tools/">
<node TEXT="Visual and Interactive Tools . Susan H. Rodger.  The conversions are nondeterministic finite automaton (NFA) to deterministic finite automaton (DFA) DFA to minimum state DFA NFA to regular grammar regular grammar to NFA nondeterministic pushdown automaton (NPDA) to context-free grammar (CFG) and three algorithms for CFG to NPDA. " ID="ID_67261862" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="create automata finite free download - SourceForge" FOLDED="true" ID="ID_802712807" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://sourceforge.net/directory/?q=create%20automata%20finite">
<node TEXT="The software resents an executable specification language based on deterministic finite automata this allows the user to perform tests of word recognition in the state machines that are defined by it. Moreover it&#xe2;&#x20ac;&#x2122;s possible for the user to assign snippets of code to be executed every transition automaton these snippets can be described in " ID="ID_699580697" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="Fifty years of automata simulation: a review" FOLDED="true" ID="ID_1959669786" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://users.cs.duke.edu/~rodger/jflappapers/ChakrabortyX2011.pdf">
<node TEXT="Fifty Years of Automata Simulation: A Review 62cm a Inroads 2011 December &#xe2;&#x20ac;&#xa2; Vol. 2 &#xe2;&#x20ac;&#xa2; No. 4 tomata. In this language the description of a finite automaton is writ-ten in a formal textbook-like way (Figure 4). A finite automaton mod-eled in this language is compiled by using a fast single-pass compiler." ID="ID_1101048266" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
</node>
<node TEXT="Finite Automata  Code#$D$#" FOLDED="true" ID="ID_1202967370" CREATED="1566553719106" MODIFIED="1566553719106">
<icon BUILTIN="stop-sign"/>
<node TEXT="Finite Automata algorithm for Pattern Searching " FOLDED="true" ID="ID_1001929177" CREATED="1566553719106" MODIFIED="1566553719106" LINK="https://www.geeksforgeeks.org/finite-automata-algorithm-for-pattern-searching/">
<node TEXT="In this post we will discuss Finite Automata (FA) based pattern searching algorithm. In FA based algorithm we preprocess the pattern and build a 2D array that represents a Finite Automata. Construction of the FA is the main tricky part of this algorithm. Once the FA is built the searching is simple." ID="ID_1218906991" CREATED="1566553719106" MODIFIED="1566553719106"/>
</node>
<node TEXT="dfa - Implementing a code to simulate a finite automaton " FOLDED="true" ID="ID_1121644958" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://stackoverflow.com/questions/10579348/implementing-a-code-to-simulate-a-finite-automaton-nondeterministic-in-c">
<node TEXT="Should I simply use arrays? What logic would I apply to the arrays?. Is there any way to do it without knowing in advance the automaton alphabet? Do I need a data structure to represent automata?. I am a little stuck with this assignment and would like some ideas some pseudocode or ideas to do it. Is the code in another language?" ID="ID_430707948" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="python - How are finite automata implemented in code " FOLDED="true" ID="ID_1508883373" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://stackoverflow.com/questions/35272592/how-are-finite-automata-implemented-in-code">
<node TEXT="How does one implement a dfa or an nfa for that matter in Python code? What are some good ways to do it in python? And are they ever used in real world projects?  How are finite automata implemented in code? Ask Question Asked 3 years  Browse other questions tagged python finite-automata automata dfa nfa or ask your own question." ID="ID_405147720" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="C code to implement DFA(Deterministic Finite Automata " FOLDED="true" ID="ID_1635643346" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://www.coders-hub.com/2013/05/c-code-for-dfadeterministic-finite.html">
<node TEXT="For more C programs related to Automata Check Automata label. Share and comment to improve this blog. Related Programs:-&#xe2;&#x2dc;&#x2026; NFA (Non-Deterministic Finite Automata) &#xe2;&#x2dc;&#x2026; Convert NFA to DFA &#xe2;&#x2dc;&#x2026; Lexical Analyzer &#xe2;&#x2dc;&#x2026; Syntax Tree &#xe2;&#x2dc;&#x2026; Calculate In and Out" ID="ID_1836042487" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Deterministic Finite Automata (Example -1) - YouTube" FOLDED="true" ID="ID_1781393428" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://www.youtube.com/watch?v=40i4PKpM0cI">
<node TEXT="An Example of DFA which accepts all strings that starts with 0. This lecture shows how to construct a DFA that accepts all binary strings that starts with 0 and rejects all that does not start " ID="ID_1865468081" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Automata-based programming - Wikipedia" FOLDED="true" ID="ID_1421577732" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://en.wikipedia.org/wiki/Automata-based_programming">
<node TEXT="Automata-based programming is a programming paradigm in which the program or part of it is thought of as a model of a finite state machine (FSM) or any other (often more complicated) formal automaton (see automata theory).Sometimes a potentially infinite set of possible states is introduced and such a set can have a complicated structure not just an enumeration." ID="ID_434346990" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Code Finite Automata Software - winsite.com" FOLDED="true" ID="ID_882016368" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://www.winsite.com/code/code+finite+automata/">
<node TEXT="Code Finite Automata Software JFAST - the Finite Automata Simulator v.1.2 jFAST is a simple finite automata (FA) graphical simulation utility; it is designed to feature simple mechanisms for creating editing and simulating FA. jFAST is ideal for use by students instructors and self-guided explorers. " ID="ID_1259645383" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Deterministic finite automaton - Wikipedia" FOLDED="true" ID="ID_640075053" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://en.wikipedia.org/wiki/Deterministic_finite_automaton">
<node TEXT="The figure illustrates a deterministic finite automaton using a state diagram. In this example automaton there are three states: S 0 S 1 and S 2 (denoted graphically by circles). The automaton takes a finite sequence of 0s and 1s as input. For each state there is a transition arrow leading out to a next state for both 0 and 1." ID="ID_1154944034" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Theory of Computation | Finite Automata Introduction " FOLDED="true" ID="ID_686366064" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://www.geeksforgeeks.org/toc-finite-automata-introduction/">
<node TEXT="Theory of Computation | Finite Automata Introduction. Finite Automata(FA) is the simplest machine to recognize patterns.  Deterministic Finite Automata (DFA) DFA consists of 5 tuples {Q &#xe2;&#x2c6;&#x2018; q F &#xce;&#xb4;}.  Writing code in comment? Please use ide.geeksforgeeks.org generate link and share the link here. Load Comments." ID="ID_939515164" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Deterministic Finite Automata - cse.chalmers.se" FOLDED="true" ID="ID_1362525661" CREATED="1566553719107" MODIFIED="1566553719107" LINK="http://www.cse.chalmers.se/~coquand/AUTOMATA/o2.pdf">
<node TEXT="Deterministic Finite Automata De&#xef;&#xac;&#xfffd;nition: A deterministic &#xef;&#xac;&#xfffd;nite automaton (DFA) consists of 1. a &#xef;&#xac;&#xfffd;nite set of states (often denoted Q) 2. a &#xef;&#xac;&#xfffd;nite set &#xce;&#xa3; of symbols (alphabet) 3. a transition function that takes as argument a state and a symbol and returns a state (often denoted &#xce;&#xb4;) 4. a start state often denoted q0" ID="ID_544895794" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="GitHub - fffaraz/DFA: Deterministic Finite Automata in C++ " FOLDED="true" ID="ID_676670197" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://github.com/fffaraz/DFA">
<node TEXT="Deterministic Finite Automata in C++ Token Parser  Lexer - fffaraz/DFA.  All your code in one place. Over 36 million developers use GitHub together to host and review code project manage and build software together across more than 100 million projects. Sign " ID="ID_1940919762" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
<node TEXT="Java Programming Stuff: Deterministic finite automata " FOLDED="true" ID="ID_1732269894" CREATED="1566553719107" MODIFIED="1566553719107" LINK="https://javaprogrammingstuff.blogspot.com/2013/07/this-is-java-program-to-simulate.html">
<node TEXT="This is a java program to simulate the DFA( deterministic finite automata ) developed using J2SE . It works for any general dfa that you have specified through five tuples during the execution of the program." ID="ID_27143882" CREATED="1566553719107" MODIFIED="1566553719107"/>
</node>
</node>
<node TEXT="An Informal Picture of Finite Automata Interactive Visualisation#$D$#" FOLDED="true" ID="ID_588993543" CREATED="1566553719110" MODIFIED="1566553719110">
<icon BUILTIN="stop-sign"/>
<node TEXT="Automata theory - Wikipedia" FOLDED="true" ID="ID_278042205" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://en.wikipedia.org/wiki/Automata_theory">
<node TEXT="The study of the mathematical properties of such automata is automata theory. The picture is a visualization of an automaton that recognizes strings containing an even number of 0s. The automaton starts in state S1 and transitions to the non-accepting state S2 upon reading the symbol 0." ID="ID_85988522" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="The Next Generation of Algorithm Visualizations of Finite " FOLDED="true" ID="ID_846195429" CREATED="1566553719111" MODIFIED="1566553719111" LINK="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.707.6201">
<node TEXT="In this thesis we will study on modernization of an educational software called GaniFA which was developed for the visualization of finite automata at the end of 1990s. The modernized software is called GaniFA NG (Next Gener-ation) and enables designing finite automata and simulating all the functioning processes." ID="ID_1977748298" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="A Medley of Potpourri: Automata theory" FOLDED="true" ID="ID_349268876" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://amedleyofpotpourri.blogspot.com/2018/11/automata-theory.html">
<node TEXT="The study of the mathematical properties of such automata is automata theory. The picture is a visualization of an automaton that recognizes strings containing an even number of 0s.The automaton starts in state S1 and transitions to the non-accepting state S2 upon reading the symbol 0.Reading another 0 causes the automaton to transition back to the accepting state S1." ID="ID_1023226986" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Introduction to Automata Theory Languages and " FOLDED="true" ID="ID_728683165" CREATED="1566553719111" MODIFIED="1566553719111" LINK="http://www.informit.com/store/introduction-to-automata-theory-languages-and-computation-9780321462251">
<node TEXT="This classic book on formal languages automata theory and computational complexity has been updated to present theoretical concepts in a concise and straightforward manner with the increase of hands-on practical applications. This new edition comes with Gradiance an online assessment tool developed for computer science. Gradiance is the most advanced online assessment tool developed for " ID="ID_155080865" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Teaching Computer Science with Interaction and Visualization" FOLDED="true" ID="ID_1137072868" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://users.cs.duke.edu/~rodger/talks/DukeDec06/DukeTalkDec4-2006.pdf">
<node TEXT="Teaching Computer Science with Interaction and Visualization Susan H. Rodger Computer Science Dept. Duke University December 4 2006.  &#xe2;&#x20ac;&#xa2; Finite Automata Turing Machines L-Systems &#xe2;&#x20ac;&#xa2; Compression. Example: Be a Robot  Why Develop Tools for Automata? Interactive" ID="ID_1671664296" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="A Learning Algorithm for Deterministic Finite Automata " FOLDED="true" ID="ID_1855864495" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://www.researchgate.net/publication/220368813_A_Learning_Algorithm_for_Deterministic_Finite_Automata_using_JFLAP">
<node TEXT="PDF | The JFLAP package is a free interactive visualization and teaching tool for formal languages. JFLAP is based on the principle that a picture of a concept can be easier to understand than a " ID="ID_322118446" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Cellular Automata as Mappings - YouTube" FOLDED="true" ID="ID_725002616" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://www.youtube.com/watch?v=TM77YCMf2jY">
<node TEXT="This video is unavailable. Watch Queue Queue. Watch Queue Queue" ID="ID_189769488" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="GaniFA NG: The Next Generationof Algorithm Visualizations " FOLDED="true" ID="ID_800361226" CREATED="1566553719111" MODIFIED="1566553719111" LINK="http://www.diva-portal.org/smash/record.jsf?pid=diva2:754093">
<node TEXT="The modernized software is called GaniFA NG (Next Generation)and enables designing finite automata and simulating all the functioningprocesses.We will discuss benefits of visualization in automata theory learning andthe software development life cycle of our proposed visualization tool in thisreport and the experience derived from the " ID="ID_1963479549" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Interactive Visualization of Virtual Orchard - ResearchGate" FOLDED="true" ID="ID_962554246" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://www.researchgate.net/profile/Xiaopeng_Zhang2/publication/281884418_Interactive_Visualization_of_Virtual_Orchard/links/56454ea908ae9f9c13e5cd69.pdf?origin=publication_list">
<node TEXT="Interactive Visualization of Virtual Orchard Xiaopeng Zhang Fr ed eric Blaise To cite this version: Xiaopeng Zhang Fr ed eric Blaise. Interactive Visualization of Virtual Orchard." ID="ID_1813369343" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Automata theory - Infogalactic: the planetary knowledge core" FOLDED="true" ID="ID_1355245461" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://infogalactic.com/info/Automata_theory">
<node TEXT="The study of the mathematical properties of such automata is automata theory. The picture is a visualization of an automaton that recognizes strings containing an even number of 0s.The automaton starts in state S1 and transitions to the non-accepting state S2 upon reading the symbol 0.Reading another 0 causes the automaton to transition back to the accepting state S1." ID="ID_1638314443" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="A Learning Algorithm for Deterministic Finite Automata " FOLDED="true" ID="ID_831584540" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://dl.acm.org/citation.cfm?id=1594562">
<node TEXT="The JFLAP package is a free interactive visualization and teaching tool for formal languages. JFLAP is based on the principle that a picture of a concept can be easier to understand than a textual representation. With the help of this package we implement Dana Angluins algorithm which is able to learn Deterministic Finite Automata." ID="ID_1406478230" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
</node>
<node TEXT="An Informal Picture of Finite Automata Code#$D$#" FOLDED="true" ID="ID_1072177385" CREATED="1566553719111" MODIFIED="1566553719111">
<icon BUILTIN="stop-sign"/>
<node TEXT="AUTOMATA LANGUAGES AND COMPUTATION - stanley.edu.in" FOLDED="true" ID="ID_658964749" CREATED="1566553719111" MODIFIED="1566553719111" LINK="http://stanley.edu.in/wp-content/uploads/2015/03/Automata-Languages-And-Computation.pdf">
<node TEXT="AUTOMATA LANGUAGES AND COMPUTATION UNIT-I Automata: Introduction to Finite Automata Central Concepts of Automata Theory. Finite Automata: An Informal Picture of Finite Automata Deterministic Finite Automata Non-deterministic Finite Automata An application Finite Automata with Epsilon Transitions." ID="ID_446414946" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Automata theory - Wikipedia" FOLDED="true" ID="ID_140925968" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://en.wikipedia.org/wiki/Automata_theory">
<node TEXT="Automata theory is the study of abstract machines and automata as well as the computational problems that can be solved using them. It is a theory in theoretical computer science and discrete mathematics (a subject of study in both mathematics and computer science).The word automata (the plural of automaton) comes from the Greek word &#xce;&#xb1;&#xe1;&#xbd;&#xfffd;&#xcf;&#x201e;&#xcf;&#x152;&#xce;&#xbc;&#xce;&#xb1;&#xcf;&#x201e;&#xce;&#xb1; which means self-acting." ID="ID_619767123" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Lecture2_fa.ppt - Finite Automata Informal explanation " FOLDED="true" ID="ID_1089074312" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://www.coursehero.com/file/42718975/Lecture2-fappt/">
<node TEXT="View Lecture2_fa.ppt from AA 1Finite Automata Informal explanation Automata to Code What Are They? An Example: Scoring in Tennis Language of an Automaton 1 Informal Explanation Finite automata are" ID="ID_532951882" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Finite Automata: Informal - Wichita State University" FOLDED="true" ID="ID_1487534918" CREATED="1566553719111" MODIFIED="1566553719111" LINK="http://www.cs.wichita.edu/~sinha/teaching/fall17/cs720/slide/automata1.pdf">
<node TEXT="Finite automata I The simplest computational modelis called a nite state machineor a nite automaton I Before developing the mathematicsof nite automata we will examine the usage of a concrete nite automaton:the controller of an automatic door Finite Automata: Informal" ID="ID_433552432" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="From DFA to C Code - YouTube" FOLDED="true" ID="ID_1803113977" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://www.youtube.com/watch?v=MAQUNynQu_E">
<node TEXT="An example code on converting DFA to C code.  How to insert images into word document table - Duration:  Deterministic Finite Automata ( DFA ) with (Type 1: " ID="ID_1264240931" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="NFA to DFA conversion algorithm with solved example " FOLDED="true" ID="ID_1135993413" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://er.yuvayana.org/nfa-to-dfa-conversion-algorithm-with-solved-example/">
<node TEXT="Learn NFA to DFA conversion algorithm with solved example and black diagrams. The goal is to construct a Deterministic Finite Automata (DFA) from given Non-Deterministic Finite Automata (DFA) machine." ID="ID_1483616975" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Topic - An Informal Picture of finite automata - Notemonk" FOLDED="true" ID="ID_328400634" CREATED="1566553719111" MODIFIED="1566553719111" LINK="http://www.notemonk.com/node/10403/An.Informal.Picture.of.finite.automata./">
<node TEXT="An Informal Picture of finite automata (0 ) Share. AUTOMATA THEORY FORMAL LANGUAGES  UNIT - I  Finite Automata  An Informal Picture of finite automata . previous. next. add note. Videos. Conscious Understanding: What is its  add video. hide" ID="ID_17465192" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Quantum finite automata - Wikipedia" FOLDED="true" ID="ID_589860502" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://en.wikipedia.org/wiki/Topological_automata">
<node TEXT="Informal description. There is a simple intuitive way of understanding quantum finite automata. One begins with a graph-theoretic interpretation of deterministic finite automata (DFA). A DFA can be represented as a directed graph with states as nodes in the graph and arrows representing state transitions." ID="ID_1719019747" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Theory Of Computation - Google Sites" FOLDED="true" ID="ID_341615821" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://sites.google.com/site/theoryofcomputation1/">
<node TEXT="Unit I: Basic Mathematical Objects (6 hrs) Sets Logic functions Relations. Languages: Languages in abstract defining languages Kleene closure. Recursive Definitions: New method for defining languages important languages. Finite Automata: An Informal Picture of FA Deterministic Finite Automaton (DFA): How a DFA. processes Strings Simpler Notations for DFA Extending the transition " ID="ID_1002805530" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Malik Shahzaib Official - YouTube" FOLDED="true" ID="ID_1204092072" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://www.youtube.com/channel/UCFSgCD7s77pJVfXU_TJiRXg">
<node TEXT="Hi Im Malik Shahzaib Im 22 years old and doing masters in computer science. I beleive in helping teaching and making you a good human Email: mrmalikshahz" ID="ID_168656265" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Finite Automata - ics.uci.edu" FOLDED="true" ID="ID_1509875355" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://www.ics.uci.edu/~goodrich/teach/cs162/notes/fa1.pdf">
<node TEXT="Informal Explanation &#xe2;&#x20ac;&#xa2; Finite automata are finite collections of states with transition rules that take you from one state to another. &#xe2;&#x20ac;&#xa2; Original application was sequential switching circuits where the &#xe2;&#x20ac;&#x153;state&#xe2;&#x20ac;&#xfffd; was the settings of internal bits. &#xe2;&#x20ac;&#xa2; Today several kinds of software can be modeled by Finite Automata." ID="ID_711870739" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Chapter 2 (part b) Finite Automata - Chapter 2 Chapter " FOLDED="true" ID="ID_489391731" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://www.coursehero.com/file/7824228/Chapter-2-part-b-Finite-Automata/">
<node TEXT="View Notes - Chapter 2 (part b) Finite Automata from CS 101 at National Chiao Tung University. Chapter 2 Chapter Finite Automata Finite (part b) Windmills in Holland 1 Outline (part a - in another" ID="ID_1720463310" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
</node>
<node TEXT="epsilon Nondeterministic Finite Automata Interactive Visualisation#$D$#" FOLDED="true" ID="ID_95805130" CREATED="1566553719115" MODIFIED="1566553719115">
<icon BUILTIN="stop-sign"/>
<node TEXT="NFA Examples (Part 1) - YouTube" FOLDED="true" ID="ID_1944956477" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://www.youtube.com/watch?v=4bjqVsoy6bA">
<node TEXT="The interactive transcript could not be loaded.  Non-deterministic Finite Automata - Duration: 6:27.  Conversion of Epsilon NFA to NFA - Duration: " ID="ID_581040532" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Epsilon NFA - YouTube" FOLDED="true" ID="ID_560332916" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://www.youtube.com/watch?v=84oNUttWlN4">
<node TEXT="TOC: Epsilon NFA This lecture gives the concept of Epsilon NFA and how it is defined and how is it different from the normal NFA. Contribute: http://www.neso" ID="ID_1278221833" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="&#xce;&#xb5;-NFA: Epsilon-Nondeterministic finite automaton - GitHub" FOLDED="true" ID="ID_536424306" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://github.com/kkdai/e-nfa">
<node TEXT="&#xce;&#xb5;-NFA: Epsilon-Nondeterministic finite automaton (so call:Nondeterministic finite automaton with &#xce;&#xb5;-moves) In the automata theory a nondeterministic finite automaton with &#xce;&#xb5;-moves (NFA-&#xce;&#xb5;)(also known as NFA-&#xce;&#xbb;) is an extension of nondeterministic finite automaton(NFA) which allows a transformation to a new state without consuming any input " ID="ID_198099563" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Push Down Automata PDA NPDA - blogspot.com" FOLDED="true" ID="ID_1059219784" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://girdhargopalbansal.blogspot.com/2013/06/push-down-automata-pda-npda.html">
<node TEXT="Push Down Automata PDA are a way to represent the language class called Context Free Languages CFL covered above. By themselves PDAs are not very important but the hierarchy of Finite State Machines with corresponding Regular Languages PDAs with corresponding CFLs and Turing Machines with corresponding Recursively Enumerable Sets (Languages) is an important concept." ID="ID_943542812" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Acceptance of empty string by nondeterministic automaton" FOLDED="true" ID="ID_43328824" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://cs.stackexchange.com/questions/53005/acceptance-of-empty-string-by-nondeterministic-automaton">
<node TEXT="Stack Exchange network consists of 176 QA communities including Stack Overflow the largest most trusted online community for developers to learn share their knowledge and build their careers.. Visit Stack Exchange" ID="ID_1841268967" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Finite-state machine - Wikipedia" FOLDED="true" ID="ID_1489030995" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://en.wikipedia.org/wiki/Finite_automata">
<node TEXT="A finite-state machine (FSM) or finite-state automaton (FSA plural: automata) finite automaton or simply a state machine is a mathematical model of computation.It is an abstract machine that can be in exactly one of a finite number of states at any given time. The FSM can change from one state to another in response to some external inputs; the change from one state to another is called a " ID="ID_119363024" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Automata Definitions - Blogger" FOLDED="true" ID="ID_413108723" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://girdhargopalbansal.blogspot.com/2013/06/automata-definitions.html">
<node TEXT="A machine could be a Turing Machine a pushdown automata a finite state machine or any other restricted version of a Turing machine. (state think small and many one bit of storage) Finite Automata also called a Finite State Machine FA DFA or FSM M = (Q Sigma delta q0 F) is a definition of a Finite Automata." ID="ID_1842611178" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Visual and Interactive Tools - Duke University" FOLDED="true" ID="ID_1375396229" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://users.cs.duke.edu/~rodger/tools/tools.html">
<node TEXT="Visual and Interactive Tools . Susan H. Rodger.  The conversions are nondeterministic finite automaton (NFA) to deterministic finite automaton (DFA) DFA to minimum state DFA NFA to regular grammar regular grammar to NFA nondeterministic pushdown automaton (NPDA) to context-free grammar (CFG) and three algorithms for CFG to NPDA. Two of " ID="ID_1920314662" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="JFLAP: Building a Finite Automaton" FOLDED="true" ID="ID_194546852" CREATED="1566553719115" MODIFIED="1566553719115" LINK="http://www.jflap.org/tutorial/fa/createfa/fa.html">
<node TEXT="Note that this definition includes both deterministic finite automata (DFAs) which we will be discussing shortly and nondeterministic finite automata (NFAs) which we will touch on later. Building the different types of automata in JFLAP is fairly similar so lets start by building a DFA for the language L = {a m b n: m &#xe2;&#x2030;&#xa5; 0 n  0 n is odd}." ID="ID_17086166" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Automata theory - Wikipedia" FOLDED="true" ID="ID_891989616" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://en.wikipedia.org/wiki/Automata_theory">
<node TEXT="Automata theory is the study of abstract machines and automata as well as the computational problems that can be solved using them. It is a theory in theoretical computer science and discrete mathematics (a subject of study in both mathematics and computer science).The word automata (the plural of automaton) comes from the Greek word &#xce;&#xb1;&#xe1;&#xbd;&#xfffd;&#xcf;&#x201e;&#xcf;&#x152;&#xce;&#xbc;&#xce;&#xb1;&#xcf;&#x201e;&#xce;&#xb1; which means self-acting." ID="ID_466320620" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="FSM Simulator - ivanzuzak.info" FOLDED="true" ID="ID_1468153474" CREATED="1566553719115" MODIFIED="1566553719115" LINK="http://ivanzuzak.info/noam/webapps/fsm_simulator/">
<node TEXT="FSM simulator is a Web application for step-by-step visual simulation of finite state machines which are defined with regular expressions. FSM simulator  click Create automaton to create a FSM for the defined regex and display its transition graph.  (epsilon) but should not be listed in the alphabet. Generate a FSM to see a valid example." ID="ID_24831971" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="RegExpert : A Tool for Visualization of Regular Expressions" FOLDED="true" ID="ID_1197445699" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://bib.irb.hr/datoteka/330746.RegExpert-A_tool_for_visualization_of_Regular_Expressions.pdf">
<node TEXT="Automata Simulator offers interactive generation and simulation of finite state machines. It supports all types of finite state machines: automata with binary output (DFA NFA and NFA-epsilon) and automata with general output (Moore and Mealy automata). Softlab is an extension of Automata Simulator towards a fully distributed e-learning tool." ID="ID_1980774960" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
</node>
<node TEXT="epsilon Nondeterministic Finite Automata Code#$D$#" FOLDED="true" ID="ID_1141790033" CREATED="1566553719115" MODIFIED="1566553719115">
<icon BUILTIN="stop-sign"/>
<node TEXT="NFA Examples (Part 1) - YouTube" FOLDED="true" ID="ID_66454613" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://www.youtube.com/watch?v=4bjqVsoy6bA">
<node TEXT="114 videos Play all Theory of Computation  Automata Theory Neso Academy; 1 DFA  Non-deterministic Finite Automata - Duration: 6:27.  Conversion of Epsilon NFA to NFA - Duration: " ID="ID_1266414249" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="&#xce;&#xb5;-NFA: Epsilon-Nondeterministic finite automaton - GitHub" FOLDED="true" ID="ID_1149104493" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://github.com/kkdai/e-nfa">
<node TEXT="&#xce;&#xb5;-NFA: Epsilon-Nondeterministic finite automaton (so call:Nondeterministic finite automaton with &#xce;&#xb5;-moves) In the automata theory a nondeterministic finite automaton with &#xce;&#xb5;-moves (NFA-&#xce;&#xb5;)(also known as NFA-&#xce;&#xbb;) is an extension of nondeterministic finite automaton(NFA) which allows a transformation to a new state without consuming any input " ID="ID_141117040" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Non-deterministic Finite State Machine Implementation in C#" FOLDED="true" ID="ID_1403225920" CREATED="1566553719115" MODIFIED="1566553719115" LINK="http://bezensek.com/blog/2015/04/12/non-deterministic-finite-state-machine-implementation-in-c-number/">
<node TEXT="Last time I implemented the deterministic finite state machine (DFSM). This time I will do the same for the non-deterministic (NDFSM) one. I chose the variation without the epsilon transitions and will leave that for exercise if someone might find it intriguing.. The only difference between the DFSM and NDFSM is that while the DFSM can only have a single transition for a given state and input " ID="ID_882072589" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Nondeterministic finite automaton - Wikipedia" FOLDED="true" ID="ID_423903065" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://en.wikipedia.org/wiki/Nondeterministic_finite_automaton">
<node TEXT="In automata theory a finite state machine is called a deterministic finite automaton (DFA) if . each of its transitions is uniquely determined by its source state and input symbol and; reading an input symbol is required for each state transition. A nondeterministic finite automaton (NFA) or nondeterministic finite state machine does not need to obey these restrictions." ID="ID_550707028" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Stuck on a non-deterministic finite automata question with " FOLDED="true" ID="ID_104912778" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://www.reddit.com/r/learnprogramming/comments/86rufb/stuck_on_a_nondeterministic_finite_automata/">
<node TEXT="It seems that you possibly have a screenshot of code in your post Stuck on a non-deterministic finite automata question with a few variables to consider. in /r/learnprogramming. Screenshots of code instead of actual code text is against the Code posting rules of /r/learnprogramming. Never submit screenshots of code instead of code text!" ID="ID_126228070" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="What is epsilon NFA? - Quora" FOLDED="true" ID="ID_690257934" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://www.quora.com/What-is-epsilon-NFA">
<node TEXT="Thanks for A2A I&#xe2;&#x20ac;&#x2122;ve located your question as referring to formal languages/automata theory. These pages may help you: Nondeterministic finite automaton - Wikipedia Nondeterministic finite automaton - Wikipedia" ID="ID_1416361944" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Nondeterministic finite automata &#xe2;&#x20ac;&#x201c; Grafstate Help" FOLDED="true" ID="ID_1634004590" CREATED="1566553719115" MODIFIED="1566553719115" LINK="http://help.grafstate.com/grafstate-code/grafstate-code-for-an-nfa/">
<node TEXT="You can define a nondeterministic finite automaton (NFA) using Grafstate code and then use Grafstate to simulate its computation. The Grafstate description of an NFA must consist of full definitions of the 5 components of the NFA. The following is an example of a 5-tuple defining an NFA with corresponding Grafstate code:" ID="ID_1934454678" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="automata - Meaning of &#xce;&#xb5; in NFA-&#xce;&#xb5;? - Computer Science Stack " FOLDED="true" ID="ID_753928257" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://cs.stackexchange.com/questions/70061/meaning-of-%CE%B5-in-nfa-%CE%B5">
<node TEXT="An epsilon transition is simply a transition that doesnt consume any characters in the input string. Taking it is optional and it is what makes the non-deterministic finite automata non-deterministic: by allowing it to branch it can explore two plausible paths through the language it accepts." ID="ID_820382793" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Understanding $\\epsilon$ transitions in a finite state " FOLDED="true" ID="ID_412957285" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://math.stackexchange.com/questions/23191/understanding-epsilon-transitions-in-a-finite-state-automaton">
<node TEXT="Finally $\epsilon$ transitions can be taken in chain. Theres no such opportunity in the automaton in question but supposing that there was one more state $4$ connected to $3$ via an $\epsilon$ transition the starting state would be $\{134\}$ - you can take as many $\epsilon$ transitions as you want (but never have to take one)." ID="ID_1832542459" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="Epsilon NFA - YouTube" FOLDED="true" ID="ID_360163671" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://www.youtube.com/watch?v=84oNUttWlN4">
<node TEXT="TOC: Epsilon NFA This lecture gives the concept of Epsilon NFA and how it is defined and how is it different from the normal NFA. Contribute: http://www.neso" ID="ID_1164951399" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="NFA to DFA conversion algorithm with solved example " FOLDED="true" ID="ID_1436301556" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://er.yuvayana.org/nfa-to-dfa-conversion-algorithm-with-solved-example/">
<node TEXT="Learn NFA to DFA conversion algorithm with solved example and black diagrams. The goal is to construct a Deterministic Finite Automata (DFA) from given Non-Deterministic Finite Automata (DFA) machine." ID="ID_918602640" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="automata - Constructing deterministic finite automaton " FOLDED="true" ID="ID_739155271" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://stackoverflow.com/questions/54444661/constructing-deterministic-finite-automaton-equal-to-a-nondeterministic-automato">
<node TEXT="Im having trouble going through the steps to convert a nondeterministic automaton to a deterministic finite automaton. Below is the problem in question where I need to construct a deterministic finite automaton equal to the nondeterministic automaton shown." ID="ID_819631335" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
</node>
<node TEXT="Finite Automata with output Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1925595516" CREATED="1566553719116" MODIFIED="1566553719116">
<icon BUILTIN="stop-sign"/>
<node TEXT="Finite Automata With Outputs - YouTube" FOLDED="true" ID="ID_1317708841" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://www.youtube.com/watch?v=EzMWYmRkHFQ">
<node TEXT="TOC: Finite Automata With Outputs Topics discussed: 1. Finite Automata With Outputs 2. Mealy Machine 3. Moore Machine 4. Difference between Mealy Machine  M" ID="ID_1139355572" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="Finite-state machine - Wikipedia" FOLDED="true" ID="ID_855459842" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://en.wikipedia.org/wiki/Finite_automata">
<node TEXT="A finite-state machine (FSM) or finite-state automaton (FSA plural: automata) finite automaton or simply a state machine is a mathematical model of computation. It is an abstract machine that can be in exactly one of a finite number of states at any given time." ID="ID_1140537806" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="Mealy And Moore Machine |Moore machine in automata " FOLDED="true" ID="ID_674855784" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://www.youtube.com/watch?v=tQNbaVYr_pk">
<node TEXT="Hi In this video you will learn mealy and moore machine in automata examples also you can say finite automata with output in hindi. Moore machine in automata in hindi is used to find the output " ID="ID_181100402" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="The Next Generation of Algorithm Visualizations of Finite " FOLDED="true" ID="ID_1180223784" CREATED="1566553719116" MODIFIED="1566553719116" LINK="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.707.6201">
<node TEXT="In this thesis we will study on modernization of an educational software called GaniFA which was developed for the visualization of finite automata at the end of 1990s. The modernized software is called GaniFA NG (Next Gener-ation) and enables designing finite automata and simulating all the functioning processes." ID="ID_968622834" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="Evolving Finite Automata With Two-dimensional Output For " FOLDED="true" ID="ID_458572753" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://www.researchgate.net/publication/220742358_Evolving_Finite_Automata_With_Two-dimensional_Output_For_DNA_Recognition_And_Visualization">
<node TEXT="PDF | On Jan 1 2002 Edgar E. Vallejo and others published Evolving Finite Automata With Two-dimensional Output For DNA Recognition And Visualization." ID="ID_1211525415" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="Implementation and visualization of Finite state " FOLDED="true" ID="ID_458435299" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://gist.github.com/alekseydreval/8121402">
<node TEXT="Implementation and visualization of Finite state automaton based substring search algorithm - gist:8121402" ID="ID_1020823413" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="A Learning Algorithm for Deterministic Finite Automata " FOLDED="true" ID="ID_952817442" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://www.sciencedirect.com/science/article/pii/S1571066109002813">
<node TEXT="The JFLAP package is a free interactive visualization and teaching tool for formal languages. JFLAP is based on the principle that a picture of a concept can be easier to understand than a textual representation. With the help of this package we implement Dana Angluins algorithm which is able to learn Deterministic Finite Automata." ID="ID_1337729971" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="Interactive Visualization of Virtual Orchard - ResearchGate" FOLDED="true" ID="ID_894613215" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://www.researchgate.net/profile/Xiaopeng_Zhang2/publication/281884418_Interactive_Visualization_of_Virtual_Orchard/links/56454ea908ae9f9c13e5cd69.pdf?origin=publication_list">
<node TEXT="Interactive Visualization of Virtual Orchard. Second Inter-  interactive plant community visualization of SILVES  theory of finite automata for plant life cycles [1] [12]. " ID="ID_730030341" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="GitHub - vladignatyev/markovfsm: Markov chain and " FOLDED="true" ID="ID_654546089" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://github.com/vladignatyev/markovfsm">
<node TEXT="Example output: Probabilistic finite-state machine. Finite-state machine (FSM or state machine) is a model of computation. The machine can be in exactly one of finite number of states. Probabilistic automaton is a FSM where transitions between states are probabilistic." ID="ID_1571243717" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="Simulating an elementary cellular automaton - IPython " FOLDED="true" ID="ID_1045234179" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://subscription.packtpub.com/book/big_data_and_business_intelligence/9781783284818/12/ch12lvl1sec102/simulating-an-elementary-cellular-automaton">
<node TEXT="Cellular automata are also found in nature. For example the patterns of some seashells are generated by natural cellular automata. An elementary cellular automaton is a binary one-dimensional automaton where the rules concern the immediate left and right neighbors of every cell." ID="ID_358094205" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="A Java-based Tool for Reasoning About Models of " FOLDED="true" ID="ID_561872156" CREATED="1566553719116" MODIFIED="1566553719116" LINK="http://andrewd.ces.clemson.edu/research/vislab/docs/p105-robinson.pdf">
<node TEXT="A Java-based Tool for Reasoning About Models of Computation Through Simulating Finite Automata and Turing Machines Matthew B. Robinson Jason A.Hamshar WebScope Inc. Sterling Software  Interactive visualization tools for models of computation  A new graphical simulation of finite automata (FA) and Turing machines (TM) is introduced " ID="ID_535759117" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="data visualization - Finete State machine visualizer " FOLDED="true" ID="ID_427818396" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://stackoverflow.com/questions/45520540/finete-state-machine-visualizer">
<node TEXT="I need an application that prints/visualizes input/output pairs during the FST runs. I mean for each state of the fst it needs to print out a tuple that contains input for that state and output of the state. Right now I can generate fst files that is compatible with fomahfst and xfst fst tools. So I guess the visualization tool I need " ID="ID_1670389530" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
</node>
<node TEXT="Finite Automata with output Code#$D$#" FOLDED="true" ID="ID_1016454461" CREATED="1566553719116" MODIFIED="1566553719116">
<icon BUILTIN="stop-sign"/>
<node TEXT="dfa - Implementing a code to simulate a finite automaton " FOLDED="true" ID="ID_531109258" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://stackoverflow.com/questions/10579348/implementing-a-code-to-simulate-a-finite-automaton-nondeterministic-in-c">
<node TEXT="Implementing a code to simulate a finite automaton nondeterministic in c++. Ask Question  some pseudocode or ideas to do it. Is the code in another language? I do not want the solution because I want to do my assignment but if I could use some help  Design a nondeterministic finite automata in c++ (incorrect output) 0. java.util " ID="ID_463540641" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="TOC | Finite Automata with Output (Set 5) - GeeksforGeeks" FOLDED="true" ID="ID_1413886888" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://www.geeksforgeeks.org/toc-finite-automata-with-output-set-5/">
<node TEXT="In this article we will see some designing of Finite Automata with Output i.e Moore and Mealy machines. Problem: Construction of the machines that take set of all string over {0 1} as input and produce &#xe2;&#x20ac;&#x2dc;A&#xe2;&#x20ac;&#x2122; as output if the input contains &#xe2;&#x20ac;&#x2dc;1&#xe2;&#x20ac;&#x2122; as the substring or the input string starts " ID="ID_169922038" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="Finite Automata With Outputs - YouTube" FOLDED="true" ID="ID_1640838508" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://www.youtube.com/watch?v=EzMWYmRkHFQ">
<node TEXT="TOC: Finite Automata With Outputs Topics discussed: 1. Finite Automata With Outputs 2. Mealy Machine 3. Moore Machine 4. Difference between Mealy Machine  M" ID="ID_1295579736" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="TOC | Finite Automata with Output (Set 11) - GeeksforGeeks" FOLDED="true" ID="ID_1552663923" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://www.geeksforgeeks.org/toc-finite-automata-with-output-set-11/">
<node TEXT="In this article we will see some designing of Finite Automata with Output i.e Moore and Mealy machines. Problem: Construction of the machines that take the binary number {0 1} as input and produce 1&#xe2;&#x20ac;&#x2122;s complement of that number as output. Here the assumption is that the input string is read from " ID="ID_1556126951" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="Finite automata with output | Transducer formal definition " FOLDED="true" ID="ID_1798007893" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://er.yuvayana.org/finite-automata-with-output-transducer-formal-definition/">
<node TEXT="&#xe2;&#x20ac;&#x153;FSM = Transducer = Finite automata with output = Finite automata + Output Capability&#xe2;&#x20ac;&#xfffd; Description of finite automata with output machine M is defined by 6-tuples are as follows; M = (Q &#xce;&#xa3; &#xce;&#xb4; &#xe2;&#x2c6;&#x2020; &#xce;&#xbb; q 0) Where each tuple have its specification and meaning. Q: It represents the finite non-empty set of states." ID="ID_1594036755" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="Finite-state machine - Wikipedia" FOLDED="true" ID="ID_95325216" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://en.wikipedia.org/wiki/Finite-state_machine">
<node TEXT="A finite-state machine (FSM) or finite-state automaton (FSA plural: automata) finite automaton or simply a state machine is a mathematical model of computation. It is an abstract machine that can be in exactly one of a finite number of states at any given time." ID="ID_36077706" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="C code to implement DFA(Deterministic Finite Automata " FOLDED="true" ID="ID_474257974" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://www.coders-hub.com/2013/05/c-code-for-dfadeterministic-finite.html">
<node TEXT="C code to implement DFA(Deterministic Finite Automata) /* C program to implement DFA(Deterministic Finite Automata). */ #includestdio.h #includeconio.h int main()  &#xe2;&#x2dc;&#x2026; NFA (Non-Deterministic Finite Automata) &#xe2;&#x2dc;&#x2026; Convert NFA to DFA &#xe2;&#x2dc;&#x2026; Lexical Analyzer &#xe2;&#x2dc;&#x2026; Syntax Tree &#xe2;&#x2dc;&#x2026; Calculate In and Out. Posted by Md Mohsin at 11:41 am." ID="ID_502429320" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="Finite Automata With Outputs - Theory of Computation " FOLDED="true" ID="ID_102882521" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://gradestack.com/Gate-Computer-Science-/Theory-of-Computation/Finite-Automata-With/21098-4273-47515-study-wtw">
<node TEXT="Finite Automata With Outputs Under finite automata we have two other machines. (a) Mealy machine and (b) Moore machine. These machines produces some output also at every state. Mealy Machine A mealy machine is a tuple (Q &#xce;&#xa3; &#xce;&#x201d; &#xce;&#xb4; &#xce;&#xbb; q0) where Q = finite set of states &#xce;&#xa3; = finite non-empty set of input alphabets &#xce;&#x201d; = the set of output alphabets &#xce;&#xb4; = transition function defined as Q &#xc3;&#x2014; &#xce;&#xa3; " ID="ID_996477628" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="Input/output automaton - Wikipedia" FOLDED="true" ID="ID_963655758" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://en.wikipedia.org/wiki/Input/output_automaton">
<node TEXT="Input/output automata provide a formal model applicable in describing most types of asynchronous concurrent system.On its own the I/O automaton model contains a very basic structure that enables it to model various types of distributed systems.To describe specific types of asynchronous systems additional structure must be added to this basic model." ID="ID_1584053835" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="nfa - Design a nondeterministic finite automata in c++ " FOLDED="true" ID="ID_266553941" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://stackoverflow.com/questions/10626414/design-a-nondeterministic-finite-automata-in-c-incorrect-output">
<node TEXT="I am doing an assignment for simulate a nondeterministic finite automaton just as I explain in this post.  Design a nondeterministic finite automata in c++ (incorrect output) Ask Question 7. 9.  Implementing a code to simulate a finite automaton nondeterministic in c++. 0." ID="ID_1875633457" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="Finite Automata with Output- Moore and Mealy Machines" FOLDED="true" ID="ID_1298592478" CREATED="1566553719116" MODIFIED="1566553719116" LINK="https://computaiontheory.blogspot.com/2016/03/finite-automata-with-output-moore-and.html">
<node TEXT="Finite Automata with Output- Moore and Mealy Machines. Moore and Mealy Machines. Finite automata may have outputs corresponding to each transition. There are two types of finite state machines that generate output:" ID="ID_678813827" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
<node TEXT="Finite Automata with output - Scanftree.com" FOLDED="true" ID="ID_167928099" CREATED="1566553719116" MODIFIED="1566553719116" LINK="http://scanftree.com/automata/finite-automata-with-output">
<node TEXT="Finite Automata with Ouput Till now we have seen the finite automata DFA and NFA. Now we will see finite automata with ouput. It will be clear once you see one example" ID="ID_838094999" CREATED="1566553719116" MODIFIED="1566553719116"/>
</node>
</node>
<node TEXT="Pushdown Automata  Interactive Visualisation#$D$#" FOLDED="true" ID="ID_516225649" CREATED="1566553719190" MODIFIED="1566553719190">
<icon BUILTIN="stop-sign"/>
<node TEXT="Pushdown Automata (Introduction) - YouTube" FOLDED="true" ID="ID_1935436087" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://www.youtube.com/watch?v=4ejIAmp_Atw">
<node TEXT="1. Introduction to pushdown automata(PDA) 2. Difference between pushdown automata and finite state machine 3. Stack in pushdown automata 4. Push and pop operations in stack 5. Components of " ID="ID_1453632184" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Interactive Pushdown Automata Animation | Jennifer McDonald" FOLDED="true" ID="ID_1788314581" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://www.researchgate.net/publication/221536764_Interactive_Pushdown_Automata_Animation">
<node TEXT="The tool uses high quality graphics. McDonald [50] developed an Interactive Pushdown Automata Animation that allows the user to graphically design and simulate pushdown automata. Using this tool " ID="ID_985050544" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="JFLAP &#xe2;&#x20ac;&#x201c; An Interactive Formal Languages and Automata Package" FOLDED="true" ID="ID_1647413399" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://www2.cs.duke.edu/csed/jflap/jflapbook/jflapbook2006.pdf">
<node TEXT="for experimenting with pushdown automata and over the years with the help of many undergraduate and graduate students FLAP was created and eventually evolved into JFLAP. Susan Rodger This book is a hands-on guide through the Java Formal Language and Automata Package (JFLAP) an interactive visualization and teaching tool for formal languages." ID="ID_1037127868" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Visual and Interactive Tools - users.cs.duke.edu" FOLDED="true" ID="ID_767021837" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://users.cs.duke.edu/~rodger/tools/">
<node TEXT="Visual and Interactive Tools . Susan H. Rodger.  DFA to minimum state DFA NFA to regular grammar regular grammar to NFA nondeterministic pushdown automaton (NPDA) to context-free grammar (CFG) and three algorithms for CFG to NPDA. Two of the CFG to NPDA conversions are useful in studying LL and LR parsing. In addition you can now slide " ID="ID_1170468062" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Visualization of Pushdown Automata" FOLDED="true" ID="ID_148032273" CREATED="1566553719190" MODIFIED="1566553719190" LINK="http://www.asethome.org/pda/">
<node TEXT="Pushdown Automata (PDA) are acceptors of context-free languages which include programming languages such as C++ and Java. A Pushdown Automaton for a non-regular Context-Free Language L m = { {n c} n: where n =0 } is shown in action with an input string {{c}} .L m is a language with matching number of {s and }s seperated by one c." ID="ID_186657955" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Pushdown Automata (Graphical Notation) - YouTube" FOLDED="true" ID="ID_551125275" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://www.youtube.com/watch?v=eY7fwj5jvC4">
<node TEXT="The interactive transcript could not be loaded.  Graphical notation of pushdown automata 2. input symbol  Theory Of Computation Lecture 63--Conversion of Finite automata to Regular " ID="ID_1737349785" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Visualization of Automata - asethome.org" FOLDED="true" ID="ID_1838900891" CREATED="1566553719190" MODIFIED="1566553719190" LINK="http://www.asethome.org/automata/">
<node TEXT="Some static and dynamic visualizations of automata (or mathematical models of computation) are linked to this page for considerations in teaching relations between automata and other fields of computer science. Static visualizations are often found in books and journals and therefore they are not emphasized here." ID="ID_1335914910" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Pushdown Automata | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1385593411" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://brilliant.org/wiki/pushdown-automata/">
<node TEXT="Pushdown automata are nondeterministic finite state machines augmented with additional memory in the form of a stack which is why the term &#xe2;&#x20ac;&#x153;pushdown&#xe2;&#x20ac;&#xfffd; is used as elements are pushed down onto the stack. Pushdown automata are computational models&#xe2;&#x20ac;&#x201d;theoretical computer-like machines&#xe2;&#x20ac;&#x201d;that can do more than a finite state machine but less than a Turing machine." ID="ID_570214636" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Visualization and Interaction in the Computer Science " FOLDED="true" ID="ID_1208491497" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://www.academia.edu/2792453/Visualization_and_Interaction_in_the_Computer_Science_Formal_Languages_Course_withJFLAP">
<node TEXT="4 JFLAP - Interactive Tool for Automata JFLAP (Java Formal Languages and Automata Package) is a Java implementation of FLAP [5] which allows one to graphically create a nondeterministic au- tomaton and then run the automaton on di erent in- put strings." ID="ID_597023240" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Fifty years of automata simulation: a review" FOLDED="true" ID="ID_196407350" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://users.cs.duke.edu/~rodger/jflappapers/ChakrabortyX2011.pdf">
<node TEXT="Fifty Years of Automata Simulation: A Review 62cm a Inroads 2011 December &#xe2;&#x20ac;&#xa2; Vol. 2 &#xe2;&#x20ac;&#xa2; No. 4 tomata. In this language the description of a finite automaton is writ-ten in a formal textbook-like way (Figure 4). A finite automaton mod-eled in this language is compiled by using a fast single-pass compiler." ID="ID_1042024421" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Increasing visualization and interaction in the automata " FOLDED="true" ID="ID_1872952378" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://www.researchgate.net/publication/221537777_Increasing_visualization_and_interaction_in_the_automata_theory_course">
<node TEXT="In this paper we describe how to increase the visualization and interaction in the automata theory course through the use of the tools JFLAP and Pate." ID="ID_971488570" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Pushdown Automata - University of Alaska Anchorage" FOLDED="true" ID="ID_1231557660" CREATED="1566553719190" MODIFIED="1566553719190" LINK="http://www.math.uaa.alaska.edu/~afkjm/csce351/handouts/pda.pdf">
<node TEXT="Pushdown Automata Pushdown Automata (PDA) &#xe2;&#x20ac;&#xa2; Just as a DFA is a way to implement a regular expression a pushdown automata is a way to implement a context free grammar &#xe2;&#x20ac;&#x201c; PDA equivalent in power to a CFG &#xe2;&#x20ac;&#x201c; Can choose the representation most useful to our particular problem &#xe2;&#x20ac;&#xa2; Essentially identical to a regular automata except" ID="ID_252461282" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
</node>
<node TEXT="Pushdown Automata  Code#$D$#" FOLDED="true" ID="ID_748827844" CREATED="1566553719190" MODIFIED="1566553719190">
<icon BUILTIN="stop-sign"/>
<node TEXT="Pushdown automaton - Wikipedia" FOLDED="true" ID="ID_1346315435" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://en.wikipedia.org/wiki/Pushdown_automaton">
<node TEXT="A pushdown automaton reads a given input string from left to right. In each step it chooses a transition by indexing a table by input symbol current state and the symbol at the top of the stack. A pushdown automaton can also manipulate the stack as part of performing a transition." ID="ID_11007827" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Pushdown Automata | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1211663513" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://brilliant.org/wiki/pushdown-automata/">
<node TEXT="One way to do this would be to feed the code (as strings) into a pushdown automaton programmed with transition functions that implement the context-free grammar for the language of balanced parentheses. If the code is valid and all parentheses are matched the pushdown automata will accept the code." ID="ID_793136475" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Theory of Computation | Pushdown Automata - GeeksforGeeks" FOLDED="true" ID="ID_645735314" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://www.geeksforgeeks.org/theory-of-computation-pushdown-automata/">
<node TEXT="Pushdown Automata is a finite automata with extra memory called stack which helps Pushdown automata to recognize Context Free Languages. A Pushdown Automata (PDA) can be defined as : Q is the set of states &#xe2;&#x2c6;&#x2018;is the set of input symbols; &#xce;&#x201c; is the set of pushdown symbols (which can be pushed and popped from stack) q0 is the initial state" ID="ID_873002844" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Pushdown Automata (Introduction) - YouTube" FOLDED="true" ID="ID_1220824456" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://www.youtube.com/watch?v=4ejIAmp_Atw">
<node TEXT="TOC: Pushdown Automata (Introduction) Topics Discussed: 1. Introduction to pushdown automata(PDA) 2. Difference between pushdown automata and finite state machine 3. Stack in pushdown automata 4 " ID="ID_116334393" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Download Pushdown Automata Source Codes Pushdown Automata " FOLDED="true" ID="ID_1502012150" CREATED="1566553719190" MODIFIED="1566553719190" LINK="http://www.sourcecodeonline.com/list?q=pushdown_automata">
<node TEXT="Pushdown Automata Codes and Scripts Downloads Free. FAiR-CG provides a domain specific language in Ruby for specifying finite automata and tools for generating parser code from the finite automata definitions in various languages. This is a little script that uses Python to generate the cellular automata that Wolfram discusses in his book ." ID="ID_1009638551" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Construct Pushdown Automata for given languages " FOLDED="true" ID="ID_318031572" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://www.geeksforgeeks.org/construct-pushdown-automata-given-languages/">
<node TEXT="Prerequisite &#xe2;&#x20ac;&#x201c; Pushdown Automata Pushdown Automata Acceptance by Final State A push down automata is similar to deterministic finite automata except that it has a few more properties than a DFA.The data structure used for implementing a PDA is stack. A PDA has an output associated with every input." ID="ID_1516799267" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Pushdown Automata - web.stanford.edu" FOLDED="true" ID="ID_451654544" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://web.stanford.edu/class/archive/cs/cs103/cs103.1132/lectures/17/Small17.pdf">
<node TEXT="Pushdown Automata A pushdown automaton (PDA) is a finite automaton equipped with a stack-based memory. Each transition is based on the current input symbol and the top of the stack optionally pops the top of the stack and optionally pushes new symbols onto the stack. Initially the stack holds a special symbol Z 0 that indicates the bottom of the stack." ID="ID_318556182" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Pushdown Automata - web.cs.hacettepe.edu.tr" FOLDED="true" ID="ID_825221038" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://web.cs.hacettepe.edu.tr/~ilyas/Courses/BBM401/lec06_PushdownAutomata.pdf">
<node TEXT="Deterministic Pushdown Automata(DPDA) &#xe2;&#x20ac;&#xa2; While PDAs are by definition allowed to be nondeterministic the deterministic subcase is quite important. &#xe2;&#x20ac;&#xa2; In particular parsers generally behave like deterministic PDAs so the class of languages that can be accepted by these automata is interesting" ID="ID_1801243190" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Lecture 20/65: PDAs: Pushdown Automata - YouTube" FOLDED="true" ID="ID_71243063" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://www.youtube.com/watch?v=s5cB_xg9NGg">
<node TEXT="Theory Of Computation Lecture 63--Conversion of Finite automata to Regular Expression and vice versa - Duration: 42:50. Gate Lectures by Ravindrababu Ravula 367393 views" ID="ID_136445316" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT=".net - How do I implement pushdown automaton in C# " FOLDED="true" ID="ID_8181731" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://stackoverflow.com/questions/1902979/how-do-i-implement-pushdown-automaton-in-c">
<node TEXT="How do I implement pushdown automaton in C#?  Viewed 3k times 0. 0. I want to code this for PDA. How would I do that in C#? a^nbc^n (n=0) c#.net pushdown  764 7 7 gold badges 26 26 silver badges 50 50 bronze badges. 4. I assume that hes using PDA to refer to Push Down Automata. &#xe2;&#x20ac;&#x201c; SLaks Dec 14 09 at 19:46. 2. I think he wants to write " ID="ID_532655791" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="GitHub - lyzerk/fla-pda: Push Down Automata implementation" FOLDED="true" ID="ID_1097787551" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://github.com/lyzerk/fla-pda">
<node TEXT="Push Down Automata implementation. Contribute to lyzerk/fla-pda development by creating an account on GitHub.  such as stacks etc. Thus the code could seem long but the main part is just the process() function. And of course it is not my best because of the deadline and other projects. Thanks to Merve for homework pdf file." ID="ID_42163434" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Topic: pushdown-automaton &#xc2;&#xb7; GitHub" FOLDED="true" ID="ID_930356141" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://github.com/topics/pushdown-automaton">
<node TEXT="automata dfa dfa-minimization nfa epsilon-nfa pushdown-automata pushdown-automaton automaton Python Updated May 14 2019.  Pushdown automaton simulator developed as an assignment for Computational Complexity course  A very simple code showing the technique of how to solve expressions using RPN." ID="ID_1867959728" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
</node>
</node>
</node>
<node TEXT="Finite State Machine (FSM)" ID="ID_593677482" CREATED="1566881027563" MODIFIED="1566881027563" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Finite State Machine  Interactive Visualisation#$D$#" FOLDED="true" ID="ID_539970238" CREATED="1566553719111" MODIFIED="1566553719111">
<icon BUILTIN="stop-sign"/>
<node TEXT="javascript-state-machine/visualization.md at master " FOLDED="true" ID="ID_1668831818" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://github.com/jakesgordon/javascript-state-machine/blob/master/docs/visualization.md">
<node TEXT="Visualization. It can be very helpful to visualize your state machine as a directed graph. This is possible with the open source GraphViz library if we convert from our state machine configuration to the .dot language expected by GraphViz using the visualize method:" ID="ID_1778368692" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="data visualization - Finete State machine visualizer " FOLDED="true" ID="ID_1395312314" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://stackoverflow.com/questions/45520540/finete-state-machine-visualizer">
<node TEXT="Finete State machine visualizer. Ask Question 0. I need an application that prints/visualizes input/output pairs during the FST runs. I mean for each state of the fst it needs to print out a tuple that contains input for that state and output of the state.  data-visualization state-machine fst finite-state-automaton hfst. share | improve " ID="ID_1955504336" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Tool for design and visualization of State Machines (FSM)" FOLDED="true" ID="ID_1000133938" CREATED="1566553719111" MODIFIED="1566553719111" LINK="http://leotools.atwebpages.com/">
<node TEXT="Most of processes in software development are statefull .And some of state machines tend to be pretty complex. Software engineer often faces the problem : design and management of rather complicated Finite state machines (FSM) ." ID="ID_774687336" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Finite State Machines | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1334349041" CREATED="1566553719111" MODIFIED="1566553719111" LINK="https://brilliant.org/wiki/finite-state-machines/">
<node TEXT="A finite state machine (sometimes called a finite state automaton) is a computation model that can be implemented with hardware or software and can be used to simulate sequential logic and some computer programs. Finite state automata generate regular languages. Finite state machines can be used to model problems in many fields including mathematics artificial intelligence games and " ID="ID_166063860" CREATED="1566553719111" MODIFIED="1566553719111"/>
</node>
<node TEXT="Finite-state machine - Wikipedia" FOLDED="true" ID="ID_1134605429" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://en.wikipedia.org/wiki/Finite-state_machine">
<node TEXT="A finite-state machine (FSM) or finite-state automaton (FSA plural: automata) finite automaton or simply a state machine is a mathematical model of computation. It is an abstract machine that can be in exactly one of a finite number of states at any given time." ID="ID_1945166610" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Finite State Machine Designer - by Evan Wallace" FOLDED="true" ID="ID_1043104971" CREATED="1566553719112" MODIFIED="1566553719112" LINK="http://www.madebyevan.com/fsm/">
<node TEXT="The big white box above is the FSM designer. Heres how to use it " ID="ID_1610348453" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Visualization of State Transition Graphs - TU/e" FOLDED="true" ID="ID_1878611934" CREATED="1566553719112" MODIFIED="1566553719112" LINK="http://www.win.tue.nl/~wstahw/papers/infovis2001_2.pdf">
<node TEXT="3. Visualization Assuming we have a Finite State Machine consisting of a finite set of states and an also finite set of possible transitions (along with conditions) between these states we can define the corresponding state transition graph by the graph G=(VE) where x &#xe2;&#x2c6;&#x2c6;Vrepresentsastateandaxy &#xe2;&#x2c6;&#x2c6;E represents adirected edge (or arc) between " ID="ID_1920255462" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Finite-State Machines: Theory and Implementation" FOLDED="true" ID="ID_1712416680" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://gamedevelopment.tutsplus.com/tutorials/finite-state-machines-theory-and-implementation--gamedev-11867">
<node TEXT="Finite-State Machines: Theory and Implementation. by Fernando Bevilacqua 24 Oct 2013.  A finite-state machine or FSM for short is a model of computation based on a hypothetical machine made of one or more states. Only a single state can be active at the same time so the machine must transition from one state to another in order to perform " ID="ID_1156194045" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="What are the best tools to plot finite state diagrams? - Quora" FOLDED="true" ID="ID_1348645711" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://www.quora.com/What-are-the-best-tools-to-plot-finite-state-diagrams">
<node TEXT="Most of the time I just knock them out from the top of my head in Inkscape (http://inkscape.org) but at least for my primitive uses that amounts to connecting " ID="ID_1666844867" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Finite State Machines explained - YouTube" FOLDED="true" ID="ID_1321706467" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://www.youtube.com/watch?v=hJIST1cEf6A">
<node TEXT="An explanation of what is a finite state machine with two examples and the difference between Moore and Mealy machines.  Finite State Machines explained Abelardo Pardo  The interactive " ID="ID_546802676" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Interactive visualization of state transition systems " FOLDED="true" ID="ID_731738375" CREATED="1566553719112" MODIFIED="1566553719112" LINK="http://www.win.tue.nl/~wstahw/publications/papers/IEEE_TVCG-2002.pdf">
<node TEXT="we can define the corresponding state transition graph by the graph G&#xe2;&#x20ac;&#xb9;&#xe2;&#x20ac;&#x201c;V;E&#xc6;&#x2019; where x2V represents a state and a xy2Erepresents a directed edge (or arc) between the nodes x and y. A start node s2V represents the finite state machine&#xe2;&#x20ac;&#x2122;s initial state. We split the visualization process for a state transition graph into four distinct steps " ID="ID_326833242" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Qfsm - The Finite State Machine Designer" FOLDED="true" ID="ID_228720369" CREATED="1566553719112" MODIFIED="1566553719112" LINK="http://qfsm.sourceforge.net/">
<node TEXT="Some bugs have been fixed and a new function to export State Machine Compiler (.sm) files has been added. 20.06.2012 Qfsm 0.53 released After a longer break version 0.53 has been released. A couple of bugs has been fixed and the possibility to import Graphviz files (textual state machine descriptions) (currently Linux-only)." ID="ID_94271236" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
</node>
<node TEXT="Finite State Machine  Code#$D$#" FOLDED="true" ID="ID_1685234130" CREATED="1566553719112" MODIFIED="1566553719112">
<icon BUILTIN="stop-sign"/>
<node TEXT="Finite-State Machines: Theory and Implementation" FOLDED="true" ID="ID_364628074" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://gamedevelopment.tutsplus.com/tutorials/finite-state-machines-theory-and-implementation--gamedev-11867">
<node TEXT="A finite-state machine is a model used to represent and control execution flow. It is perfect for implementing AI in games producing great results without a complex code. This tutorial describes" ID="ID_643566592" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="How to Code a State Machine in C or C++ - Barr Group" FOLDED="true" ID="ID_111301055" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://barrgroup.com/Embedded-Systems/How-To/Coding-State-Machines">
<node TEXT="Specifying State Machines in C and C++. Now after you have seen how you could code a state machine in C++ lets look at Listing 2 again but this time not so much as an implementation of a state machine but as its specification. In fact I challenge you to invent any other textual notation for state machines that would be more precise expressive and succinct than Listing 2 is." ID="ID_722693777" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="How to implement finite state machine in c - AticleWorld" FOLDED="true" ID="ID_1419145596" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://aticleworld.com/state-machine-using-c/">
<node TEXT="Nowadays many applications either small or complex use the finite state machine (FSM). A finite state machine in c is one of the popular design patterns for the embedded system.A finite state machine makes the development easy and smooth.Here I will describe some approaches for implementing a state machine in C." ID="ID_1164588941" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Finite state machine - Rosetta Code" FOLDED="true" ID="ID_1173687704" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://rosettacode.org/wiki/Finite_state_machine">
<node TEXT="A Finite state machine (FSM) is computational abstraction which maps a finite number of states to other states within the same set via transitions. An FSM can only be in one state at any given moment. Transitions can either be explicit or implicit; explicit transitions are triggered by an input signal and implicit transitions by the internal state of the system (that is the current state)." ID="ID_923390503" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="c++ - Very simple finite state machine - Code Review Stack " FOLDED="true" ID="ID_1529046385" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://codereview.stackexchange.com/questions/177291/very-simple-finite-state-machine">
<node TEXT="All of your comments have improved the code quality. Could you please also give your comments from the design perspective? Is it a good way to design a simple finite state machine. Of course there are some issues from completion perspective so ignore for that now. \$\endgroup\$ &#xe2;&#x20ac;&#x201c; Abhinav Agarwal Oct 8 17 at 3:28 |" ID="ID_860566136" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="FSM design using Verilog :: Electrosofts.com" FOLDED="true" ID="ID_364461709" CREATED="1566553719112" MODIFIED="1566553719112" LINK="http://electrosofts.com/verilog/fsm.html">
<node TEXT="Designing a synchronous finite state machine (FSM) is a common task for a digital logic engineer. A finite state machine can be divided in to two types: Moore and Mealy state machines. Fig. 1 has the general structure for Moore and Fig. 2 has general structure for Mealy." ID="ID_543400171" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Examples of Finite State Machines - Software Engineering " FOLDED="true" ID="ID_957064228" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://softwareengineering.stackexchange.com/questions/47806/examples-of-finite-state-machines">
<node TEXT="Im looking for good examples of finite state machines; language isnt particularly important just good examples. Code implementations are useful (generalized pseudo-code) but its also very useful to gather the various uses of FSMs." ID="ID_639154961" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Implementing a Finite State Machine in VHDL" FOLDED="true" ID="ID_1124593001" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://www.allaboutcircuits.com/technical-articles/implementing-a-finite-state-machine-in-vhdl/">
<node TEXT="These diagrams show a summary of the relationship between the finite state machine diagram and the VHDL code needed to implement the state machine. Figure 3. State Definitions in FSM Diagram and VHDL . Figure 4. State Transition Rules in FSM Diagram and VHDL. Figure 5. Outputs in FSM Diagram and VHDL. Final Words" ID="ID_1332413894" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Finite-state machine - Wikipedia" FOLDED="true" ID="ID_970122502" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://en.wikipedia.org/wiki/Finite-state_machine">
<node TEXT="A finite-state machine (FSM) or finite-state automaton (FSA plural: automata) finite automaton or simply a state machine is a mathematical model of computation. It is an abstract machine that can be in exactly one of a finite number of states at any given time." ID="ID_1263282400" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Simple state machine example in C#? - Stack Overflow" FOLDED="true" ID="ID_1686553087" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://stackoverflow.com/questions/5923767/simple-state-machine-example-in-c">
<node TEXT="FiniteStateMachine is a Simple State Machine written in C# Link. Advantages tu use my library FiniteStateMachine: Define a context class to present a single interface to the outside world. Define a State abstract base class. Represent the different states of the state machine as derived classes of the State base class." ID="ID_1672588689" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Understanding State Machines - freecodecamp.org" FOLDED="true" ID="ID_1403704623" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://www.freecodecamp.org/news/state-machines-basics-of-computer-science-d42855debc66/">
<node TEXT="At first this looks like an easy job for a finite state machine. The problem is that you&#xe2;&#x20ac;&#x2122;ll quickly run out of states or you&#xe2;&#x20ac;&#x2122;ll have to assume an infinite number of states &#xe2;&#x20ac;&#x201d; at which point it is no longer a finite state machine. Let&#xe2;&#x20ac;&#x2122;s say you create a finite state machine that can accept up to 20 &#xe2;&#x20ac;&#x2dc;a&#xe2;&#x20ac;&#x2122;s followed by 20 &#xe2;&#x20ac;&#x2dc;b&#xe2;&#x20ac;&#x2122;s." ID="ID_1587139117" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="How to write FSM in Verilog? - asic-world.com" FOLDED="true" ID="ID_22879486" CREATED="1566553719112" MODIFIED="1566553719112" LINK="http://www.asic-world.com/tidbits/verilog_fsm.html">
<node TEXT="This page contains tidbits on writing FSM in verilog difference between blocking and non blocking assignments in verilog difference between wire and reg metastability cross frequency domain interfacing all about resets FIFO depth calculationTypical Verification Flow" ID="ID_1803702140" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
</node>
<node TEXT="Finite State Machine for vending machine Interactive Visualisation#$D$#" FOLDED="true" ID="ID_860033225" CREATED="1566553719119" MODIFIED="1566553719119">
<icon BUILTIN="stop-sign"/>
<node TEXT="7.4(e) - FSM Example: Vending Machine - YouTube" FOLDED="true" ID="ID_1175915924" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://www.youtube.com/watch?v=KHanq9mriJI">
<node TEXT="The interactive transcript could not be loaded.  Vending Machines Youll Wish We Had More Of In The World - Duration: 10:41. BE AMAZED 3127754 views. 10:41. Godot 3: Finite State Machine Code " ID="ID_1831991755" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="06b vending machine - YouTube" FOLDED="true" ID="ID_1480806924" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://www.youtube.com/watch?v=1D7_5gac8LE">
<node TEXT="The interactive transcript could not be loaded.  Finite State Machines explained - Duration:  Why Japan has so many vending machines - Duration: 4:47." ID="ID_1661148351" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Design of Vending Machine using Finite State Machine and " FOLDED="true" ID="ID_306481594" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://www.researchgate.net/publication/276136463_Design_of_Vending_Machine_using_Finite_State_Machine_and_Visual_Automata_Simulator">
<node TEXT="PDF | Automata theory is dominating in many applications developed from the concept of finite state machine (FSM). This research will consider the design of vending machine (VM) which improves " ID="ID_1744824769" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Finite-state machine - Wikipedia" FOLDED="true" ID="ID_16371387" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://en.wikipedia.org/wiki/Finite-state_machines">
<node TEXT="A finite-state machine (FSM) or finite-state automaton (FSA plural: automata) finite automaton or simply a state machine is a mathematical model of computation. It is an abstract machine that can be in exactly one of a finite number of states at any given time." ID="ID_1133326134" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Finite State Machine FREE - Apps on Google Play" FOLDED="true" ID="ID_1462914913" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://play.google.com/store/apps/details?id=com.mountainreacher.automatahl=en_US">
<node TEXT="This app implements an algorithm to reduce a finite state machine. A finite-state machine (FSM) or finite-state automaton (plural: automata) or simply a state machine is a mathematical model of computation used to design both computer programs and sequential logic circuits. It is conceived as an abstract machine that can be in one of a finite number of states." ID="ID_1231043332" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="10.1. Phase-Lock-Loop - users.ece.utexas.edu" FOLDED="true" ID="ID_1353494097" CREATED="1566553719119" MODIFIED="1566553719119" LINK="http://users.ece.utexas.edu/~valvano/Volume1/E-Book/C10_FiniteStateMachines.htm">
<node TEXT="This abstraction will be illustrated during the design of finite state machines (FSM). All embedded systems have inputs and outputs but FSMs have states. We will embody knowledge &#xe2;&#x20ac;&#x153;what we know&#xe2;&#x20ac;&#xfffd; or &#xe2;&#x20ac;&#x153;where we&#xe2;&#x20ac;&#x2122;ve been&#xe2;&#x20ac;&#xfffd; by being in a state. A traffic light and vending machine will be implemented using FSMs." ID="ID_1816763429" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Tutorial: State Machines - National Instruments" FOLDED="true" ID="ID_43823175" CREATED="1566553719119" MODIFIED="1566553719119" LINK="http://www.ni.com/tutorial/7595/en/">
<node TEXT="Therefore the start state leads to the 5 cent state by the nickel path. By considering all states and paths you can create a state diagram for the vending machine: With a state diagram you can better understand how to create a state machine. Building a State Machine. Using the state diagram above create a state machine. 1." ID="ID_1659653327" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Finite State Machines - University of Texas at Austin" FOLDED="true" ID="ID_1510683001" CREATED="1566553719119" MODIFIED="1566553719119" LINK="http://users.ece.utexas.edu/~valvano/Volume1/E-Book/C10_Interactives.htm">
<node TEXT="A simulation of a Vending machine dispensing soda with the corresponding FSM state changes Interactive Tool 10.2 Click CW or CCW to step the motor clockwise and counterclockwise respectively. Observe how different microcontroller outputs to the motor coils produce different responses from the " ID="ID_1592438227" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Finite State Machine Designer - by Evan Wallace" FOLDED="true" ID="ID_258983207" CREATED="1566553719119" MODIFIED="1566553719119" LINK="http://www.madebyevan.com/fsm/">
<node TEXT="The big white box above is the FSM designer. Heres how to use it " ID="ID_1460086994" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="FPGA Based System Login Security Lock Design Using Finite " FOLDED="true" ID="ID_1463985443" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://www.academia.edu/7066516/FPGA_Based_System_Login_Security_Lock_Design_Using_Finite_State_Machine">
<node TEXT="A Finite State Machine is also a mathematical model of computation used to designing both computer programs and sequential logic circuits. A Finite State Machine is one that has a limit or finite number of possible states. It can be used both as a development tool for approaching and solving problems." ID="ID_1543745147" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Finite-state machine - IPFS is the Distributed Web" FOLDED="true" ID="ID_1108705699" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://ipfs.io/ipfs/QmXoypizjW3WknFiJnKLwHCnL72vedxjQkDDP1mXWo6uco/wiki/Finite_state_machine.html">
<node TEXT="A finite-state machine (FSM) or finite-state automaton (FSA plural: automata) or simply a state machine is a mathematical model of computation used to design both computer programs and sequential logic circuits. It is conceived as an abstract machine that can be in one of a finite number of states." ID="ID_1881019399" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Seeking the Treasures of Theoretical Computer Science " FOLDED="true" ID="ID_832952850" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://www.researchgate.net/publication/329585699_Seeking_the_Treasures_of_Theoretical_Computer_Science_Education_Towards_Educational_Virtual_Reality_for_the_Visualization_of_Finite_State_Machines">
<node TEXT="Seeking the Treasures of Theoretical Computer Science Education: Towards Educational Virtual Reality for the Visualization of Finite State Machines" ID="ID_211943738" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
</node>
<node TEXT="Finite State Machine for vending machine Code#$D$#" FOLDED="true" ID="ID_1149833002" CREATED="1566553719119" MODIFIED="1566553719119">
<icon BUILTIN="stop-sign"/>
<node TEXT="7.4(e) - FSM Example: Vending Machine - YouTube" FOLDED="true" ID="ID_1750374555" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://www.youtube.com/watch?v=KHanq9mriJI">
<node TEXT="Vending Machines Youll Wish We Had More Of In The World - Duration: 10:41.  10:41. Godot 3: Finite State Machine Code Example Overview - Duration: 11:41. GDquest 16566 views." ID="ID_239744540" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="06b vending machine - YouTube" FOLDED="true" ID="ID_829987704" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://www.youtube.com/watch?v=1D7_5gac8LE">
<node TEXT="70+ channels more of your favorite shows  unlimited DVR storage space all in one great price." ID="ID_620692060" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Finite state machine - Rosetta Code" FOLDED="true" ID="ID_1706398886" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://rosettacode.org/wiki/Finite_state_machine">
<node TEXT="A Finite state machine (FSM) is computational abstraction which maps a finite number of states to other states within the same set via transitions. An FSM can only be in one state at any given moment. Transitions can either be explicit or implicit; explicit transitions are triggered by an input signal and implicit transitions by the internal state of the system (that is the current state)." ID="ID_1377203238" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Finite State Machine based Vending Machine Controller with " FOLDED="true" ID="ID_238294953" CREATED="1566553719119" MODIFIED="1566553719119" LINK="http://aircconline.com/vlsics/V3N2/3212vlsics02.pdf">
<node TEXT="Finite State Machine based Vending Machine Controller with Auto-Billing Features  Vending Machines have been in existence since 1880s. The first  In a Finite State Machine the circuit&#xe2;&#x20ac;&#x2122;s output is defined in a different set of states i.e. each output is a state. A State Register to hold the state of the machine and a next state logic to " ID="ID_1406247604" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Finite State Machine (FSM) : Types Properties Diagram " FOLDED="true" ID="ID_1397515206" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://www.elprocus.com/finite-state-machine-mealy-state-machine-and-moore-state-machine/">
<node TEXT="Finite State Machine. This finite state machine diagram explains the various conditions of a turnstile. Whenever placing a coin into a turnstile will unbolt it and after the turnstile has been pressed it bolts gain. Placing a coin into an unbolted turnstile otherwise pressing against a bolted turnstile will not alter its state." ID="ID_39138549" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="How to implement finite state machine in c - AticleWorld" FOLDED="true" ID="ID_1225755007" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://aticleworld.com/state-machine-using-c/">
<node TEXT="A finite state machine in c is one of the popular design patterns for the embedded system.A finite state machine makes the development easy and smooth. There are a lot of devices which use event base states like coffee machine vending machine POS devices door lock system etc." ID="ID_1008366495" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="VLSICoding: Verilog Code for Vending Machine Using FSM" FOLDED="true" ID="ID_1553419530" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://vlsicoding.blogspot.com/2013/11/verilog-code-for-vending-machine-using.html">
<node TEXT="Verilog Code for Vending Machine Using FSM In this wending machine it accepts only two coins 5 point and 10 point. Whenever total of coins equal to 15 points then nw_pa signal will go high and user will get news paper. It will not return any coin if total of points exceeds 15 points." ID="ID_863250056" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="Design of Vending Machine using Finite State Machine and " FOLDED="true" ID="ID_1471445506" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://www.researchgate.net/publication/276136463_Design_of_Vending_Machine_using_Finite_State_Machine_and_Visual_Automata_Simulator">
<node TEXT="PDF | Automata theory is dominating in many applications developed from the concept of finite state machine (FSM). This research will consider the design of vending machine (VM) which improves " ID="ID_986471495" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="Lecture 23 FSM design - University of Washington" FOLDED="true" ID="ID_71783433" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://courses.cs.washington.edu/courses/cse370/09wi/LectureSlides/23-Encoding.pdf">
<node TEXT="CSE370 Lecture 23 3 Usual example: A vending machine 15 cents for a cup of coffee Doesn&#xe2;&#x20ac;&#x2122;t take pennies or quarters Doesn&#xe2;&#x20ac;&#x2122;t provide any change Vending Machine FSM N D Reset Clock Coin Open Sensor Release Mechanism CSE370 Lecture 23 4 A vending machine: After state minimization symbolic state table present inputs next output state D N state " ID="ID_1492708722" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="fpga - Verilog Vending machine FSM - Stack Overflow" FOLDED="true" ID="ID_1168974016" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://stackoverflow.com/questions/28333742/verilog-vending-machine-fsm">
<node TEXT="I am trying to build a finite state machine in verilog for a vending machine that accepts 510 25 cents as inputs and then output a a soda or diet and also output the appropriate change(as the number of nickels)." ID="ID_503997808" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="10.1. Phase-Lock-Loop" FOLDED="true" ID="ID_951474851" CREATED="1566553719120" MODIFIED="1566553719120" LINK="http://users.ece.utexas.edu/~valvano/Volume1/E-Book/C10_FiniteStateMachines.htm">
<node TEXT="This abstraction will be illustrated during the design of finite state machines (FSM). All embedded systems have inputs and outputs but FSMs have states. We will embody knowledge &#xe2;&#x20ac;&#x153;what we know&#xe2;&#x20ac;&#xfffd; or &#xe2;&#x20ac;&#x153;where we&#xe2;&#x20ac;&#x2122;ve been&#xe2;&#x20ac;&#xfffd; by being in a state. A traffic light and vending machine will be implemented using FSMs." ID="ID_1858958810" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="CSE 140L-Lecture 6 - cseweb.ucsd.edu" FOLDED="true" ID="ID_542511160" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://cseweb.ucsd.edu/classes/wi06/cse140L/CSE%20140L-Lecture%206.pdf">
<node TEXT="1 CSE140 L Instructor: Thomas Y. P. Lee February 15 2006 Agenda zLab3 Counters are FSM Finite State Machine Models to represent FSM &#xe2;&#x20ac;&#x201c; Mealy Machine and Moore Machine zFSM Design Procedure State Diagram State Transition Table Next State Logic Functions zExample One &#xe2;&#x20ac;&#x201c; Vending Machine Mealy Machine Implementation Moore Machine Implementation zQuartus II Tutorial &#xe2;&#x20ac;&#x201c; Finite State Machine " ID="ID_70128171" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
</node>
<node TEXT="spell checker Finite State Machine Interactive Visualisation#$D$#" FOLDED="true" ID="ID_495815301" CREATED="1566553719120" MODIFIED="1566553719120">
<icon BUILTIN="stop-sign"/>
<node TEXT="FipsOrtho: A spell checker for learners of French | L " FOLDED="true" ID="ID_1184973628" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://www.researchgate.net/publication/228359911_FipsOrtho_A_spell_checker_for_learners_of_French">
<node TEXT="Research has shown that any assumption that L2 learners of English do well to rely on the feedback provided by generic spell checkers (for example the MS Word spell checker) is misplaced." ID="ID_1582124502" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="What are some algorithms of spelling correction that are " FOLDED="true" ID="ID_1606957691" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://www.quora.com/What-are-some-algorithms-of-spelling-correction-that-are-used-by-search-engines-For-example-when-I-used-Google-to-search-Google-imeges-it-prompted-me-Did-you-mean-Google-images">
<node TEXT="Spelling correction algorithms in search engines are similar to those of spell checkers in word processors. Spell Checking Algorithm Every query term is checked against a dictionary. If a term is not found in the dictionary then those words fro" ID="ID_148459954" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="US6424983B1 - Spelling and grammar checking system " FOLDED="true" ID="ID_360139779" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://patents.google.com/patent/US6424983B1/en">
<node TEXT="In certain embodiments of the invention finite state machines are utilized in the spelling and grammar correction process. Thus according to certain embodiments the invention stores one or more lexicon finite state machines (FSM) each of which represents a set of correctly spelled reference words." ID="ID_1692340909" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="US7243305B2 - Spelling and grammar checking system " FOLDED="true" ID="ID_1035572747" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://patents.google.com/patent/US7243305B2/en">
<node TEXT="System of correcting misspelled words in input text detects a misspelled word in the input text determines a list of alternative words for the misspelled word and ranks the list of alternative words based on a context of the input text. In certain embodiments finite state machines (FSMs) are utilized in the spelling and grammar correction process storing one or more lexicon FSMs each of " ID="ID_1502292849" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="spell checker for abiword free download - SourceForge" FOLDED="true" ID="ID_1761184434" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://sourceforge.net/directory/?q=spell%20checker%20for%20abiword">
<node TEXT="Arabic word list for spell checking containing 9 million Arabic words. The words are automatically generated from the AraComLex open-source finite state transducer. The entire list is validated against Microsoft Word spell checker." ID="ID_1418392520" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="Jazzy - Java Spell Check API - findbestopensource.com" FOLDED="true" ID="ID_952476288" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://www.findbestopensource.com/product/jazzy">
<node TEXT="Jazzy - Java Spell Check API #opensource. Welcome to the Visual Studio Spell Checker project.This project is a Visual Studio editor extension that checks the spelling of comments strings and plain text as you type or interactively with a tool window." ID="ID_1217993963" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="dictomaton - Finite state dictionaries in Java" FOLDED="true" ID="ID_1059450964" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://www.findbestopensource.com/product/danieldk-dictomaton">
<node TEXT="dictomaton - Finite state dictionaries in Java #opensource. State machines are a very effective way to manage game state either on your main game play object (Game Over Restart Continue etc) or on individual actors and NPCs (AI behaviours Animations etc)." ID="ID_860596434" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="Resources - graphviz.gitlab.io" FOLDED="true" ID="ID_1280378410" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://graphviz.gitlab.io/resources/">
<node TEXT="Finite State Machine web visualization interactively accepts input from a form [Gertjan van Noord] RPMGraph uses neato to draw a graph of dependencies between RPMs on RedHat or other RPM based systems [Andrea Lombardoni] Compendium-TA an integrated package of modelling tools which uses Graphviz for graph layouts [Alan Richardson]" ID="ID_795632069" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="Spell Checker for R&#xe2;&#x20ac;&#xa6;qdap::check_spelling | R-bloggers" FOLDED="true" ID="ID_1171826586" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://www.r-bloggers.com/spell-checker-for-rqdapcheck_spelling/">
<node TEXT="I often have had requests for a spell checker for R character vectors. The utils::aspell function can be used to check spelling but many Windows users have reported difficulty with the function. I came across an article on spelling in &#xe2;&#x20ac;&#xa6; Continue reading &#xe2;&#x2020;&#x2019;" ID="ID_1590641325" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="Embedded Finite State Machine (EFSM) - fileguru.com" FOLDED="true" ID="ID_1611221282" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://www.fileguru.com/Embedded-Finite-State-Machine--eFSM-/info">
<node TEXT="The embedded Finite State Machine (FSM) Facility that can be used to model and control a reactive or stateful system. The system can be represented by any number of states. State transitions are driven by a number of events. eFSM is written in C." ID="ID_910011888" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="Simple Finite State Machine Generator - Download Simple " FOLDED="true" ID="ID_1092538253" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://www.fileguru.com/Simple-Finite-State-Machine-Generator/info">
<node TEXT="A simple fast finite state machine (fsm) C code generator using an awk script to read a fsm specification (state event action next state) to produce data for use by included transition function. You provide the fsm spec and the action functions." ID="ID_1172672630" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="(PDF) Interactive and Context-Aware Tag Spell Check and " FOLDED="true" ID="ID_1883841080" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://www.academia.edu/2832377/Interactive_and_Context-Aware_Tag_Spell_Check_and_Correction">
<node TEXT="Interactive and Context-Aware Tag Spell Check and Correction.  level word level syntax level and semantic level. These are V |(v t) &#xe2;&#x2c6;&#x2c6; E}. evaluated by a support vector machine to predict the correct Both edges and nodes in the graph are weighted. Let candidate.  Improving Finite-State Spell-Checker Suggestions with Part of Speech N " ID="ID_1832905568" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
</node>
<node TEXT="spell checker Finite State Machine Code#$D$#" FOLDED="true" ID="ID_1440303849" CREATED="1566553719120" MODIFIED="1566553719120">
<icon BUILTIN="stop-sign"/>
<node TEXT="c++ - debugging finite state machine spell checker code " FOLDED="true" ID="ID_1779561284" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://stackoverflow.com/questions/2436896/debugging-finite-state-machine-spell-checker-code">
<node TEXT="I need someone to debug the lines of c++ code I wrote below so it can run. It is intended to spell check the word and using state to state transition. #includeiostream #includestrin" ID="ID_1274145690" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="Topic: state-machine &#xc2;&#xb7; GitHub" FOLDED="true" ID="ID_363438283" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://github.com/topics/state-machine">
<node TEXT="A finite state machine library using ES6 promises  javascript redux state-machine state-management reducer  php json-api laravel laravel-modules jwt php7 laravel5 serialize spell-check state-machine oas oas3 openapi api generator code-generator api-generator" ID="ID_460607590" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="How to Code a State Machine in C or C++ - Barr Group" FOLDED="true" ID="ID_478779433" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://barrgroup.com/Embedded-Systems/How-To/Coding-State-Machines">
<node TEXT="Specifying State Machines in C and C++. Now after you have seen how you could code a state machine in C++ lets look at Listing 2 again but this time not so much as an implementation of a state machine but as its specification. In fact I challenge you to invent any other textual notation for state machines that would be more precise expressive and succinct than Listing 2 is." ID="ID_1096790326" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="Finite State Machines - Xilinx" FOLDED="true" ID="ID_1941223387" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://www.xilinx.com/support/documentation/university/ISE-Teaching/HDL-Design/14x/Nexys3/Verilog/docs-pdf/lab10.pdf">
<node TEXT="A finite-state machine (FSM) or simply a state machine is used to design both computer programs and sequential logic circuits. It is conceived as an abstract machine that can be in one of a finite number of user-defined states. The machine is in only one state at a time; the state it is in at any given time is called the current state ." ID="ID_1784988386" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="Topic: spell-checker &#xc2;&#xb7; GitHub" FOLDED="true" ID="ID_323127051" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://github.com/topics/spell-checker">
<node TEXT="spell-checker spelling client-side javascript open-source free wordlist JavaScript Updated May 20  An open-source spell checker for texts written in Spanish with a focus on tweets. lexical-normalization spell-checker finite-state-transducers out-of-vocabulary language-modeling spanish-tweets short-text twitter python restful-api" ID="ID_1857044325" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="12. Finite-State Machines 12.1 Introduction - cse.chalmers.se" FOLDED="true" ID="ID_1912522025" CREATED="1566553719120" MODIFIED="1566553719120" LINK="http://www.cse.chalmers.se/~coquand/AUTOMATA/book.pdf">
<node TEXT="12. Finite-State Machines 12.1 Introduction This chapter introduces finite-state machines a primitive but useful computational model for both hardware and certain types of software. We also discuss regular expressions the correspondence between non-deterministic and deterministic machines and more on grammars." ID="ID_1777271501" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="Finite-State Machines: Theory and Implementation" FOLDED="true" ID="ID_1287667963" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://gamedevelopment.tutsplus.com/tutorials/finite-state-machines-theory-and-implementation--gamedev-11867">
<node TEXT="A finite-state machine is a model used to represent and control execution flow. It is perfect for implementing AI in games producing great results without a complex code.  Finite-State Machines: Theory and Implementation. by Fernando Bevilacqua 24 Oct 2013.  That will not happen if the active state is go home (check out the figure below)." ID="ID_1193054987" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="VHDL Finite State Machine Pattern Checker - Electrical " FOLDED="true" ID="ID_1989839214" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://electronics.stackexchange.com/questions/51034/vhdl-finite-state-machine-pattern-checker">
<node TEXT="VHDL Finite State Machine Pattern Checker. Ask Question Asked 6 years 7 months ago.  The main problem is that your code was that the assignment of Z was incorrect. The next problem was that the state machine itself was incorrect.  Call a Finite State Machine in VHDL. 1. Problem in synthesizing. 1." ID="ID_927211939" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="Personalized Spell Checking using Neural Networks" FOLDED="true" ID="ID_1177681029" CREATED="1566553719120" MODIFIED="1566553719120" LINK="https://www.cs.umb.edu/~marc/pubs/garaas_xiao_pomplun_HCII2007.pdf">
<node TEXT="Personalized Spell Checking using Neural Networks Tyler Garaas Mei Xiao and Marc Pomplun  observations of a single typist&#xe2;&#x20ac;&#x2122;s behavior a spell checker employing this system  The finite state machine used to determine when a correction is made." ID="ID_1481474572" CREATED="1566553719120" MODIFIED="1566553719120"/>
</node>
<node TEXT="Functional Finite State Machine Paths Coverage using " FOLDED="true" ID="ID_717297572" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://www.design-reuse.com/articles/24546/functional-fsm-paths-coverage-systemverilog.html">
<node TEXT="Finite state machines (FSMs) have finite number of states conditions that lead to internal state transitions and relevant behavior of the design in each machine state. An FSM generally models the behavior of the control logic. For example standard-based layered protocols typically model each layer in terms of an FSM." ID="ID_1345578338" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="Why Developers Never Use State Machines - Skorks" FOLDED="true" ID="ID_1181795710" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://skorks.com/2011/09/why-developers-never-use-state-machines/">
<node TEXT="A few months ago I saw a great little blog post about state machines on the Shopify blog. The message was that state machines are great and developers should use them more &#xe2;&#x20ac;&#x201c; given my recent experiences with state machines at CrowdHired I could certainly agree with that. But it got me thinking how many times in my developer career have I actually used a state machine (either separate " ID="ID_1415784799" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="finite automata - How do I implement a DFA in Java without " FOLDED="true" ID="ID_300982863" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://stackoverflow.com/questions/20153970/how-do-i-implement-a-dfa-in-java-without-using-reg-expression">
<node TEXT="How do I implement a DFA in Java without using reg expression? Ask Question Asked 5 years 8 months ago. Active  Then after check if current state is a valid end state. share | improve this answer.  Browse other questions tagged java finite-automata state-machine dfa states or ask your own question." ID="ID_1480502955" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
</node>
</node>
<node TEXT="Language accepted by FA" ID="ID_1627298122" CREATED="1566881027573" MODIFIED="1566881027573" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Language accepted by Finite Automata Interactive Visualisation#$D$#" FOLDED="true" ID="ID_317016946" CREATED="1566553719112" MODIFIED="1566553719112">
<icon BUILTIN="stop-sign"/>
<node TEXT="Deterministic Finite Automata (Example -1) - YouTube" FOLDED="true" ID="ID_1293402446" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://www.youtube.com/watch?v=40i4PKpM0cI">
<node TEXT="An Example of DFA which accepts all strings that starts with 0. This lecture shows how to construct a DFA that accepts all binary strings that starts with 0 and rejects all that does not start " ID="ID_1633965168" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Automata theory - Wikipedia" FOLDED="true" ID="ID_502918150" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://en.wikipedia.org/wiki/Automata_theory">
<node TEXT="Automata theory is the study of abstract machines and automata as well as the computational problems that can be solved using them. It is a theory in theoretical computer science and discrete mathematics (a subject of study in both mathematics and computer science).The word automata (the plural of automaton) comes from the Greek word &#xce;&#xb1;&#xe1;&#xbd;&#xfffd;&#xcf;&#x201e;&#xcf;&#x152;&#xce;&#xbc;&#xce;&#xb1;&#xcf;&#x201e;&#xce;&#xb1; which means self-acting." ID="ID_1107951284" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Finite State Machine (Finite Automata) - YouTube" FOLDED="true" ID="ID_365566590" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://www.youtube.com/watch?v=Qa6csfkK7_I">
<node TEXT="TOC: Finite State Machine (Finite Automata) Topics discussed: 1. The Basics of Finite State Machine. 2. Finite Automata 3. Types of Finite Automata 4. DFA- Deterministic Finite Automata 5. Formal " ID="ID_534758245" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Regular Languages | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1604831854" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://brilliant.org/wiki/regular-languages/">
<node TEXT="Finite automata generate or model regular languages. This means that regular languages can be described by a simple state machine diagram. A finite state machine M M M describes a given language L L L. M M M is said to accept a string w w w if the machine starts in a start state undergoes some series of state transitions and ends up in " ID="ID_1554980339" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="FSA6.2xx: Finite State Automata Utilities" FOLDED="true" ID="ID_1659320185" CREATED="1566553719112" MODIFIED="1566553719112" LINK="http://www.let.rug.nl/vannoord/Fsa/">
<node TEXT="Manipulations include automata construction from regular expresssions determinization (both for finite-state acceptors and finite-state transducers) minimization composition complementation intersection Kleene closure etc. Various visualization tools are available to browse finite-state automata." ID="ID_608091047" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Finite-state machine - Wikipedia" FOLDED="true" ID="ID_1780836561" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://en.wikipedia.org/wiki/Finite_automata">
<node TEXT="A finite-state machine (FSM) or finite-state automaton (FSA plural: automata) finite automaton or simply a state machine is a mathematical model of computation. It is an abstract machine that can be in exactly one of a finite number of states at any given time." ID="ID_895734816" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Visualization of Automata - asethome.org" FOLDED="true" ID="ID_1458163497" CREATED="1566553719112" MODIFIED="1566553719112" LINK="http://www.asethome.org/automata/">
<node TEXT="Dynamic Visualization of Finite Automata (FA): Finite Automata (FA) accept Regular Languages such as L 2 = aba* = { ab aba abaa abaaa abaaaa abaaaaa . . . . }. Dynamic visualization of an FA can be seen following the link given below: A Finite Automaton for ab*" ID="ID_881583296" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Increasing Visualization and Interaction in the Automata " FOLDED="true" ID="ID_1578413345" CREATED="1566553719112" MODIFIED="1566553719112" LINK="https://www.researchgate.net/publication/2369575_Increasing_Visualization_and_Interaction_in_the_Automata_Theory_Course">
<node TEXT="In this paper we describe how to increase the visualization and interaction in the automata theory course through the use of the tools JFLAP and Pate." ID="ID_1193766876" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="Finite Automata (FA) - asethome.org" FOLDED="true" ID="ID_965929512" CREATED="1566553719112" MODIFIED="1566553719112" LINK="http://www.asethome.org/fa/FA_TransitionGraphs.htm">
<node TEXT="The above finite automaton has one final state although finite automata are allowed to have zero or more final states. The set of strings accepted by a finite automaton is referred to as the language accepted by the finite automaton (or the regular expression defined by the finite automaton)." ID="ID_475650440" CREATED="1566553719112" MODIFIED="1566553719112"/>
</node>
<node TEXT="FAdo Interactive Tools for Learning Formal Computational " FOLDED="true" ID="ID_588907904" CREATED="1566553719113" MODIFIED="1566553719113" LINK="http://www.dcc.fc.up.pt/~nam/publica/fado_envc05.pdf">
<node TEXT="FAdo: Interactive Tools for Learning Formal Computational Models&#xe2;&#x2c6;&#x2014; Rog&#xc2;&#xb4;erio Reis Nelma Moreira DCC-FC LIACC Universidade do Porto R. do Campo Alegre 823 4150 Porto Portugal {rvrnam}@ncc.up.pt Abstract FAdo1 is an ongoing project which aims the development of an interactive en-vironment for symbolic manipulation of formal languages." ID="ID_1594718619" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="A visual and interactive automata theory course " FOLDED="true" ID="ID_1605657761" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://www.researchgate.net/publication/220807763_A_visual_and_interactive_automata_theory_course_emphasizing_breadth_of_automata">
<node TEXT="Request PDF on ResearchGate | A visual and interactive automata theory course emphasizing breadth of automata | Teaching Theory of Computation and learning it are both challenging tasks. Moreover " ID="ID_439408877" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="create automata finite free download - SourceForge" FOLDED="true" ID="ID_1763057022" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://sourceforge.net/directory/?q=create%20automata%20finite">
<node TEXT="Finite Automata A package for computations with finite automata (rooted tree automorphisms) for the GAP system http  is a software library for building interactive graphical modelling and visualisation applications. Models are represented in Zinc as  word problem accepted language etc. Downloads: 0 This Week Last Update: 2014 -06-09 See " ID="ID_609897186" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
</node>
<node TEXT="Language accepted by Finite Automata Code#$D$#" FOLDED="true" ID="ID_1807400679" CREATED="1566553719113" MODIFIED="1566553719113">
<icon BUILTIN="stop-sign"/>
<node TEXT="dfa - Implementing a code to simulate a finite automaton " FOLDED="true" ID="ID_140543098" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://stackoverflow.com/questions/10579348/implementing-a-code-to-simulate-a-finite-automaton-nondeterministic-in-c">
<node TEXT="Im doing an assignment for automata theory which I have to determine whether a word is accepted or not by a transition function for a deterministic finite automaton. I have this input file: 6 8 0 2 2 5 0 0 a 0 1 a 1 1 b 1 2 c 1 3 c 3 4 d 4 4 d 4 5 d 3 aaabcccc aabbbbcdc acdddddd" ID="ID_1329227355" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="Deterministic finite automaton - Wikipedia" FOLDED="true" ID="ID_770750262" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://en.wikipedia.org/wiki/Deterministic_finite_automaton">
<node TEXT="The figure illustrates a deterministic finite automaton using a state diagram. In this example automaton there are three states: S 0 S 1 and S 2 (denoted graphically by circles). The automaton takes a finite sequence of 0s and 1s as input. For each state there is a transition arrow leading out to a next state for both 0 and 1." ID="ID_1134355384" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="Finite-state machine - Wikipedia" FOLDED="true" ID="ID_1385646227" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://en.wikipedia.org/wiki/Finite_state_machine">
<node TEXT="A finite state machine has the same computational power as a Turing machine that is restricted such that its head may only perform read operations and always has to move from left to right. That is each formal language accepted by a finite state machine is accepted by such a kind of restricted Turing machine and vice versa." ID="ID_684677317" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="Deterministic Finite Automata (Example -1) - YouTube" FOLDED="true" ID="ID_826525827" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://www.youtube.com/watch?v=40i4PKpM0cI">
<node TEXT="An Example of DFA which accepts all strings that starts with 0. This lecture shows how to construct a DFA that accepts all binary strings that starts with 0 and rejects all that does not start " ID="ID_1218828896" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="TOC 2013 Regular languages and finite automata - YouTube" FOLDED="true" ID="ID_1865976530" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://www.youtube.com/watch?v=L-9iAeV0Mi4">
<node TEXT="Regular languages and finite automata. 1. Complement of L(A) is context-free. 2. L(A) = L((11*0+0)(0 + 1)*0*1*) 3. For the language accepted by A A is the minimal DFA. 4. A accepts all strings " ID="ID_21778059" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="Regular language - Wikipedia" FOLDED="true" ID="ID_940339239" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://en.wikipedia.org/wiki/Regular_language">
<node TEXT="A regular language satisfies the following equivalent properties: it is the language of a regular expression (by the above definition) it is the language accepted by a nondeterministic finite automaton (NFA); it is the language accepted by a deterministic finite automaton (DFA); it can be generated by a regular grammar; it is the language accepted by an alternating finite automaton" ID="ID_500746516" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="Regular languages and finite automata - GeeksforGeeks" FOLDED="true" ID="ID_912584059" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://www.geeksforgeeks.org/regular-languages-and-finite-automata-gq/">
<node TEXT="For the language accepted by A A is the minimal DFA. 4. A accepts all strings over {0 1} of length at least 2. A. 1 and 3 only. B.  GATE-CS-2009 Regular languages and finite automata Discuss it.  Writing code in comment? Please use ide.geeksforgeeks.org " ID="ID_442840740" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="C code to implement DFA(Deterministic Finite Automata " FOLDED="true" ID="ID_1183348582" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://www.coders-hub.com/2013/05/c-code-for-dfadeterministic-finite.html">
<node TEXT="C code to implement DFA(Deterministic Finite Automata) /* C program to implement DFA(Deterministic Finite Automata).  (\n\nSTRING ACCEPTED\n); flag=1;  Related Programs:-&#xe2;&#x2dc;&#x2026; NFA (Non-Deterministic Finite Automata) &#xe2;&#x2dc;&#x2026; Convert NFA to DFA &#xe2;&#x2dc;&#x2026; Lexical Analyzer &#xe2;&#x2dc;&#x2026; Syntax Tree &#xe2;&#x2dc;&#x2026; Calculate In and Out. Posted by Md Mohsin at 11:41 am. Email " ID="ID_1699810462" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="How to determine if an automata (DFA) accepts an infinite " FOLDED="true" ID="ID_1019769580" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://cs.stackexchange.com/questions/73993/how-to-determine-if-an-automata-dfa-accepts-an-infinite-or-finite-language">
<node TEXT="On Drawing a DFA  if there are loops in states then there is a possiblity that automata accepts infinite language . Whereas if there are no loops in a DFA  then it certainly accepts finite language ." ID="ID_417188117" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="Deterministic Finite Automata - cse.chalmers.se" FOLDED="true" ID="ID_889386477" CREATED="1566553719113" MODIFIED="1566553719113" LINK="http://www.cse.chalmers.se/~coquand/AUTOMATA/o2.pdf">
<node TEXT="Deterministic Finite Automata De&#xef;&#xac;&#xfffd;nition: A deterministic &#xef;&#xac;&#xfffd;nite automaton (DFA) consists of 1. a &#xef;&#xac;&#xfffd;nite set of states (often denoted Q) 2. a &#xef;&#xac;&#xfffd;nite set &#xce;&#xa3; of symbols (alphabet)  We can now de&#xef;&#xac;&#xfffd;ne mathematically the language accepted by a given automaton Q&#xce;&#xa3;&#xce;&#xb4;q0F" ID="ID_1735143533" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="automata check string is accepted by language | C++ " FOLDED="true" ID="ID_425671515" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://stackoverflow.com/questions/37084575/automata-check-string-is-accepted-by-language-c">
<node TEXT="The main idea is to use the finite state machine states and process the string step by step. The code is very simple and straight forward to write because its just the finite state machine traversing through different states and processing the input string through different states just like your automata does." ID="ID_1478911085" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="Automatic Java Code Generator for Regular Expression and " FOLDED="true" ID="ID_1155287553" CREATED="1566553719113" MODIFIED="1566553719113" LINK="http://www.diva-portal.org/smash/get/diva2:537446/FULLTEXT01.pdf">
<node TEXT="of implementing finite automata int Java Code. 1.1 Problem and Motivation Implementing a deterministic finite automaton (DFA) in Java is a long process that may take plenty of time and the possibility to make mistakes is too high especially for large and complex  expression that proves that the language accepted by finite automatons as " ID="ID_1823389216" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
</node>
</node>
<node TEXT="Definition of Regular Language" ID="ID_997512862" CREATED="1566881027576" MODIFIED="1566881027576" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Definition of Regular Language Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1153176461" CREATED="1566553719113" MODIFIED="1566553719113">
<icon BUILTIN="stop-sign"/>
<node TEXT="Interactivity - Wikipedia" FOLDED="true" ID="ID_1353194283" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://en.wikipedia.org/wiki/Interactivity">
<node TEXT="In the context of communication between a human and an artifact interactivity refers to the artifact&#xe2;&#x20ac;&#x2122;s interactive behaviour as experienced by the human user. This is different from other aspects of the artifact such as its visual appearance its internal working and the meaning of the signs it might mediate." ID="ID_1402359784" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="Visual programming language - Wikipedia" FOLDED="true" ID="ID_1978977207" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://en.wikipedia.org/wiki/Visual_programming_language">
<node TEXT="In computing a visual programming language (VPL) is any programming language that lets users create programs by manipulating program elements graphically rather than by specifying them textually. A VPL allows programming with visual expressions spatial arrangements of text and graphic symbols used either as elements of syntax or secondary notation.For example many VPLs (known as dataflow " ID="ID_1330389750" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="Definition of visual media - answers.com" FOLDED="true" ID="ID_1295573391" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://www.answers.com/Q/Definition_of_visual_media">
<node TEXT="The definition of a visual aid is something that can be seen that aids learning.  language colours and imgaes.  print magazines screen-based media interactive web design short film " ID="ID_77074006" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="Definition | Definition of Definition at Dictionary.com" FOLDED="true" ID="ID_1113429619" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://www.dictionary.com/browse/definition">
<node TEXT="Definition definition the act of defining or of making something definite distinct or clear: We need a better definition of her responsibilities. See more." ID="ID_941000912" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="Interactive | Definition of Interactive by Merriam-Webster" FOLDED="true" ID="ID_1152624917" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://www.merriam-webster.com/dictionary/interactive">
<node TEXT="Interactive definition is - mutually or reciprocally active. How to use interactive in a sentence.  English Language Learners Definition of interactive: designed to respond to the actions commands etc. of a user  Test your visual vocabulary with our 10-question challenge! TAKE THE QUIZ." ID="ID_802884973" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="7 Easy ESL Visual Aids to Teach Anything Effectively " FOLDED="true" ID="ID_547084207" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://www.fluentu.com/blog/educator-english/esl-visual-aids/">
<node TEXT="Visual aids add some pizazz to your lessons and help take the focus off of you or the textbook. Now that we&#xe2;&#x20ac;&#x2122;ve outlined just some of the benefits of using visual aids let&#xe2;&#x20ac;&#x2122;s look at seven visual aids that work. 7 Easy ESL Visual Aids You Can Use Immediately" ID="ID_722853204" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="Disappearing Languages - interactive.howwegettonext.com" FOLDED="true" ID="ID_1581810274" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://interactive.howwegettonext.com/endangeredlanguages/">
<node TEXT="Disappearing Languages. The way we speak has an enormous effect on our identities. The ever-changing languages dialects or even accents that we use define our relationship with the world allowing us to express concepts and ideas that might be impossible in other languages." ID="ID_907490000" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="Visual | Definition of Visual by Merriam-Webster" FOLDED="true" ID="ID_532913115" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://www.merriam-webster.com/dictionary/visual">
<node TEXT="Visual definition is - of relating to or used in vision. How to use visual in a sentence.  English Language Learners Definition of visual (Entry 2 of 2): something you look at (such as a picture chart or film) that is used to make something more appealing or easier to understand." ID="ID_1375423435" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="Math Dictionary" FOLDED="true" ID="ID_1599122243" CREATED="1566553719113" MODIFIED="1566553719113" LINK="http://mathematicsdictionary.com/math-vocabulary.htm">
<node TEXT="Math Dictionary Math Dictionary  center (of a regular polygon) center (of a sphere) center (of an ellipse) centimeter (cm) central angle. central tendency. centroid. certain. chain rule  symbolic language. symmetry. system of equations. T. table. Tabular. tabulate. tally marks. tally table. tan." ID="ID_913422171" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="A Guide To Parsing: Algorithms And Terminology" FOLDED="true" ID="ID_318898033" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://tomassetti.me/guide-parsing-algorithms-terminology/">
<node TEXT="In fact languages that can be parsed with just regular expressions are called regular languages. There is a formal mathematical definition but that is beyond the scope of this article. Though one important consequence of the theory is that regular languages can be parsed or expressed also by a finite state machine. That is to say regular " ID="ID_1718991874" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="Characteristics of English Language Learners - LearnAlberta.ca" FOLDED="true" ID="ID_1122508488" CREATED="1566553719113" MODIFIED="1566553719113" LINK="http://www.learnalberta.ca/content/eslapb/documents/Characteristics_of_English_Language_Learners.pdf">
<node TEXT="K&#xe2;&#x20ac;&#x201c;12 English as a Second Language Proficiency Benchmarks 1 / 2 &#xc2;&#xa9;Alberta Education Alberta Canada September 2010 Characteristics of English Language Learners . Division Level 1 Beginning Level 2 Developing Level 3 Expanding Level 4 Bridging Level 5 Extending Behaviours K - 12 English language learners may: &#xe2;&#x20ac;&#xa2; be self-conscious and" ID="ID_1177976801" CREATED="1566553719113" MODIFIED="1566553719113"/>
</node>
<node TEXT="Interactives . 3D Shapes . Pyramids - Annenberg Learner" FOLDED="true" ID="ID_465116697" CREATED="1566553719113" MODIFIED="1566553719113" LINK="https://www.learner.org/interactives/geometry/3d_pyramids.html">
<node TEXT="3D Shapes Pyramids A pyramid is a polyhedron for which the base is a polygon and all lateral faces are triangles. In this lesson well only concern ourselves with pyramids whose lateral faces are congruent &#xe2;&#x20ac;&#x201d; that is theyre the same size and shape. Technically when the lateral faces are congruent triangles the shape is known as a right pyramid indicating that the apex &#xe2;&#x20ac;&#x201d; the vertex at " ID="ID_1120994225" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
</node>
<node TEXT="Definition of Regular Language Code#$D$#" FOLDED="true" ID="ID_1762329374" CREATED="1566553719114" MODIFIED="1566553719114">
<icon BUILTIN="stop-sign"/>
<node TEXT="Regular language - Wikipedia" FOLDED="true" ID="ID_106100740" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://en.wikipedia.org/wiki/Regular_language">
<node TEXT="Formal definition. The collection of regular languages over an alphabet &#xce;&#xa3; is defined recursively as follows: . The empty language &#xc3;&#x2dc; and the empty string language {&#xce;&#xb5;} are regular languages. For each a &#xe2;&#x2c6;&#x2c6; &#xce;&#xa3; (a belongs to &#xce;&#xa3;) the singleton language {a} is a regular language.; If A and B are regular languages then A &#xe2;&#x2c6;&#xaa; B (union) A &#xe2;&#x20ac;&#xa2; B (concatenation) and A* (Kleene star) are regular " ID="ID_280840964" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="Regular expression - Wikipedia" FOLDED="true" ID="ID_1731812258" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://en.wikipedia.org/wiki/Regular_expression">
<node TEXT="A regular expression regex or regexp (sometimes called a rational expression) is a sequence of characters that define a search pattern.Usually such patterns are used by string searching algorithms for find or find and replace operations on strings or for input validation.It is a technique developed in theoretical computer science and formal language theory." ID="ID_1275242668" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="Definitions of Regular Language and Regular Expression" FOLDED="true" ID="ID_1127014014" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.cs.odu.edu/~toida/nerzic/390teched/regular/reg-lang/definitions.html">
<node TEXT="Definitions of Regular Language and Regular Expression Subjects to be Learned. regular language regular expression Contents Here we are going to learn one type of language called regular language which is the simplest of the four Homsky formal languages and regular expression which is one of the ways to describe regular languages." ID="ID_240188775" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="Compiler Design - Regular Expressions" FOLDED="true" ID="ID_866834204" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.tutorialspoint.com/compiler_design/compiler_design_regular_expressions">
<node TEXT="Each pattern matches a set of strings so regular expressions serve as names for a set of strings. Programming language tokens can be described by regular languages. The specification of regular expressions is an example of a recursive definition. Regular languages are easy to understand and have efficient implementation." ID="ID_1907105931" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="A Guide To Parsing: Algorithms And Terminology" FOLDED="true" ID="ID_118222729" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://tomassetti.me/guide-parsing-algorithms-terminology/">
<node TEXT="In fact languages that can be parsed with just regular expressions are called regular languages. There is a formal mathematical definition but that is beyond the scope of this article. Though one important consequence of the theory is that regular languages can be parsed or expressed also by a finite state machine. That is to say regular " ID="ID_1763908250" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="Regular Expressions Regular Grammar and Regular Languages " FOLDED="true" ID="ID_592071914" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.geeksforgeeks.org/regular-expressions-regular-grammar-and-regular-languages/">
<node TEXT="Regular Grammar : A grammar is regular if it has rules of form A - a or A - aB or A - &#xc9;&#x203a; where &#xc9;&#x203a; is a special symbol called NULL. Regular Languages : A language is regular if it can be expressed in terms of regular expression. Closure Properties of Regular Languages Union : If L1 and If L2 are two regular languages their union L1 &#xe2;&#x2c6;&#xaa; L2 will also be regular." ID="ID_656344659" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="Regular languages and finite automata - GeeksforGeeks" FOLDED="true" ID="ID_1762361099" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.geeksforgeeks.org/regular-languages-and-finite-automata-gq/">
<node TEXT="1 is true. L(A) is regular its complement would also be regular. A regular language is also context free. 2 is true. 3 is false the DFA can be minimized to two states." ID="ID_622242918" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="What Is Source Code in Computer Programming" FOLDED="true" ID="ID_1472411617" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.thoughtco.com/source-code-definition-958200">
<node TEXT="Source code and object code are the before and after states of a computer program that is compiled. Programming languages that compile their code include C C++ Delphi Swift Fortran Haskell Pascal and many others. Here is an example of C language source code:" ID="ID_1085671474" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="Definitions | U.S. Department of Education" FOLDED="true" ID="ID_1310940892" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.ed.gov/race-top/district-competition/definitions">
<node TEXT="The proposed definition of Achievement gap (&#xe2;&#x20ac;&#x153;the difference in the performance between each ESEA subgroup (as defined in this document) within a participating LEA or school and the statewide average performance of the LEAs or States highest achieving subgroups in reading/language arts and mathematics as measured by the assessments required " ID="ID_387822369" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="What does computer code mean? definition meaning and " FOLDED="true" ID="ID_310361895" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.audioenglish.org/dictionary/computer_code.htm">
<node TEXT="Definition of computer code in the AudioEnglish.org Dictionary. Meaning of computer code. What does computer code mean? Proper usage and audio pronunciation (and phonetic transcription) of the word computer code. Information about computer code in the AudioEnglish.org dictionary synonyms and antonyms." ID="ID_866657295" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="California Laws  Codes - Laws  Regulations (CA Dept of " FOLDED="true" ID="ID_1256082506" CREATED="1566553719114" MODIFIED="1566553719114" LINK="http://www.cde.ca.gov/re/lr/cl/">
<node TEXT="Official site for all California legislative information allows you to search for bill information and California law (including Education Code). Text of the regulations that have been formally adopted by state agencies reviewed and approved by the Office of Administrative Law (OAL) and filed with " ID="ID_1014263252" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="Code | Definition of Code by Merriam-Webster" FOLDED="true" ID="ID_1482080361" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.merriam-webster.com/dictionary/code">
<node TEXT="Code definition is - a systematic statement of a body of law; especially : one given statutory force.  Pluribus defeats top poker professionals in 6-player Texas Hold &#xe2;&#x20ac;&#x2122;em 11 July 2019 The center has revised its code of ethics and is providing regular training to all of its staff in recognizing  English Language Learners Definition of " ID="ID_1860535719" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
</node>
</node>
<node TEXT="Deterministic and Nondeterministic FA(DFA and NFA)" ID="ID_169589132" CREATED="1566881027579" MODIFIED="1566881027579" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Deterministic and Nondeterministic Finite Automata Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1561460957" CREATED="1566553719114" MODIFIED="1566553719114">
<icon BUILTIN="stop-sign"/>
<node TEXT="Formal definition of NFA - YouTube" FOLDED="true" ID="ID_766431744" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.youtube.com/watch?v=egXhe55dAIk">
<node TEXT="TOC: Formal definition of NFA In this lecture the formal definition of NFA is given and each of the tuples are explained especially focusing on the transitio" ID="ID_71925966" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="Non-deterministic Finite Automata - YouTube" FOLDED="true" ID="ID_977997360" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.youtube.com/watch?v=ehy0jGIYRtE">
<node TEXT="TOC: Non-deterministic Finite Automata Topics Discussed: 1. Properties of DFA 2. Properties of NFA 3. Difference between DFA and NFA Contribute: http://www.n" ID="ID_815363628" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="automata - Difference between NFA and DFA - Mathematics " FOLDED="true" ID="ID_1236449905" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://math.stackexchange.com/questions/563829/difference-between-nfa-and-dfa">
<node TEXT="An NFA is a Nondeterministic Finite Automaton. Nondeterministic means it can transition to and be in multiple states at once (i.e. for some given input). A DFA is a Deterministic Finite Automaton. Deterministic means that it can only be in and transition to one state at a time (i.e. for some given input)." ID="ID_1152934428" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="Deterministic Finite Automata Software - Free Download " FOLDED="true" ID="ID_341971891" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.winsite.com/deterministic/deterministic+finite+automata/">
<node TEXT="VSE - Visual Sentence Engine. A SVG-based engine for drawing and evaluating visual sentences for generic visual languages. Support a web-based GUI.  (DFA) and non-deterministic finite automata (NFA). It supports regular expressions and efficient input matching of multiple regexps simultaneously. File Name: tautomaton ;" ID="ID_1577752771" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="Increasing Visualization and Interaction in the Automata " FOLDED="true" ID="ID_347338359" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.researchgate.net/publication/2369575_Increasing_Visualization_and_Interaction_in_the_Automata_Theory_Course">
<node TEXT="This tool is used to design and simulate deterministic and non-deterministic versions of finite automata pushdown automata and Turing machines.  Students can work in an interactive way using a " ID="ID_1715607868" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="Finite-state machine - Wikipedia" FOLDED="true" ID="ID_1647737079" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://en.wikipedia.org/wiki/Deterministic_automata">
<node TEXT="A finite-state machine (FSM) or finite-state automaton (FSA plural: automata) finite automaton or simply a state machine is a mathematical model of computation.It is an abstract machine that can be in exactly one of a finite number of states at any given time. The FSM can change from one state to another in response to some external inputs; the change from one state to another is called a " ID="ID_1052689323" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="ANIMATING THE CONVERSION OF NONDETERMINISTIC FINITE STATE " FOLDED="true" ID="ID_1223248130" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://scholarworks.montana.edu/xmlui/bitstream/handle/1/1864/MerrymanW0507.pdf?sequence=1">
<node TEXT="Conversion algorithms for non-deterministic finite state automata to deterministic finite state automata can be difficult for students of computer science theory to learn. The goals of this thesis are (1) to develop a visual animated software system to help students better learn and understand one such conversion algorithm and (2) to develop a" ID="ID_404432332" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="deterministic finite automata free download - SourceForge" FOLDED="true" ID="ID_1700437337" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://sourceforge.net/directory/?q=deterministic%20finite%20automata">
<node TEXT="Tautomaton is a C++11 -template library for deterministic (DFA) and non-deterministic finite automata (NFA). It supports regular expressions and efficient input matching of multiple regexps simultaneously. The library comes with a somewhat grep-like command-line tool for showcasing these features." ID="ID_393487588" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="Determinism and Finite Automata &#xe2;&#x20ac;&#x201c; A Primer &#xe2;&#x20ac;&#x201c; Math " FOLDED="true" ID="ID_934154301" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://jeremykun.com/2011/07/02/determinism-and-finite-automata-a-primer/">
<node TEXT="This half of the theory of computing primer will cover the various finite automata including deterministic nondeterministic and pushdown automata. We devote the second half [upcoming] entirely to Turing machines and the halting problem but to facilitate the discussion of Turing machines we rely on the intuition and notation developed here." ID="ID_1046896577" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="How to design a finite automata to accept a palindrome no?" FOLDED="true" ID="ID_657095172" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.answers.com/Q/How_to_design_a_finite_automata_to_accept_a_palindrome_no">
<node TEXT="A non-deterministic finite automaton may have multiple (or no) following states for a given state and input.  allowing engineers to analyze design conditions in a highly interactive and visual " ID="ID_1145256691" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="What is non-deterministic finalization - answers.com" FOLDED="true" ID="ID_948166179" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.answers.com/Q/What_is_non-deterministic_finalization">
<node TEXT="non-deterministic means not predicable hence non-de Finalization of accounts is to prepare financial reports along with comparision and brefing of companys financial reports include (Income " ID="ID_1788989905" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="Forward Bisimulations for Nondeterministic Symbolic Finite " FOLDED="true" ID="ID_1248711039" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.microsoft.com/en-us/research/publication/forward-bisimulations-nondeterministic-symbolic-finite-automata/">
<node TEXT="In our earlier work we proposed new techniques for minimizing deterministic symbolic automata and in this paper we generalize these techniques and study the foundational problem of computing forward bisimulations of nondeterministic symbolic finite automata. We propose three algorithms." ID="ID_567079126" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
</node>
<node TEXT="Deterministic and Nondeterministic Finite Automata Code#$D$#" FOLDED="true" ID="ID_1452181836" CREATED="1566553719114" MODIFIED="1566553719114">
<icon BUILTIN="stop-sign"/>
<node TEXT="dfa - Implementing a code to simulate a finite automaton " FOLDED="true" ID="ID_1058405775" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://stackoverflow.com/questions/10579348/implementing-a-code-to-simulate-a-finite-automaton-nondeterministic-in-c">
<node TEXT="Im doing an assignment for automata theory which I have to determine whether a word is accepted or not by a transition function for a deterministic finite automaton. I have this input file: 6 8 0 2 2 5 0 0 a 0 1 a 1 1 b 1 2 c 1 3 c 3 4 d 4 4 d 4 5 d 3 aaabcccc aabbbbcdc acdddddd" ID="ID_1582517824" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="Nondeterministic algorithm - Wikipedia" FOLDED="true" ID="ID_972666543" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://en.wikipedia.org/wiki/Nondeterministic_algorithm">
<node TEXT="Implementing nondeterministic algorithms with deterministic ones. One way to simulate a nondeterministic algorithm N using a deterministic algorithm D is to treat sets of states of N as states of D. This means that D simultaneously traces all the possible execution paths of N (see powerset construction for this technique in use for finite " ID="ID_1100686512" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="C code to implement DFA(Deterministic Finite Automata " FOLDED="true" ID="ID_366584345" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.coders-hub.com/2013/05/c-code-for-dfadeterministic-finite.html">
<node TEXT="For more C programs related to Automata Check Automata label. Share and comment to improve this blog. Related Programs:-&#xe2;&#x2dc;&#x2026; NFA (Non-Deterministic Finite Automata) &#xe2;&#x2dc;&#x2026; Convert NFA to DFA &#xe2;&#x2dc;&#x2026; Lexical Analyzer &#xe2;&#x2dc;&#x2026; Syntax Tree &#xe2;&#x2dc;&#x2026; Calculate In and Out" ID="ID_1681432415" CREATED="1566553719114" MODIFIED="1566553719114"/>
</node>
<node TEXT="C code to implement NFA(Non-Deterministic Finite Automata " FOLDED="true" ID="ID_841683954" CREATED="1566553719114" MODIFIED="1566553719114" LINK="https://www.coders-hub.com/2013/05/c-code-for-nfanon-deterministic-finite.html">
<node TEXT="C code to implement NFA(Non-Deterministic Finite Automata) /* C program to implement NFA(Non-Deterministic Finite Automata). */ #includestdio.h  bro c code will take NFA and &#xd0;&#x201e;-NFA as input and verifies whether they accept same Language or not. Reply Delete. Replies. Reply. Add comment. Load more" ID="ID_1206660482" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Deterministic Finite Automata (Example -1) - YouTube" FOLDED="true" ID="ID_452059394" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://www.youtube.com/watch?v=40i4PKpM0cI">
<node TEXT="An Example of DFA which accepts all strings that starts with 0. This lecture shows how to construct a DFA that accepts all binary strings that starts with 0 and rejects all that does not start " ID="ID_868531220" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Nondeterministic finite automaton - Wikipedia" FOLDED="true" ID="ID_1744599545" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://en.wikipedia.org/wiki/Nondeterministic_finite-state_automaton">
<node TEXT="In automata theory a finite state machine is called a deterministic finite automaton (DFA) if . each of its transitions is uniquely determined by its source state and input symbol and; reading an input symbol is required for each state transition. A nondeterministic finite automaton (NFA) or nondeterministic finite state machine does not need to obey these restrictions." ID="ID_1787151286" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Topic: deterministic-finite-automata &#xc2;&#xb7; GitHub" FOLDED="true" ID="ID_1819010515" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://github.com/topics/deterministic-finite-automata">
<node TEXT="A Python implementation to convert a Deterministic Finite Automata to Regular Expression using state elimination method  csharp csharp-code compiler-design compiler-construction compiler deterministic-finite-automata deterministic-finite-automaton parser  In a graphical way we transform a finite non-deterministic automate (NFA) to a " ID="ID_784071919" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="C program to simulate Nondeterministic Finite Automata " FOLDED="true" ID="ID_1444718252" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://www.geeksforgeeks.org/c-program-to-simulate-nondeterministic-finite-automata-nfa/">
<node TEXT="C program to simulate Nondeterministic Finite Automata (NFA) Background.  The term &#xe2;&#x20ac;&#x2dc;non &#xc2;&#xad;deterministic&#xe2;&#x20ac;&#x2122; means that at any state V we have more than one choice of following an edge. The NFA consumes the input string and set of states Q represents the possible moves of NFA.  C Program to simulate Nondeterministic Finite Automata (NFA " ID="ID_1118378433" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Deterministic Finite Automata - cse.chalmers.se" FOLDED="true" ID="ID_820151282" CREATED="1566553719115" MODIFIED="1566553719115" LINK="http://www.cse.chalmers.se/~coquand/AUTOMATA/o2.pdf">
<node TEXT="Deterministic Finite Automata De&#xef;&#xac;&#xfffd;nition: A deterministic &#xef;&#xac;&#xfffd;nite automaton (DFA) consists of 1. a &#xef;&#xac;&#xfffd;nite set of states (often denoted Q) 2. a &#xef;&#xac;&#xfffd;nite set &#xce;&#xa3; of symbols (alphabet) 3. a transition function that takes as argument a state and a symbol and returns a state (often denoted &#xce;&#xb4;) 4. a start state often denoted q0" ID="ID_38593992" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="Non-deterministic Finite State Machine Implementation in C#" FOLDED="true" ID="ID_1111765110" CREATED="1566553719115" MODIFIED="1566553719115" LINK="http://bezensek.com/blog/2015/04/12/non-deterministic-finite-state-machine-implementation-in-c-number/">
<node TEXT="Apr 12 th 2015 automata csharp dotnet  we read all the input and ended up in a non finite state. For the non-deterministic case we need to do that for all the possible transitions from a given state and symbol. And we should start this from the starting state and the whole input:  You can find the source code for NDFSM on github." ID="ID_747668421" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
<node TEXT="nfa - Design a nondeterministic finite automata in c++ " FOLDED="true" ID="ID_1268338942" CREATED="1566553719115" MODIFIED="1566553719115" LINK="https://stackoverflow.com/questions/10626414/design-a-nondeterministic-finite-automata-in-c-incorrect-output">
<node TEXT="I am doing an assignment for simulate a nondeterministic finite automaton just as I explain in this post.I have this input read from the file tarea4.in:. 1 6 8 0 2 2 5 0 0 a 0 1 a 1 1 b 1 2 c 1 3 c 3 4 d 4 4 d 4 5 d 5 aaabcccc aabbbbcdc abbcdddcc acdddddd abc" ID="ID_58618983" CREATED="1566553719115" MODIFIED="1566553719115"/>
</node>
</node>
<node TEXT="Closure properties and Deterministic Push Down Automata Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1035347195" CREATED="1566553719221" MODIFIED="1566553719221">
<icon BUILTIN="stop-sign"/>
<node TEXT="Operations on Regular Languages - YouTube" FOLDED="true" ID="ID_19256783" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://www.youtube.com/watch?v=6aRJQNYYz4s">
<node TEXT="The interactive transcript could not be loaded.  Non-deterministic Finite Automata - Duration: 6:27.  Pushdown Automata Example " ID="ID_1859336081" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="44. PUSHDOWN AUTOMATA - YouTube" FOLDED="true" ID="ID_1464090001" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://www.youtube.com/watch?v=uziy_VwiS7Y">
<node TEXT="CONTEXT FREE LANGUAGES- CLOSURE PROPERTIES - Duration:  DETERMINISTIC PUSHDOWN AUTOMATA  a^n b^n example Pushdown Automata in THEORY OF COMPUTATION in HINDI AUTOMATA part-62 " ID="ID_744999217" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="Automata theory - Wikipedia" FOLDED="true" ID="ID_840736224" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://en.wikipedia.org/wiki/Theory_of_automata">
<node TEXT="Automata theory is the study of abstract machines and automata as well as the computational problems that can be solved using them. It is a theory in theoretical computer science and discrete mathematics (a subject of study in both mathematics and computer science).The word automata (the plural of automaton) comes from the Greek word &#xce;&#xb1;&#xe1;&#xbd;&#xfffd;&#xcf;&#x201e;&#xcf;&#x152;&#xce;&#xbc;&#xce;&#xb1;&#xcf;&#x201e;&#xce;&#xb1; which means self-acting." ID="ID_1639798402" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="A Medley of Potpourri: Automata theory" FOLDED="true" ID="ID_1565799614" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://amedleyofpotpourri.blogspot.com/2018/11/automata-theory.html">
<node TEXT="The study of the mathematical properties of such automata is automata theory. The picture is a visualization of an automaton that recognizes strings containing an even number of 0s.The automaton starts in state S1 and transitions to the non-accepting state S2 upon reading the symbol 0.Reading another 0 causes the automaton to transition back to the accepting state S1." ID="ID_420109886" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="Automata Theory - Apps on Google Play" FOLDED="true" ID="ID_1122686436" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://play.google.com/store/apps/details?id=com.faadooengineers.free_automatahl=en_US">
<node TEXT="The app is classroom notes  handbook on Automata theory subject for Information technology (IT) Computer Science engineering discrete mathematics  Mathematics students. It is part of engineering education which brings important topics notes news  blog on the subject. Automata Theory plays a major role in the theory of computation compiler construction artificial intelligence parsing " ID="ID_754883096" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="Context-dependent nondeterminism for pushdown automata" FOLDED="true" ID="ID_191640829" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://dl.acm.org/citation.cfm?id=1238487">
<node TEXT="Automata that additionally have to reenter the initial state are (almost) characterized by the Kleene star closure of the union closure of the prefix-free deterministic context-free languages. Pushdown automata with bounded nondeterminism are characterized by the union closure of DCFL in any of the considered contexts." ID="ID_1602679416" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="BibSLEIGH &#xe2;&#x20ac;&#x201d; automata stem - GitHub Pages" FOLDED="true" ID="ID_1915604637" CREATED="1566553719221" MODIFIED="1566553719221" LINK="http://bibtex.github.io/word/automata.html">
<node TEXT="Deterministic Pushdown-CD-Systems of Stateless Deterministic R(1)-Automata (BN FO) pp. 328&#xe2;&#x20ac;&#x201c;342. AFL-2011-Umeo #2d #algorithm #automaton #implementation Recent Developments in Firing Squad Synchronization Algorithms for Two-Dimensional Cellular Automata and Their State-Efficient Implementations ( HU ) pp. 368&#xe2;&#x20ac;&#x201c;387." ID="ID_1647863297" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="Increasing visualization and interaction in the automata " FOLDED="true" ID="ID_469615925" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://www.researchgate.net/publication/221537777_Increasing_visualization_and_interaction_in_the_automata_theory_course">
<node TEXT="In this paper we describe how to increase the visualization and interaction in the automata theory course through the use of the tools JFLAP and Pate." ID="ID_1798219135" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="PPT &#xe2;&#x20ac;&#x201c; Theory of Computation PowerPoint presentation | free " FOLDED="true" ID="ID_171682931" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://www.powershow.com/view/10db56-Yzk1Y/Theory_of_Computation_powerpoint_ppt_presentation?varnishcache=1">
<node TEXT="grammars deterministic vs. nondeterministic one-way vs. two-way finite automata minimization pumping lemma for regular sets closure properties. 2. Pushdown automata Context-free languages Context-free grammars deterministic vs.  automata probabilistic automata interactive proof systems oracle computations cryptography. 29" ID="ID_1464247750" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Efficient determinization of visibly and height " FOLDED="true" ID="ID_1342254105" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://www.sciencedirect.com/science/article/pii/S1477842416300136">
<node TEXT="Efficient determinization of visibly and height-deterministic pushdown automata.  This can be seen as a generalization of the property of visibly pushdown automata. The difference between real-time height deterministic pushdown automata and visibly pushdown automata is that instead of partitioning the whole alphabet the alphabet is " ID="ID_1668698849" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Deterministic pushdown-CD-systems of stateless " FOLDED="true" ID="ID_1954714001" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://www.researchgate.net/publication/257380233_Deterministic_pushdown-CD-systems_of_stateless_deterministic_R1-automata">
<node TEXT="Request PDF on ResearchGate | Deterministic pushdown-CD-systems of stateless deterministic R(1)-automata | Recently the one-counter trace languages and the context-free trace languages have been " ID="ID_1423846399" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Syllabus Book - uni-due.de" FOLDED="true" ID="ID_588472498" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://www.uni-due.de/imperia/md/content/ise/curriculum/m-ce_isv__po08_englisch.pdf">
<node TEXT="and minimal automata closure properties decidability application to the verification  - context-free languages (normal forms pumping lemma CYK algorithm pushdown automata deterministic context-free languages closure properties decidability appliation to XML and DTDs)  1 Interactive Systems and Visualization 2 1 4 180 6" ID="ID_1899519395" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
</node>
<node TEXT="Closure properties and Deterministic Push Down Automata Code#$D$#" FOLDED="true" ID="ID_1563301232" CREATED="1566553719222" MODIFIED="1566553719222">
<icon BUILTIN="stop-sign"/>
<node TEXT="Automata Theory | Stanford Online" FOLDED="true" ID="ID_1726090914" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://online.stanford.edu/courses/soe-ycsautomata-automata-theory">
<node TEXT="We begin with a study of finite automata and the languages they can define (the so-called regular languages. Topics include deterministic and nondeterministic automata regular expressions and the equivalence of these language-defining mechanisms. We also look at closure properties of the regular languages e.g. the fact that the union of two regular languages is also a regular language." ID="ID_1018712576" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Deterministic pushdown automaton - Wikipedia" FOLDED="true" ID="ID_1169046188" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://en.wikipedia.org/wiki/Deterministic_pushdown_automaton">
<node TEXT="In automata theory a deterministic pushdown automaton (DPDA or DPA) is a variation of the pushdown automaton.The class of deterministic pushdown automata accepts the deterministic context-free languages a proper subset of context-free languages.. Machine transitions are based on the current state and input symbol and also the current topmost symbol of the stack." ID="ID_1401159642" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Closure Property | Regular Languages Closed under " FOLDED="true" ID="ID_1170619606" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://www.youtube.com/watch?v=7tKtgfnMeW0">
<node TEXT="Closure Properties of Regular Languages closed under Complement intersection and union theory of computation Automata Theory in hindi lectures gate iit " ID="ID_210018974" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Deterministic finite automaton - Wikipedia" FOLDED="true" ID="ID_1101991046" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://en.wikipedia.org/wiki/Deterministic_finite_automaton">
<node TEXT="The figure illustrates a deterministic finite automaton using a state diagram. In this example automaton there are three states: S 0 S 1 and S 2 (denoted graphically by circles). The automaton takes a finite sequence of 0s and 1s as input. For each state there is a transition arrow leading out to a next state for both 0 and 1." ID="ID_1253269251" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Non-deterministic Finite Automata - YouTube" FOLDED="true" ID="ID_1070692643" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://www.youtube.com/watch?v=ehy0jGIYRtE">
<node TEXT="TOC: Non-deterministic Finite Automata Topics Discussed: 1. Properties of DFA 2. Properties of NFA 3. Difference between DFA and NFA Contribute: http://www.n" ID="ID_1806809086" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="CFL Closure Property - tutorialspoint.com" FOLDED="true" ID="ID_318730790" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://www.tutorialspoint.com/automata_theory/cfl_closure_properties">
<node TEXT="CFL Closure Property - Learn Automata concepts in simple and easy steps starting from Introduction Deterministic Finite Automata Non-Deterministic Finite Automata NDFA to DFA Conversion DFA Minimization Moore and Mealy Machines Introduction to Grammars Language Generated by Grammars Chomsky Grammar Classification Regular Expressions Regular Sets Ardens Theorem Constructing FA from " ID="ID_1066077869" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Theory of Computation | Pushdown Automata - GeeksforGeeks" FOLDED="true" ID="ID_411222043" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://www.geeksforgeeks.org/theory-of-computation-pushdown-automata/">
<node TEXT="The above pushdown automaton is deterministic in nature because there is only one move from a state on an input symbol and stack symbol. The non-deterministic pushdown automata can have more than one move from a state on an input symbol and stack symbol." ID="ID_238033531" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Context-Free Grammars and Push-Down Automata" FOLDED="true" ID="ID_699470130" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://amukefundye.blogspot.com/2016/11/context-free-grammars-and-push-down.html">
<node TEXT="But the power of non-deterministic pushdown automata and deterministic pushdown is same. A FSM (Finite State Machine) with one stack is more powerful than FSM without stack. If left recursion or left factoring is present it is not sure that the grammar is ambiguous but there may be chance of ambiguity. Closure Properties of CFLs" ID="ID_783414361" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Deterministic Finite Automaton - tutorialspoint.com" FOLDED="true" ID="ID_875641066" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://www.tutorialspoint.com/automata_theory/deterministic_finite_automaton">
<node TEXT="Deterministic Finite Automaton (DFA) Non-deterministic Finite Automaton (NDFA / NFA) Deterministic Finite Automaton (DFA) In DFA for each input symbol one can determine the state to which the machine will move. Hence it is called Deterministic Automaton. As it has a finite number of states the machine is called Deterministic Finite Machine " ID="ID_1627270310" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Theory of Computation | Closure Properties of Context Free " FOLDED="true" ID="ID_1044993660" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://www.geeksforgeeks.org/theory-of-computation-closure-properties-of-context-free-languages/">
<node TEXT="Theory of Computation | Closure Properties of Context Free Languages Context Free languages are accepted by pushdown automata but not by finite automata. Context free languages can be generated by context free grammar which has the form :" ID="ID_938505139" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Syllabus - Theory of Computation - Google Sites" FOLDED="true" ID="ID_1718996891" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://sites.google.com/a/msrit.edu/theory-of-computation-odd2015/extra-credit">
<node TEXT="Course website for CS1534 Theory of Computation Aug-Dec 2015  closure properties of regular languages equivalence and minimization of automata.  Deterministic Pushdown Automata normal forms for CFGs the pumping lemma for CFGs closure properties of CFLs. " ID="ID_775600708" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Deterministic pushdown automaton - Wikipedia Republished " FOLDED="true" ID="ID_880643407" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://wiki2.org/en/Deterministic_pushdown_automaton">
<node TEXT="In automata theory a deterministic pushdown automaton (DPDA or DPA) is a variation of the pushdown automaton.The class of deterministic pushdown automata accepts the deterministic context-free languages a proper subset of context-free languages.. Machine transitions are based on the current state and input symbol and also the current topmost symbol of the stack." ID="ID_1843741137" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
</node>
</node>
<node TEXT="epsilon- NFA" ID="ID_1414273179" CREATED="1566881027584" MODIFIED="1566881027584" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="FA with output" ID="ID_1988725239" CREATED="1566881027584" MODIFIED="1566881027584" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Moore and Mealy machines -Definition" ID="ID_532738197" CREATED="1566881027584" MODIFIED="1566881027584" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Moore machines Definition Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1530049990" CREATED="1566553719116" MODIFIED="1566553719116">
<icon BUILTIN="stop-sign"/>
<node TEXT="A visual introduction to machine learning" FOLDED="true" ID="ID_1380866505" CREATED="1566553719116" MODIFIED="1566553719116" LINK="http://www.r2d3.us/visual-intro-to-machine-learning-part-1/">
<node TEXT="And now machine learning . Finding patterns in data is where machine learning comes in. Machine learning methods use statistical learning to identify boundaries. One example of a machine learning method is a decision tree. Decision trees look at one variable at a time and are a reasonably accessible (though rudimentary) machine learning method." ID="ID_1011325252" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="15 Data Visualizations That Will Blow Your Mind | Udacity" FOLDED="true" ID="ID_349350715" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://blog.udacity.com/2015/01/15-data-visualizations-will-blow-mind.html">
<node TEXT="If a picture is worth a thousand words a data visualization is worth at least a million. As inspiration for your own work with data check out these 15 data visualizations that will wow you. Taken together this roundup is an at-a-glance representation of the range of uses data analysis has from " ID="ID_1949673402" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="7 Benefits of Data Visualization - DZone Big Data" FOLDED="true" ID="ID_451988040" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://dzone.com/articles/6-ways-data-visualization-can-change-your-company">
<node TEXT="Quicker action understanding operations embracing trends interacting with data and using machine learning are some benefits of data visualization. 7 Benefits of Data Visualization - DZone Big Data" ID="ID_1612575430" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Moore and Mealy Machines - tutorialspoint.com" FOLDED="true" ID="ID_955440509" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://www.tutorialspoint.com/automata_theory/moore_and_mealy_machines">
<node TEXT="The state diagram of the above Mealy Machine is &#xe2;&#x2c6;&#x2019; Moore Machine. Moore machine is an FSM whose outputs depend on only the present state. A Moore machine can be described by a 6 tuple (Q &#xe2;&#x2c6;&#x2018; O &#xce;&#xb4; X q 0) where &#xe2;&#x2c6;&#x2019;. Q is a finite set of states. &#xe2;&#x2c6;&#x2018; is a finite set of symbols called the input alphabet. O is a finite set of symbols called the output alphabet." ID="ID_110557657" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Visual analytics - Wikipedia" FOLDED="true" ID="ID_703979567" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://en.wikipedia.org/wiki/Visual_analytics">
<node TEXT="Visual analytics is the science of analytical reasoning facilitated by interactive visual interfaces. It can attack certain problems whose size complexity and need for closely coupled human and machine analysis may make them otherwise intractable." ID="ID_1415887219" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="JFLAP: Moore Machines" FOLDED="true" ID="ID_333426814" CREATED="1566553719117" MODIFIED="1566553719117" LINK="http://www.jflap.org/tutorial/mealy/mooreMachines.html">
<node TEXT="Moore machines are different than Mealy machines in the output function &#xcf;&#x2030;. In a Moore machine output is produced by its states while in a Mealy machine output is produced by its transitions. To start a new Moore machine select the Moore Machine option from the main menu. Starting a new Moore machine Differences between a Moore Machine and " ID="ID_626622341" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="5 Steps to Draw a State Machine Diagram - YouTube" FOLDED="true" ID="ID_494600107" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://www.youtube.com/watch?v=UzUUZRK_Q6Y">
<node TEXT="This video will show you how to draw a state machine diagram in 5 steps. Well walk through an example which visually describes the behavior of a bank account. State Machine Diagram tool https " ID="ID_1595970511" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Power BI | Interactive Data Visualization BI Tools" FOLDED="true" ID="ID_465252774" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://powerbi.microsoft.com/en-us/">
<node TEXT="Power BI is a business analytics service that delivers insights to enable fast informed decisions. Transform data into stunning visuals and share them with colleagues on any device. Visually explore and analyze data&#xe2;&#x20ac;&#x201d;on-premises and in the cloud&#xe2;&#x20ac;&#x201d;all in one view." ID="ID_989695110" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="State diagram - Wikipedia" FOLDED="true" ID="ID_573693751" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://en.wikipedia.org/wiki/State_diagram">
<node TEXT="A state diagram is a type of diagram used in computer science and related fields to describe the behavior of systems. State diagrams require that the system described is composed of a finite number of states; sometimes this is indeed the case while at other times this is a reasonable abstraction.Many forms of state diagrams exist which differ slightly and have different semantics" ID="ID_1870396687" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Finite State Machines | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1562906369" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://brilliant.org/wiki/finite-state-machines/">
<node TEXT="A finite state machine (sometimes called a finite state automaton) is a computation model that can be implemented with hardware or software and can be used to simulate sequential logic and some computer programs. Finite state automata generate regular languages. Finite state machines can be used to model problems in many fields including mathematics artificial intelligence games and " ID="ID_162079737" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Finite State Machine Designer - by Evan Wallace" FOLDED="true" ID="ID_344829044" CREATED="1566553719117" MODIFIED="1566553719117" LINK="http://www.madebyevan.com/fsm/">
<node TEXT="The big white box above is the FSM designer. Heres how to use it " ID="ID_1670051734" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="R2D3: Statistics and Data Visualization" FOLDED="true" ID="ID_363908533" CREATED="1566553719117" MODIFIED="1566553719117" LINK="http://www.r2d3.us/">
<node TEXT="Tony visualizes with D3. Tony is a designer who loves data visualizations and information design. He is currently a Principal Designer at Noodle Analytics.Prior to Noodle Tony led user experience and product design at H2O and at Sift Science.He holds an MFA in Interaction Design at the School of Visual Arts in New York City where he tried to change congress with a fancy infographic." ID="ID_588327511" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
</node>
<node TEXT="Moore machines Definition Code#$D$#" FOLDED="true" ID="ID_1849516794" CREATED="1566553719117" MODIFIED="1566553719117">
<icon BUILTIN="stop-sign"/>
<node TEXT="Moore machine - Wikipedia" FOLDED="true" ID="ID_1512782567" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://en.wikipedia.org/wiki/Moore_machine">
<node TEXT="The state diagram for a Moore machine or Moore diagram is a diagram that associates an output value with each state. Moore machine is an output producer. Relationship with Mealy machines. As Moore and Mealy machines are both types of finite-state machines they are equally expressive: either type can be used to parse a regular language." ID="ID_1505020238" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Moore and Mealy Machines - tutorialspoint.com" FOLDED="true" ID="ID_991854119" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://www.tutorialspoint.com/automata_theory/moore_and_mealy_machines">
<node TEXT="The state diagram of the above Mealy Machine is &#xe2;&#x2c6;&#x2019; Moore Machine. Moore machine is an FSM whose outputs depend on only the present state. A Moore machine can be described by a 6 tuple (Q &#xe2;&#x2c6;&#x2018; O &#xce;&#xb4; X q 0) where &#xe2;&#x2c6;&#x2019;. Q is a finite set of states. &#xe2;&#x2c6;&#x2018; is a finite set of symbols called the input alphabet. O is a finite set of symbols called the output alphabet." ID="ID_1650315249" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Mealy and Moore Machines - GeeksforGeeks" FOLDED="true" ID="ID_1080374702" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://www.geeksforgeeks.org/mealy-and-moore-machines/">
<node TEXT="Moore Machines: Moore machines are finite state machines with output value and its output depends only on present state. It can be defined as (Q q0 &#xe2;&#x2c6;&#x2018; O &#xce;&#xb4; &#xce;&#xbb;) where: Q is finite set of states. q0 is the initial state. &#xe2;&#x2c6;&#x2018; is the input alphabet. O is the output alphabet." ID="ID_1046118551" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Mealy and Moore Machines - UC Santa Barbara" FOLDED="true" ID="ID_1374690492" CREATED="1566553719117" MODIFIED="1566553719117" LINK="http://www.ece.ucsb.edu/Faculty/Johnson/ECE152A/L9%20-%20Mealy%20and%20Moore%20Machines.pdf">
<node TEXT="February 22 2012 ECE 152A - Digital Design Principles 14 Mealy Network Example Timing Diagram and Analysis (cont) Output transitions occur in response to both input and state transitions &#xe2;&#x20ac;&#x153;glitches&#xe2;&#x20ac;&#xfffd; may be generated by transitions in inputs Moore machines don&#xe2;&#x20ac;&#x2122;t glitch because outputs are associated with present state only" ID="ID_276082686" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Mealy machine - Wikipedia" FOLDED="true" ID="ID_1729200168" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://en.wikipedia.org/wiki/Mealy_machine">
<node TEXT="In the theory of computation a Mealy machine is a finite-state machine whose output values are determined both by its current state and the current inputs. This is in contrast to a Moore machine whose (Moore) output values are determined solely by its current state.A Mealy machine is a deterministic finite-state transducer: for each state and input at most one transition is possible." ID="ID_1811058388" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="State Machines in VHDL" FOLDED="true" ID="ID_1071866528" CREATED="1566553719117" MODIFIED="1566553719117" LINK="http://web.engr.oregonstate.edu/~traylor/ece474/vhdl_lectures/essential_vhdl_pdfs/essential_vhdl107-127.pdf">
<node TEXT="State Machines in VHDL  Lets look at the basic Moore machine structure. The Moore state machine consists of two basic blocks next state decode (or  name of the process holding the code for the state machine is the name of the state machine. In this case it is header_type_sm." ID="ID_1500507819" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Sequential Logic Implementation" FOLDED="true" ID="ID_830113325" CREATED="1566553719117" MODIFIED="1566553719117" LINK="http://www-inst.eecs.berkeley.edu/~cs150/fa05/Lectures/07-SeqLogicIIIx2.pdf">
<node TEXT="Sequential Logic Implementation Models for representing sequential circuits Abstraction of sequential elements Finite state machines and their state diagrams Inputs/outputs Mealy Moore and synchronous Mealy machines Finite state machine design procedure Verilog specification Deriving state diagram" ID="ID_365206165" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Sequence Detector using Mealy and Moore State Machine VHDL " FOLDED="true" ID="ID_1571585786" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://allaboutfpga.com/sequence-detector-using-mealy-and-moore-state-machine-vhdl-codes/">
<node TEXT="The output of state machine are only updated at the clock edge. Let&#xe2;&#x20ac;&#x2122;s construct the sequence detector for the sequence 101 using both mealy state machine and moore state machine. Moore state require to four states st0st1st2st3 to detect the 101 sequence. Mealy state machine require only three states st0st1st2 to detect the 101 sequence." ID="ID_903423099" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Finite State Machines - Massachusetts Institute of Technology" FOLDED="true" ID="ID_1632408845" CREATED="1566553719117" MODIFIED="1566553719117" LINK="http://web.mit.edu/6.111/www/f2017/handouts/L06.pdf">
<node TEXT="Finite State Machines &#xe2;&#x20ac;&#xa2; Finite State Machines (FSMs) are a useful abstraction for sequential circuitswith centralized &#xe2;&#x20ac;&#x153;states&#xe2;&#x20ac;&#xfffd; of operation &#xe2;&#x20ac;&#xa2; At each clock edge combinational logic computes outputsand next stateas a function of inputsand present state Combinational Logic Registers Q D CLK inputs + present state outputs + next state n n" ID="ID_15677340" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Difference between Mealy machine and Moore machine " FOLDED="true" ID="ID_1805182728" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://www.geeksforgeeks.org/difference-between-mealy-machine-and-moore-machine/">
<node TEXT="Prerequisite &#xe2;&#x20ac;&#x201c; Mealy and Moore Machines Mealy Machine &#xe2;&#x20ac;&#x201c; A mealy machine is defined as a machine in theory of computation whose output values are determined by both its current state and current inputs. In this machine atmost one transition is possible. It has 6 tuples: (Q q0 &#xe2;&#x2c6;&#x2018; O &#xce;&#xb4; &#xce;&#xbb;&#xe2;&#x20ac;&#x2122;) Q is finite set of states" ID="ID_774578" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Finite State Machines explained - YouTube" FOLDED="true" ID="ID_830817666" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://www.youtube.com/watch?v=hJIST1cEf6A">
<node TEXT="An explanation of what is a finite state machine with two examples and the difference between Moore and Mealy machines." ID="ID_1951611219" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Moore machine | Article about Moore machine by The Free " FOLDED="true" ID="ID_897809904" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://encyclopedia2.thefreedictionary.com/Moore+machine">
<node TEXT="Looking for Moore machine? Find out information about Moore machine. A sequential machine in which the output depends uniquely on the current state of the machine and not on the input Explanation of Moore machine" ID="ID_1615025097" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
</node>
<node TEXT="Mealy machines Definition Interactive Visualisation#$D$#" FOLDED="true" ID="ID_600050868" CREATED="1566553719117" MODIFIED="1566553719117">
<icon BUILTIN="stop-sign"/>
<node TEXT="Construction of Mealy Machine - Examples (Part 1) - YouTube" FOLDED="true" ID="ID_1445861789" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://www.youtube.com/watch?v=s-Ul9dIS9AE">
<node TEXT="TOC: Construction of Mealy Machine - Examples (Part 1) This lecture shows how to construct a Mealy Machine for a language that accepts all strings over {ab} that ends with either aa or bb." ID="ID_541560432" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="15 Data Visualizations That Will Blow Your Mind | Udacity" FOLDED="true" ID="ID_1875523749" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://blog.udacity.com/2015/01/15-data-visualizations-will-blow-mind.html">
<node TEXT="If a picture is worth a thousand words a data visualization is worth at least a million. As inspiration for your own work with data check out these 15 data visualizations that will wow you. Taken together this roundup is an at-a-glance representation of the range of uses data analysis has from " ID="ID_353918021" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Finite State Machines explained - YouTube" FOLDED="true" ID="ID_540817918" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://www.youtube.com/watch?v=hJIST1cEf6A">
<node TEXT="An explanation of what is a finite state machine with two examples and the difference between Moore and Mealy machines. Skip navigation  Finite State Machines explained  The interactive " ID="ID_1026737384" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="A visual introduction to machine learning" FOLDED="true" ID="ID_978402484" CREATED="1566553719117" MODIFIED="1566553719117" LINK="http://www.r2d3.us/visual-intro-to-machine-learning-part-1/">
<node TEXT="In machine learning computers apply statistical learning techniques to automatically identify patterns in data. These techniques can be used to make highly accurate predictions. Keep scrolling. Using a data set about homes we will create a machine learning model to distinguish homes in New York from homes in San Francisco." ID="ID_1063242586" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Finite-state machine - Wikipedia" FOLDED="true" ID="ID_1503923425" CREATED="1566553719117" MODIFIED="1566553719117" LINK="https://en.wikipedia.org/wiki/Finite_state_machine">
<node TEXT="A finite-state machine (FSM) or finite-state automaton (FSA plural: automata) finite automaton or simply a state machine is a mathematical model of computation.It is an abstract machine that can be in exactly one of a finite number of states at any given time. The FSM can change from one state to another in response to some external inputs; the change from one state to another is called a " ID="ID_262649065" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="Finite State Machine Designer - by Evan Wallace" FOLDED="true" ID="ID_1803534230" CREATED="1566553719117" MODIFIED="1566553719117" LINK="http://www.madebyevan.com/fsm/">
<node TEXT="The big white box above is the FSM designer. Heres how to use it " ID="ID_1930466169" CREATED="1566553719117" MODIFIED="1566553719117"/>
</node>
<node TEXT="The best Finite State Machine design tool around &#xe2;&#x20ac;&#x201c; and it " FOLDED="true" ID="ID_384992041" CREATED="1566553719117" MODIFIED="1566553719117" LINK="http://www.fizzim.com/">
<node TEXT="Multiple pages for complex state machines. &#xe2;&#x20ac;&#x153;Output to clipboard&#xe2;&#x20ac;&#xfffd; makes it easy to pull the state diagram into your documentation. Backend: Verilog/SystemVerilog/VHDL code generation based on recommendations from experts in the field. Output code has &#xe2;&#x20ac;&#x153;hand-coded&#xe2;&#x20ac;&#xfffd; look-and-feel (no tasks functions etc)." ID="ID_1620882095" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Visualization (graphics) - Wikipedia" FOLDED="true" ID="ID_99482837" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://en.wikipedia.org/wiki/Visualization_(graphics)">
<node TEXT="As a subject in computer science scientific visualization is the use of interactive sensory representations typically visual of abstract data to reinforce cognition hypothesis building and reasoning. Data visualization is a related subcategory of visualization dealing with statistical graphics and geographic or spatial data (as in thematic cartography) that is abstracted in schematic form." ID="ID_1292650901" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="7 Benefits of Data Visualization - DZone Big Data" FOLDED="true" ID="ID_1912248141" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://dzone.com/articles/6-ways-data-visualization-can-change-your-company">
<node TEXT="Quicker action understanding operations embracing trends interacting with data and using machine learning are some benefits of data visualization. 7 Benefits of Data Visualization - DZone Big Data" ID="ID_1077274305" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="On Interactive Evolutionary Algorithms and Stochastic " FOLDED="true" ID="ID_1206116078" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://www.researchgate.net/publication/220701675_On_Interactive_Evolutionary_Algorithms_and_Stochastic_Mealy_Automata">
<node TEXT="Interactive evolutionary algorithms (IEAs) are special casesof interactive optimization methods.  On Interactive Evolutionary Algorithms and Stochastic Mealy Automata.  The definition and " ID="ID_737723779" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Visual analytics - Wikipedia" FOLDED="true" ID="ID_1674687550" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://en.wikipedia.org/wiki/Visual_analytics">
<node TEXT="Overview. Visual analytics is the science of analytical reasoning facilitated by interactive visual interfaces. It can attack certain problems whose size complexity and need for closely coupled human and machine analysis may make them otherwise intractable. Visual analytics advances science and technology developments in analytical reasoning interaction data transformations and " ID="ID_1748179114" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Graphics and Visualization (discontinued) - IBM" FOLDED="true" ID="ID_1774777196" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://researcher.watson.ibm.com/researcher/view_group.php?id=143">
<node TEXT="The technology enables to build out-of-the-box visualizations as well as customized interactive visualization for integrated solutions. IBM interactive Maps Technology integrates with IBM Big Data Platform to support visualization of static GIS data real-time streaming data historical data and data in motion ." ID="ID_1115287240" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
</node>
<node TEXT="Mealy machines Definition Code#$D$#" FOLDED="true" ID="ID_908133548" CREATED="1566553719118" MODIFIED="1566553719118">
<icon BUILTIN="stop-sign"/>
<node TEXT="Moore and Mealy Machines - tutorialspoint.com" FOLDED="true" ID="ID_1847404684" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://www.tutorialspoint.com/automata_theory/moore_and_mealy_machines">
<node TEXT="The state diagram of the above Mealy Machine is &#xe2;&#x2c6;&#x2019; Moore Machine. Moore machine is an FSM whose outputs depend on only the present state. A Moore machine can be described by a 6 tuple (Q &#xe2;&#x2c6;&#x2018; O &#xce;&#xb4; X q 0) where &#xe2;&#x2c6;&#x2019;. Q is a finite set of states. &#xe2;&#x2c6;&#x2018; is a finite set of symbols called the input alphabet. O is a finite set of symbols called the output alphabet." ID="ID_1032797109" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Mealy machine - Wikipedia" FOLDED="true" ID="ID_1799771074" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://en.wikipedia.org/wiki/Mealy_machine">
<node TEXT="History. The Mealy machine is named after George H. Mealy who presented the concept in a 1955 paper &#xe2;&#x20ac;&#x153;A Method for Synthesizing Sequential Circuits&#xe2;&#x20ac;&#xfffd;.. Formal definition. A Mealy machine is a 6-tuple () consisting of the following: . a finite set of states; a start state (also called initial state) which is an element of a finite set called the input alphabet" ID="ID_1690504333" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Sequence Detector using Mealy and Moore State Machine VHDL " FOLDED="true" ID="ID_547298075" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://allaboutfpga.com/sequence-detector-using-mealy-and-moore-state-machine-vhdl-codes/">
<node TEXT="The output of state machine are only updated at the clock edge. Let&#xe2;&#x20ac;&#x2122;s construct the sequence detector for the sequence 101 using both mealy state machine and moore state machine. Moore state require to four states st0st1st2st3 to detect the 101 sequence. Mealy state machine require only three states st0st1st2 to detect the 101 sequence." ID="ID_102888840" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Mealy and Moore Machines - GeeksforGeeks" FOLDED="true" ID="ID_984132978" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://www.geeksforgeeks.org/mealy-and-moore-machines/">
<node TEXT="This is the transition table of moore machine shown in Figure 1. Conversion from moore machine to mealy machine. Let us take the moore machine of Figure 1 and its transition table is shown in Table 3. Step 1. Construct an empty mealy machine using all states of moore machine as shown in Table 4." ID="ID_1889386412" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Mealy Machine Verilog Code | Moore Machine Verilog Code" FOLDED="true" ID="ID_312099453" CREATED="1566553719118" MODIFIED="1566553719118" LINK="http://www.rfwireless-world.com/source-code/VERILOG/Mealy-Machine-and-Moore-Machine-verilog-code.html">
<node TEXT="Mealy Machine Verilog Code | Moore Machine Verilog Code. This page covers Mealy Machine Verilog Code and Moore Machine Verilog Code.. Mealy Machine Verilog code. Following is the figure and verilog code of Mealy Machine." ID="ID_1916066088" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Moore machine - Wikipedia" FOLDED="true" ID="ID_37979955" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://en.wikipedia.org/wiki/Moore_machine">
<node TEXT="The state diagram for a Moore machine or Moore diagram is a diagram that associates an output value with each state. Moore machine is an output producer. Relationship with Mealy machines. As Moore and Mealy machines are both types of finite-state machines they are equally expressive: either type can be used to parse a regular language." ID="ID_1179904077" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Mealy and Moore Machines - UC Santa Barbara" FOLDED="true" ID="ID_839808406" CREATED="1566553719118" MODIFIED="1566553719118" LINK="http://www.ece.ucsb.edu/Faculty/Johnson/ECE152A/L9%20-%20Mealy%20and%20Moore%20Machines.pdf">
<node TEXT="February 22 2012 ECE 152A - Digital Design Principles 14 Mealy Network Example Timing Diagram and Analysis (cont) Output transitions occur in response to both input and state transitions &#xe2;&#x20ac;&#x153;glitches&#xe2;&#x20ac;&#xfffd; may be generated by transitions in inputs Moore machines don&#xe2;&#x20ac;&#x2122;t glitch because outputs are associated with present state only" ID="ID_314270795" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Verilog Code: Moore State Machine - YouTube" FOLDED="true" ID="ID_667953664" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://www.youtube.com/watch?v=JrHASnqeSTY">
<node TEXT="Moore state machine is implemented using Verilog HDL. Skip navigation  Verilog Code: Moore State Machine Beginners Point Shruti Jain  Theory Of Computation 46Moore Machine and Mealy machine " ID="ID_933945077" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="FSM design using Verilog :: Electrosofts.com" FOLDED="true" ID="ID_330570977" CREATED="1566553719118" MODIFIED="1566553719118" LINK="http://electrosofts.com/verilog/fsm.html">
<node TEXT="A state machine may be coded as in Code 1 using two separate case statements or as in code 2 using only one. A single case statement may be preferred for Mealy machines where the outputs depend on the state transition rather than just the current state." ID="ID_564774841" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Difference between Mealy machine and Moore machine " FOLDED="true" ID="ID_1447071102" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://www.geeksforgeeks.org/difference-between-mealy-machine-and-moore-machine/">
<node TEXT="Prerequisite &#xe2;&#x20ac;&#x201c; Mealy and Moore Machines Mealy Machine &#xe2;&#x20ac;&#x201c; A mealy machine is defined as a machine in theory of computation whose output values are determined by both its current state and current inputs. In this machine atmost one transition is possible. It has 6 tuples: (Q q0 &#xe2;&#x2c6;&#x2018; O &#xce;&#xb4; &#xce;&#xbb;&#xe2;&#x20ac;&#x2122;) Q is finite set of states" ID="ID_582406892" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Mealy Machine - an overview | ScienceDirect Topics" FOLDED="true" ID="ID_489701630" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://www.sciencedirect.com/topics/computer-science/mealy-machine">
<node TEXT="The Mealy machine conjectured by the algorithm L M &#xe2;&#x2c6;&#x2014; is always a minimal machine. Definition 5.  In the Mealy machine  and action code in states and transitions. An action is a reactive behavior associated with a state or a transition that can be carried out when for instance entering a state leaving a state or when firing a " ID="ID_791284768" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Implementing a Finite State Machine in VHDL" FOLDED="true" ID="ID_1044873910" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://www.allaboutcircuits.com/technical-articles/implementing-a-finite-state-machine-in-vhdl/">
<node TEXT="The other broad category of state machines is one where the output depends not only on the current state but also on the inputs. This type of state machine is called a Mealy State Machine. In practice it generally does not matter what kind of state machine you use it doesn&#xe2;&#x20ac;&#x2122;t even matter if you know what kind of state machine you are using." ID="ID_98742628" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
</node>
<node TEXT="inter conversion Moore Mealy Interactive Visualisation#$D$#" FOLDED="true" ID="ID_816144127" CREATED="1566553719118" MODIFIED="1566553719118">
<icon BUILTIN="stop-sign"/>
<node TEXT="Computer Science  Engineering Mock Interview 12 of 28 " FOLDED="true" ID="ID_1954626423" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://www.youtube.com/watch?v=C9LtdHbx-Ms">
<node TEXT="The interactive transcript could not be loaded.  a NFA Minimization of a DFA Inter-conversion RE and FA state loop elimination method Andrsen&#xe2;&#x20ac;&#x2122;s Theorem Moore and Mealy machines Grammar " ID="ID_862589135" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="5 Steps for Flip Flop Conversions | JK to D Flip Flop " FOLDED="true" ID="ID_1039562156" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://www.youtube.com/watch?v=ApJ972OYyXQ">
<node TEXT="5 Steps for Flip Flop Conversions | JK to D Flip Flop Conversion  SR Flip Flop to JK Flip Flop Conversion  7:53. Mealy and Moore State Machines (Part 1) - Duration: 9:39. Neso Academy " ID="ID_1887721616" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="An Intelligent Editor for Multi-Presentation User Interfaces" FOLDED="true" ID="ID_497662671" CREATED="1566553719118" MODIFIED="1566553719118" LINK="http://iihm.imag.fr/publs/2008/Collignon-SAC2008.pdf">
<node TEXT="gate Moore Machines and Mealy Machines as visualization techniques for specifying plasticity domains. Their application to FlexClock motivates a proposition that is further addressed. Figure 2. Windows resizing operations. 4.1 Moore Machines Finite State Machines (FSMs) have been used for specifying the dialog the navigation of a UI." ID="ID_807839116" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Power BI | Interactive Data Visualization BI Tools" FOLDED="true" ID="ID_1378755155" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://powerbi.microsoft.com/en-us/">
<node TEXT="Power BI is a business analytics service that delivers insights to enable fast informed decisions. Transform data into stunning visuals and share them with colleagues on any device. Visually explore and analyze data&#xe2;&#x20ac;&#x201d;on-premises and in the cloud&#xe2;&#x20ac;&#x201d;all in one view." ID="ID_1635245089" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="(PDF) A TOOL FOR VISUALISATION OF PARSERS: JFLAP" FOLDED="true" ID="ID_136809183" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://www.researchgate.net/publication/310799874_A_TOOL_FOR_VISUALISATION_OF_PARSERS_JFLAP">
<node TEXT="Automata Simulator offers interactive generation and simulation of finite state  Mealy Machine Moore Machine Pushdown  a tool for regular language manipulation and visualization. The main " ID="ID_1894250631" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="NIKITA UDAYRAJ GAVANDI - Microsoft Dynamics AX Technical " FOLDED="true" ID="ID_1213141437" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://se.linkedin.com/in/nikita-udayraj-gavandi-7464bb127">
<node TEXT="NIKITA UDAYRAJ GAVANDI gillar detta.  Inter conversion of Moore Mealy Machine. Technologies: C++. Role: Analysis of the specifications and Designing the solutions.  You can use Power View to create interactive ad-hoc reports in Microsoft Dynamics AX. Several list pages have an Analyze data button that launches a Power View report designer " ID="ID_1781828678" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Visual and Interactive Tools - users.cs.duke.edu" FOLDED="true" ID="ID_1677945766" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://users.cs.duke.edu/~rodger/tools/">
<node TEXT="Visual and Interactive Tools .  Moore and Mealy machines and Batch grading. New features in 4.0 include a completely new interface and incorporating both parts from other tools jeLLRap (LL and LR parsing) and Pate (transforming grammars from CFG to CNF parsing restricted and unrestricted grammars).  the conversion of an automaton into " ID="ID_419156740" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Finite State Machine Designer - by Evan Wallace" FOLDED="true" ID="ID_1241732363" CREATED="1566553719118" MODIFIED="1566553719118" LINK="http://www.madebyevan.com/fsm/">
<node TEXT="The big white box above is the FSM designer. Heres how to use it " ID="ID_150480544" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Sequential Machine - an overview | ScienceDirect Topics" FOLDED="true" ID="ID_75264972" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://www.sciencedirect.com/topics/computer-science/sequential-machine">
<node TEXT="This state diagram will lead to a Mealy-type circuit since the output Z = A B &#xc2;&#xaf; X depends upon the present state and the input signal X. To convert the state diagram to one which will lead to a Moore-type circuit the state S 0 is split into two states S 0A and S 0B as shown in Figure 8.10(g)." ID="ID_278370551" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="HDL Designer Series - Amazon S3" FOLDED="true" ID="ID_1542614500" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://s3.amazonaws.com/s3.mentor.com/training/toc/hdl-designer-series_209128.pdf">
<node TEXT="This document is for information and instruction purposes. Mentor Graphics reserves the right to make changes in specifications and other information contained in this publication without prior notice and the reader" ID="ID_305502727" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="Find Your Color | Benjamin Moore" FOLDED="true" ID="ID_1653752832" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://www.benjaminmoore.com/en-us/color-overview/find-your-color">
<node TEXT="Find color and color combinations with the Benjamin Moore color tool." ID="ID_790537081" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
<node TEXT="An Interactive Spreadsheet for Teaching the Forward " FOLDED="true" ID="ID_1026827914" CREATED="1566553719118" MODIFIED="1566553719118" LINK="https://www.cs.jhu.edu/~jason/papers/eisner.tnlp02.pdf">
<node TEXT="An Interactive Spreadsheet for Teaching the Forward-Backward Algorithm Jason Eisner  the conversion of these prior path probabilities to posterior expectations of transition and emission  (The two views correspond to Moore vs. Mealy ma-chines.) In the traditional view states would represent days and." ID="ID_1152842758" CREATED="1566553719118" MODIFIED="1566553719118"/>
</node>
</node>
<node TEXT="inter conversion Moore Mealy Code#$D$#" FOLDED="true" ID="ID_196899066" CREATED="1566553719118" MODIFIED="1566553719118">
<icon BUILTIN="stop-sign"/>
<node TEXT="Mealy and Moore machine - fenix.tecnico.ulisboa.pt" FOLDED="true" ID="ID_943032367" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://fenix.tecnico.ulisboa.pt/downloadFile/282093452043976/Smart%20Academy_%20Mealy%20and...e%20and%20their%20conversions.pdf">
<node TEXT="Conversion from Moore machine to Mealy machine: For understanding the conversion of moore to mealy machine let us take an example: suppose the moore machine transition table is: Present State Next State Output a = 0 a = 1- q0 q3 q1 1 q1 q0 q3 0 q2 q2 q2 0 q3 q1 q0 1 convert this transition table into mealy machine." ID="ID_990475451" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Mealy and Moore Machines - GeeksforGeeks" FOLDED="true" ID="ID_46496866" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://www.geeksforgeeks.org/mealy-and-moore-machines/">
<node TEXT="This is the transition table of moore machine shown in Figure 1. Conversion from moore machine to mealy machine. Let us take the moore machine of Figure 1 and its transition table is shown in Table 3. Step 1. Construct an empty mealy machine using all states of moore machine as shown in Table 4." ID="ID_1806822341" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Mealy to Moore and Moore to Mealy Transformation &#xe2;&#x20ac;&#x201c; VLSIFacts" FOLDED="true" ID="ID_1714321580" CREATED="1566553719119" MODIFIED="1566553719119" LINK="http://www.vlsifacts.com/mealy-to-moore-and-moore-to-mealy-transformation/">
<node TEXT="Moore to Mealy Transformation. Follow the below steps to transform a Mealy machine to a Moore machine: In case of Mealy to Moore the output was postponed but in case of Moore to Mealy the output would be preponed; The output associated to a particular state is going to get associated with the incident transition arcs." ID="ID_1505074097" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Moore and Mealy Machines - tutorialspoint.com" FOLDED="true" ID="ID_402938966" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://www.tutorialspoint.com/automata_theory/moore_and_mealy_machines">
<node TEXT="Moore and Mealy Machines - Learn Automata concepts in simple and easy steps starting from Introduction Deterministic Finite Automata Non-Deterministic Finite Automata NDFA to DFA Conversion DFA Minimization Moore and Mealy Machines Introduction to Grammars Language Generated by Grammars Chomsky Grammar Classification Regular Expressions Regular Sets Ardens Theorem Constructing FA " ID="ID_1162717760" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Conversion of Moore Machine to Mealy Machine - YouTube" FOLDED="true" ID="ID_520583096" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://www.youtube.com/watch?v=HEVWx4irOx4">
<node TEXT="TOC: Conversion of Moore Machine to Mealy Machine This lecture shows how to construct a Moore Machine and convert it to its equivalent Mealy Machine. Contrib" ID="ID_669326870" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Mealy to Moore conversion - YouTube" FOLDED="true" ID="ID_1077960971" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://www.youtube.com/watch?v=4J9sMp6k4do">
<node TEXT="MEALY to MOORE Machine Conversion Theory of computation Automata lec - 14 for uptu/gate in HINDI - Duration: 11:39. hindi tutorials darshan 44177 views" ID="ID_1705632554" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="state machines - conversion from Moore To Mealy " FOLDED="true" ID="ID_491635846" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://electronics.stackexchange.com/questions/6756/conversion-from-moore-to-mealy">
<node TEXT="Note that for the for start state S(0) the procedure remains nearly the same except that O(0) will be assigned on reset. Also the number of states remain unchanged in moore to mealy conversion. Mealy to Moore conversion is much more complicated. It is basically the reverse process except that sometimes a state needs to be split(or copied " ID="ID_185535941" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="How do you convert Mealy machine to Moore machine?" FOLDED="true" ID="ID_581132281" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://www.answers.com/Q/How_do_you_convert_Mealy_machine_to_Moore_machine">
<node TEXT="How do you convert Mealy machine to Moore machine?  basically compiler is that convert an object code in to machine code and machine code is directly understood by a computer. assembler and " ID="ID_739812860" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="TOC | Conversion of Moore to Mealy machine (Set 9 " FOLDED="true" ID="ID_699667182" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://www.geeksforgeeks.org/toc-conversion-of-moore-to-mealy-machine-set-9/">
<node TEXT="Prerequisite: Mealy and Moore Machines Difference between Mealy machine and Moore machine In this article we shall see a conversion of Moore to Mealy machine-State Transition Diagram of a Moore machine:-Above Moore machine takes the binary number {0 1} as input and produce residue modulo &#xe2;&#x20ac;&#x2dc;2&#xe2;&#x20ac;&#x2122; as output i.e when the equivalent decimal number of binary input over {0 1} is divided by 2 " ID="ID_531110365" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Verilog HDL Templates for State Machines - intel.com" FOLDED="true" ID="ID_1667565552" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://www.intel.com/content/www/us/en/programmable/support/support-resources/design-examples/design-software/verilog/ver-state-machine.html">
<node TEXT="The examples provide the HDL codes to implement the following types of state machines: 4-State Mealy State Machine; The outputs of a Mealy state machine depend on both the inputs and the current state. When the inputs change the outputs are updated without waiting for a clock edge. 4-State Moore State Machine" ID="ID_1111492437" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Finite State Machine: Mealy State Machine and Moore State " FOLDED="true" ID="ID_568402718" CREATED="1566553719119" MODIFIED="1566553719119" LINK="https://www.elprocus.com/finite-state-machine-mealy-state-machine-and-moore-state-machine/">
<node TEXT="The finite state machines are classified into two types such as Mealy state machine and Moore state machine. Mealy State Machine. When the outputs depend on the current inputs as well as states then the FSM can be named to be a mealy state machine. The following diagram is the mealy state machine block diagram." ID="ID_669440296" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
<node TEXT="Mealy Machine Verilog Code | Moore Machine Verilog Code" FOLDED="true" ID="ID_87921606" CREATED="1566553719119" MODIFIED="1566553719119" LINK="http://www.rfwireless-world.com/source-code/VERILOG/Mealy-Machine-and-Moore-Machine-verilog-code.html">
<node TEXT="Mealy Machine Verilog Code | Moore Machine Verilog Code. This page covers Mealy Machine Verilog Code and Moore Machine Verilog Code.. Mealy Machine Verilog code. Following is the figure and verilog code of Mealy Machine." ID="ID_252253022" CREATED="1566553719119" MODIFIED="1566553719119"/>
</node>
</node>
</node>
</node>
<node TEXT="models" ID="ID_1555975029" CREATED="1566881027591" MODIFIED="1566881027591" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="inter-conversion" ID="ID_772012309" CREATED="1566881027591" MODIFIED="1566881027591" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="Case Study" ID="ID_614657148" CREATED="1566881027591" MODIFIED="1566881027591" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="FSM for vending machine" ID="ID_1502790176" CREATED="1566881027591" MODIFIED="1566881027591" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
</node>
<node TEXT="spell checker " ID="ID_1428156123" CREATED="1566881027591" MODIFIED="1566881027591" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
</node>
<node TEXT="Regular Expressions (RE) " FOLDED="true" POSITION="right" ID="ID_1527328775" CREATED="1566881027598" MODIFIED="1566881027598" Folded="true">
<edge COLOR="#6bf67b"/>
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Introduction" ID="ID_424127840" CREATED="1566881027598" MODIFIED="1566881027598" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="Operators of RE" ID="ID_758840403" CREATED="1566881027598" MODIFIED="1566881027598" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="Building RE" ID="ID_1121086584" CREATED="1566881027598" MODIFIED="1566881027598" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="Precedence of operators" ID="ID_1949666692" CREATED="1566881027598" MODIFIED="1566881027598" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Precedence of operators Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1039076990" CREATED="1566553719123" MODIFIED="1566553719123">
<icon BUILTIN="stop-sign"/>
<node TEXT="7.3. Precedence of Operators &#xe2;&#x20ac;&#x201d; How to Think like a " FOLDED="true" ID="ID_1786936071" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://runestone.academy/runestone/books/published/thinkcspy/Selection/PrecedenceofOperators.html">
<node TEXT="7.3. Precedence of Operators&#xc2;&#xb6;. We have now added a number of additional operators to those we learned in the previous chapters. It is important to understand how these operators relate to the others with respect to operator precedence." ID="ID_742360695" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="3. Precedence of Operators - Runestone Interactive" FOLDED="true" ID="ID_340574987" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://runestone.launchcode.org/runestone/static/thinkcspy/Selection/PrecedenceofOperators.html">
<node TEXT="3. Precedence of Operators&#xc2;&#xb6;. We have now added a number of additional operators to those we learned in the previous chapters. It is important to understand how these operators relate to the others with respect to operator precedence." ID="ID_1173285585" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="8.5. Precedence of Operators &#xe2;&#x20ac;&#x201d; Runestone Interactive Overview" FOLDED="true" ID="ID_634510391" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://fopp.umsi.education/runestone/static/fopp/Conditionals/PrecedenceofOperators.html">
<node TEXT="8.5. Precedence of Operators&#xc2;&#xb6; Arithmetic operators take precedence over logical operators. Python will always evaluate the arithmetic operators first (** is highest then multiplication/division then addition/subtraction). Next comes the relational operators. Finally the logical operators are done last." ID="ID_1645678101" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Interactive Data Visualization using Mondrian" FOLDED="true" ID="ID_470197062" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://www.jstatsoft.org/article/view/v007i11/MondrianJSSV2.pdf">
<node TEXT="Interactive Data Visualization using Mondrian Martin Theus  ignoring the usual precedence of boolean operators where ANDhas a higher precedence as OR. The WHERE-clause in  cussion of user interface design for interactive visualization software can be found in [8]." ID="ID_16775313" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Python Operators Precedence Example - tutorialspoint.com" FOLDED="true" ID="ID_134803189" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://www.tutorialspoint.com/python/operators_precedence_example">
<node TEXT="Python Operators Precedence Example - Learning Python in simple and easy steps : A beginners tutorial containing complete knowledge of Python Syntax Object Oriented Language Methods Tuples Tools/Utilities Exceptions Handling Sockets GUI Extentions XML Programming." ID="ID_89896163" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Precedence of Operators &#xe2;&#x20ac;&#x201d; How to Think like a Computer " FOLDED="true" ID="ID_1293664533" CREATED="1566553719123" MODIFIED="1566553719123" LINK="http://interactivepython.org/runestone/static/CS115_F17/Selection/PrecedenceofOperators.html">
<node TEXT="Operators and Operands; Order of Operations; Reassignment; Updating Variables; Operator precedence table; Modules and Getting Help; The math module; Week 3. Hello Little Turtles! Our First Turtle Program; Instances &#xe2;&#x20ac;&#x201d; A Herd of Turtles; The for Loop; Flow of Execution of the for Loop; Iteration Simplifies our Turtle Program; The range Function " ID="ID_19299004" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Infix to postfix conversion algorithm - csis.pace.edu" FOLDED="true" ID="ID_1164014229" CREATED="1566553719123" MODIFIED="1566553719123" LINK="http://csis.pace.edu/~wolf/CS122/infix-postfix.htm">
<node TEXT="The rule for line 4 is if the operator on the top of the stack has higher precedence than the one being read pop and print the one on top and then push the new operator on. The rule for line 6 is that when the end of the expression has been reached pop the operators on the stack one at a time and print them. 2. A + B * C becomes A B C * +" ID="ID_1239714759" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Python Operator Precedence and Associativity - Introduction" FOLDED="true" ID="ID_60818136" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://www.techbeamers.com/python-operator-precedence-associativity/">
<node TEXT="It can override the precedence of the arithmetic operators. # Parentheses overriding the precedence of the arithmetic operators # Output: 27 (5 + 4) * 3. Operator precedence table in Python. Refer to the below table which lists the operators with the highest precedence at the top and lowest at the bottom." ID="ID_1998086794" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Operator precedence - JavaScript | MDN" FOLDED="true" ID="ID_1159561082" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence">
<node TEXT="Operator precedence determines the way in which operators are parsed with respect to each other. Operators with higher precedence become the operands of operators with lower precedence. Operators with higher precedence become the operands of operators with lower precedence." ID="ID_416557946" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Killer Visualizations in Power BI | Microsoft Power BI " FOLDED="true" ID="ID_861042624" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://powerbi.microsoft.com/en-us/blog/killer-visualizations-in-power-bi/">
<node TEXT="Killer Visualizations in Power BI. The Power BI Team Microsoft.  Interactive graphics enable you to grasp and analyze complex data intuitively. Visual analysis involves getting data representing it in one way observing results and asking follow-up questions.  With the right interactivity data visualization can not only answer " ID="ID_1977140440" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="8. Order of Operations - Runestone Interactive" FOLDED="true" ID="ID_1128814228" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://runestone.launchcode.org/runestone/static/thinkcspy/SimplePythonData/OrderofOperations.html">
<node TEXT="8. Order of Operations&#xc2;&#xb6; When more than one operator appears in an expression the order of evaluation depends on the rules of precedence. Python follows the same precedence rules for its mathematical operators that mathematics does. Parentheses have the highest precedence and can be used to force an expression to evaluate in the order you want." ID="ID_1428356504" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Operators in Java - Javatpoint" FOLDED="true" ID="ID_1690832337" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://www.javatpoint.com/operators-in-java">
<node TEXT="Operators in Java. An operator is a special type of symbol that is used to perform operations.Lets see the precedence of operators in java. Operators in Java. An operator is a special type of symbol that is used to perform operations.Lets see the precedence of operators in java. " ID="ID_1159083539" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
</node>
<node TEXT="Precedence of operators Code#$D$#" FOLDED="true" ID="ID_196396382" CREATED="1566553719124" MODIFIED="1566553719124">
<icon BUILTIN="stop-sign"/>
<node TEXT="C Operator Precedence - cppreference.com" FOLDED="true" ID="ID_1468588900" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://en.cppreference.com/w/c/language/operator_precedence">
<node TEXT="Precedence and associativity are independent from order of evaluation. The standard itself doesnt specify precedence levels. They are derived from the grammar. In C++ the conditional operator has the same precedence as assignment operators and prefix ++ and --and assignment operators dont have the restrictions about their operands." ID="ID_879473140" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Appendix A: Operator Precedence in Java - Princeton University" FOLDED="true" ID="ID_120860082" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://introcs.cs.princeton.edu/java/11precedence/">
<node TEXT="Appendix A: Operator Precedence in Java. Java has well-defined rules for specifying the order in which the operators in an expression are evaluated when the expression has several operators. For example multiplication and division have a higher precedence than addition and subtraction. Precedence rules can be overridden by explicit parentheses." ID="ID_629747008" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Operators Precedence in C - tutorialspoint.com" FOLDED="true" ID="ID_1294793445" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://www.tutorialspoint.com/cprogramming/c_operators_precedence">
<node TEXT="Operator precedence determines the grouping of terms in an expression and decides how an expression is evaluated. Certain operators have higher precedence than others; for example the multiplication operator has a higher precedence than the addition operator. For example x = 7 + 3 * 2; here x is " ID="ID_1815004014" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Operator Precedence and Associativity in C - GeeksforGeeks" FOLDED="true" ID="ID_1441366886" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://www.geeksforgeeks.org/operator-precedence-and-associativity-in-c/">
<node TEXT="It is good to know precedence and associativity rules but the best thing is to use brackets especially for less commonly used operators (operators other than + - *.. etc). Brackets increase the readability of the code as the reader doesn&#xe2;&#x20ac;&#x2122;t have to see the table to find out the order." ID="ID_479917735" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="C Language Operator Precedence Chart - Swanson Tec" FOLDED="true" ID="ID_602187005" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://www.swansontec.com/sopc.html">
<node TEXT="C Language Operator Precedence Chart. Operator precedence describes the order in which C reads expressions. For example the expression a=4+b*2 contains two operations an addition and a multiplication. Does the C compiler evaluate 4+b first then multiply the result by 2 or does it evaluate b*2 first then add 4 to the result? The operator precedence chart contains the answers." ID="ID_774811841" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Operators in C and C++ - Wikipedia" FOLDED="true" ID="ID_1736135745" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://en.wikipedia.org/wiki/Operators_in_C_and_C%2B%2B">
<node TEXT="The following is a table that lists the precedence and associativity of all the operators in the C and C++ languages (when the operators also exist in Java Perl PHP and many other recent languages the precedence is the same as that given [citation needed]). Operators are listed top to bottom in descending precedence." ID="ID_1507649671" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Java Operator Precedence - programiz.com" FOLDED="true" ID="ID_1041518864" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://www.programiz.com/java-programming/operator-precedence">
<node TEXT="When two operators share a common operand 4 in this case the operator with the highest precedence is operated first. In Java the precedence of * is higher than that of - . Hence the multiplication is performed before subtraction and the value of myInt will be 4." ID="ID_547932988" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Java Operators with Examples in Detail Code [Precedence " FOLDED="true" ID="ID_122539721" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://www.csestack.org/java-operators-examples-code/">
<node TEXT="In this tutorial of Java operators with examples we have learned about the different types of operators that Java defines and their functionality in detail. We have even looked into briefly the order of precedence of operators and their associativity. To understand how to use operators more conveniently keep practicing. Happy Learning!!" ID="ID_535169127" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Python Operators Precedence Example - tutorialspoint.com" FOLDED="true" ID="ID_1146805348" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://www.tutorialspoint.com/python/operators_precedence_example">
<node TEXT="Python Operators Precedence Example - Learning Python in simple and easy steps : A beginners tutorial containing complete knowledge of Python Syntax Object Oriented Language Methods Tuples Tools/Utilities Exceptions Handling Sockets GUI Extentions XML Programming." ID="ID_661316320" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="C++ Operator Precedence - cppreference.com" FOLDED="true" ID="ID_741423953" CREATED="1566553719124" MODIFIED="1566553719124" LINK="http://en.cppreference.com/w/cpp/language/operator_precedence">
<node TEXT="When parsing an expression an operator which is listed on some row of the table above with a precedence will be bound tighter (as if by parentheses) to its arguments than any operator that is listed on a row further below it with a lower precedence." ID="ID_1603462028" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="C# Precedence And Associativity Of Operators: Definition " FOLDED="true" ID="ID_1606566041" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://www.programiz.com/csharp-programming/operator-precedence-associativity">
<node TEXT="C# Operator Precedence. Operator precedence is a set of rules which defines how an expression is evaluated. In C# each C# operator has an assigned priority and based on these priorities the expression is evaluated.. For example the precedence of multiplication (*) operator is higher than the precedence of addition (+) operator. Therefore operation involving multiplication is carried out " ID="ID_1737075551" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Order of operations - Wikipedia" FOLDED="true" ID="ID_1985572913" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://en.wikipedia.org/wiki/Operator_precedence">
<node TEXT="In mathematics and computer programming the order of operations (or operator precedence) is a collection of rules that reflect conventions about which procedures to perform first in order to evaluate a given mathematical expression.. For example in mathematics and most computer languages multiplication is granted a higher precedence than addition and it has been this way since the " ID="ID_233370842" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
</node>
</node>
<node TEXT="Algebraic laws for RE" ID="ID_620717392" CREATED="1566881027600" MODIFIED="1566881027600" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Algebraic laws for Regular Expressions Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1302484593" CREATED="1566553719124" MODIFIED="1566553719124">
<icon BUILTIN="stop-sign"/>
<node TEXT="L23:Theory of Automata Regular Expression Regular " FOLDED="true" ID="ID_1309667274" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://www.youtube.com/watch?v=UUuiWPkTeYQ">
<node TEXT="L23:Theory of Automata Regular Expression Regular languages Algebraic laws or regular expressions in hindi #AlgebraicLawsForRegularExpressions #Regularlanguages " ID="ID_732480725" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Regular expression - Wikipedia" FOLDED="true" ID="ID_225491220" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://en.wikipedia.org/wiki/Complement_operator_(regular_expressions)">
<node TEXT="A regular expression regex or regexp (sometimes called a rational expression) is a sequence of characters that define a search pattern.Usually such patterns are used by string searching algorithms for find or find and replace operations on strings or for input validation.It is a technique developed in theoretical computer science and formal language theory." ID="ID_949577538" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Identities of Regular Expression - YouTube" FOLDED="true" ID="ID_882146570" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://www.youtube.com/watch?v=yp4pYgXfYD8">
<node TEXT="TOC: Identities of Regular Expression This lecture shows the Identities of Regular Expression Contribute: http://www.nesoacademy.org/donate Website http://" ID="ID_82323787" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Lightweight Structured Visualization of Assembler Control " FOLDED="true" ID="ID_193735754" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://www.eecis.udel.edu/~cavazos/cisc850-spring2017/papers/Lightweight-Structured-Visualization.pdf">
<node TEXT="Lightweight Structured Visualization of Assembler Control Flow based on Regular Expressions Sibel Toprak Arne Wichmann and Sibylle Schupp  (Interactive Disassembler) either integrated or standalone to view the control &#xef;&#xac;&#x201a;ow graph (CFG) of assembler  following three algebraic regular expression operators." ID="ID_608831237" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Pexpect and Regular Expressions - homepages.math.uic.edu" FOLDED="true" ID="ID_1468130419" CREATED="1566553719124" MODIFIED="1566553719124" LINK="http://homepages.math.uic.edu/~jan/mcs507f12/pexpect_regular.pdf">
<node TEXT="pexpect commands The class spawn of the module pexpect is the main interface: 1 The syntax for spawning a process is  import pexpect  child = pexpect.spawn(command) 2 At the creation of an object of the class spawn a string is passed which contains the command to launch a program." ID="ID_1606005757" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Weighted RegExp Matching - GitHub Pages" FOLDED="true" ID="ID_282805577" CREATED="1566553719124" MODIFIED="1566553719124" LINK="http://sebfisch.github.io/haskell-regexp/">
<node TEXT="Efficient regular expression matching can be beautifully simple.  By installing the Haskell Platform you get a Haskell compiler with an interactive environment as well as the package manager cabal-install and various pre-installed packages.  the algebraic laws of semirings for all defined semirings and." ID="ID_10212267" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="HaLeX: HaLeX enables modelling manipulation and " FOLDED="true" ID="ID_841836123" CREATED="1566553719124" MODIFIED="1566553719124" LINK="http://hackage.haskell.org/package/HaLeX">
<node TEXT="HaLeX: HaLeX enables modelling manipulation and visualization of regular languages  The HaLeX library includes a useful tool to manipulate and vizualize regular languages: the halex tool. This is a batch tool that can be used in Unix pipes.  Proving one law of the algebra of regular expressions." ID="ID_19617131" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Towards a Formal Representation of Interactive Systems " FOLDED="true" ID="ID_907205630" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://www.researchgate.net/publication/261958902_Towards_a_Formal_Representation_of_Interactive_Systems">
<node TEXT="Powerful algebraic techniques have been developed for classical sequential computation. Many of them are based on regular expressions and the associated regular algebra." ID="ID_546096443" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="ShapeSearch: A Flexible and Efficient System for Shape " FOLDED="true" ID="ID_1183509393" CREATED="1566553719124" MODIFIED="1566553719124" LINK="http://export.arxiv.org/pdf/1811.07977">
<node TEXT="as expression values and the category as gene. Each value of the category attribute results in a candidate visualization with the given x and yaxis. Thus the category attribute defines the space of visualizations over which we match the shape. ShapeSearch supports three mechanisms for shape specification &#xe2;&#x20ac;&#x201d; natural language regular " ID="ID_626604417" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Circuit Simplification Examples | Boolean Algebra " FOLDED="true" ID="ID_171308963" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://www.allaboutcircuits.com/textbook/digital/chpt-7/circuit-simplification-examples/">
<node TEXT="Circuit Simplification Examples Chapter 7 - Boolean Algebra.  Now that we have a Boolean expression to work with we need to apply the rules of Boolean algebra to reduce the expression to its simplest form (simplest defined as requiring the fewest relay contacts to implement):" ID="ID_1143728680" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Regex Cheat Sheet: A Quick Guide to Regular Expressions in " FOLDED="true" ID="ID_787514513" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://www.dataquest.io/blog/regex-cheatsheet/">
<node TEXT="The tough thing about learning data science is remembering all the syntax. While at Dataquest we advocate getting used to consulting the Python documentation sometimes it&#xe2;&#x20ac;&#x2122;s nice to have a handy PDF reference so we&#xe2;&#x20ac;&#x2122;ve put together this Python regular expressions (regex) cheat sheet to help you out!. This regex cheat sheet is based on Python 3&#xe2;&#x20ac;&#x2122;s documentation on regular expressions." ID="ID_943157944" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Algebra homework cheat - Solve Algebra problems with the " FOLDED="true" ID="ID_768903829" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://softmath.com/math-com-calculator/reducing-fractions/algebra-homework-cheat.html">
<node TEXT="free algebra 2 math solver ;   prentice hall mathematics algebra 1 mathimatics in malaysia evaluation in ambiguity of graph and regular expression. Solve quadratic equation with mathcad tutorial math made easy for clep test free alegbra homework questions how do you find the slop of the line Step by Step help on Factoring polynomials " ID="ID_29158581" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
</node>
<node TEXT="Algebraic laws for Regular Expressions Code#$D$#" FOLDED="true" ID="ID_579442295" CREATED="1566553719124" MODIFIED="1566553719124">
<icon BUILTIN="stop-sign"/>
<node TEXT="Algebraic Laws for languages - UCR" FOLDED="true" ID="ID_92650902" CREATED="1566553719124" MODIFIED="1566553719124" LINK="http://www.cs.ucr.edu/~jiang/cs150/slides4week3_AlgebraicLaws+PL.pdf">
<node TEXT="Algebraic Laws for languages L[M= M[L. Union is commutative. (L[M) [N= L[(M[N). Union is associative. (LM)N= L(MN). Concatenation is associative Note: Concatenation is not commutative i.e. there are Land M such that LM6=ML. 76. It would be very useful if we could simplify regular languages/expressions and determine their properties." ID="ID_1059172" CREATED="1566553719124" MODIFIED="1566553719124"/>
</node>
<node TEXT="Properties of Regular Languages - univ-orleans.fr" FOLDED="true" ID="ID_613137471" CREATED="1566553719124" MODIFIED="1566553719124" LINK="https://www.univ-orleans.fr/lifo/Members/Mirian.Halfeld/Cours/TLComp/TLComp-ProRegLang.pdf">
<node TEXT="Algebraic Laws for Regular Expressions Two expressions with variables are equivalent if whatever languages we substitute for the variables the results of the two expressions are the same language. Examples in the algebra of arithmetic: 1 + 2 = 2 + 1 or x + y = y + x. Like arithmetic expressions the regular expressions have a number of laws that" ID="ID_44504002" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Algebraic laws of regular expression - YouTube" FOLDED="true" ID="ID_1561569417" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://www.youtube.com/watch?v=OL1XlQlRsaU">
<node TEXT="DO LIKE SHARE AND SUBSCRIBE LINK FOR MATERIAL- https://drive.google.com/open?id=1DFb FOR ANY QUERIES COMMENT OR MESSAGE IN FB PAGE FB PAGE LINK- https://www " ID="ID_389931724" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="L23:Theory of Automata Regular Expression Regular " FOLDED="true" ID="ID_1612876938" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://www.youtube.com/watch?v=UUuiWPkTeYQ">
<node TEXT="L23:Theory of Automata Regular Expression Regular languages Algebraic laws or regular expressions in hindi #AlgebraicLawsForRegularExpressions #Regularlanguages " ID="ID_948451027" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Compiler Design - Regular Expressions" FOLDED="true" ID="ID_286536800" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://www.tutorialspoint.com/compiler_design/compiler_design_regular_expressions">
<node TEXT="The specification of regular expressions is an example of a recursive definition. Regular languages are easy to understand and have efficient implementation. There are a number of algebraic laws that are obeyed by regular expressions which can be used to manipulate regular expressions into equivalent forms. Operations" ID="ID_735151423" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Kleene algebra - Wikipedia" FOLDED="true" ID="ID_1522225878" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://en.wikipedia.org/wiki/Kleene_algebra">
<node TEXT="Kleene introduced regular expressions and gave some of their algebraic laws. Although he didnt define Kleene algebras he asked for a decision procedure for equivalence of regular expressions. Redko proved that no finite set of equational axioms can characterize the algebra of regular languages." ID="ID_1461468311" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Lecture 9 Regular Expressions and Finite Automata" FOLDED="true" ID="ID_1318405011" CREATED="1566553719125" MODIFIED="1566553719125" LINK="http://www.cs.cornell.edu/courses/cs2800/2013fa/Handouts/kleene.pdf">
<node TEXT="Regular Expressions and Finite Automata Simpli&#xef;&#xac;&#xfffd;cation of Expressions For small regular expressions one can often see how to construct an equiva-  Here are a few laws that can be used to simplify regular expressions.  further simplify the expression using the algebraic laws (9.1) through (9.18): " ID="ID_913376094" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Regular expression - Wikipedia" FOLDED="true" ID="ID_1951315055" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://en.wikipedia.org/wiki/Regular_expressions">
<node TEXT="A regular expression regex or regexp (sometimes called a rational expression) is a sequence of characters that define a search pattern.Usually such patterns are used by string searching algorithms for find or find and replace operations on strings or for input validation.It is a technique developed in theoretical computer science and formal language theory." ID="ID_1108101475" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Regular Expressions - Stanford University" FOLDED="true" ID="ID_821571392" CREATED="1566553719125" MODIFIED="1566553719125" LINK="http://infolab.stanford.edu/~ullman/ialc/spr10/slides/re1.pdf">
<node TEXT="Regular expressions are an algebraic way to describe languages. They describe exactly the regular languages. If E is a regular expression then L(E) is the language it defines. We&#xe2;&#x20ac;&#x2122;ll describe RE&#xe2;&#x20ac;&#x2122;s and their languages recursively. 3  Algebraic Laws for RE&#xe2;&#x20ac;&#x2122;s" ID="ID_1462207583" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Regular Expressions - University of Alaska Anchorage" FOLDED="true" ID="ID_1270608426" CREATED="1566553719125" MODIFIED="1566553719125" LINK="http://math.uaa.alaska.edu/~afkjm/cs351/handouts/regular-expressions.pdf">
<node TEXT="Algebraic Laws for RE&#xe2;&#x20ac;&#x2122;s &#xe2;&#x20ac;&#xa2; Just like we have an algebra for arithmetic we also have an algebra for regular expressions. &#xe2;&#x20ac;&#x201c; While there are some similarities to arithmetic algebra it is a bit different with regular expressions." ID="ID_1567022237" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Regular Expressions [1] Regular Expressions - Chalmers" FOLDED="true" ID="ID_916352220" CREATED="1566553719125" MODIFIED="1566553719125" LINK="http://www.cse.chalmers.se/~coquand/AUTOMATA/over5.pdf">
<node TEXT="Regular Expressions [1] Regular Expressions Regular expressions can be seen as a system of notations for denoting -NFA They form an &#xe2;&#x20ac;&#x153;algebraic&#xe2;&#x20ac;&#xfffd; representation of -NFA &#xe2;&#x20ac;&#x153;algebraic&#xe2;&#x20ac;&#xfffd;: expressions with equations such as E 1+E 2 = E 2+E 1 E(E 1+ E 2) = EE 1 +EE 2 Each regular expression E represents also a language L(E)" ID="ID_73934620" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Notes on Regular Expression Simpli cation" FOLDED="true" ID="ID_1971430620" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://www.cs.cmu.edu/~fp/courses/97-212/handouts/regsimp.pdf">
<node TEXT="of primitive rules for simplifying expressions and to combine these using a variety of functions to build complex simpli ers from the basic rules. 2 Algebraic Laws for Regular Expressions We will build a simpli er for regular expressions based on the following simple algebraic laws: r+0 = r 0+ r = r (r 1 + r 2)+r 3 = r 1+(r 2+r 3) 1r = r r1 " ID="ID_1692932205" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
</node>
</node>
<node TEXT="Conversions" ID="ID_985744576" CREATED="1566881027602" MODIFIED="1566881027602" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="NFA to DFA" ID="ID_220856466" CREATED="1566881027602" MODIFIED="1566881027602" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Conversions NFA to DFA Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1888287526" CREATED="1566553719125" MODIFIED="1566553719125">
<icon BUILTIN="stop-sign"/>
<node TEXT="Conversion of NFA to DFA - YouTube" FOLDED="true" ID="ID_1246063364" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://www.youtube.com/watch?v=--CSVsFIDng">
<node TEXT="TOC: Conversion of NFA to DFA This lecture shows how NFA and DFA are equivalent and how to convert an NFA to its equivalent DFA. Topics Discussed: 1. Equivalence of NFA and DFA. 2. Example of " ID="ID_454728885" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="FSA Animate | visual NFA to DFA Converter" FOLDED="true" ID="ID_8410768" CREATED="1566553719125" MODIFIED="1566553719125" LINK="http://alexklibisz.github.io/FSA-Animate/">
<node TEXT="FSA Animate | visual NFA to DFA Converter. Created by Alex Klibisz (Visualization) and Connor Minton (Conversion Algorithm) COSC 312 Spring 2015 University of Tennessee Knoxville. Start by constructing the NFA or creating it from JSON input. Then use the conversion tools to create an equivalent DFA." ID="ID_1064938177" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Theory Of Computation 36Conversion of NFA to DFA - YouTube" FOLDED="true" ID="ID_997915017" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://www.youtube.com/watch?v=ZUMYU6sVqqI">
<node TEXT="Conversion of NFA to DFA for the example all strings ends with a   Theory Of Computation 36Conversion of NFA to DFA  The interactive transcript could not be loaded." ID="ID_42322963" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="GitHub - cyanmoon/Re2NFA_DFA_Visualization: Regular " FOLDED="true" ID="ID_1107412871" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://github.com/cyanmoon/Re2NFA_DFA_Visualization">
<node TEXT="Regular expression to NFA DFA Minimum DFA and visualization of NFA DFA Minimum DFA. - cyanmoon/Re2NFA_DFA_Visualization" ID="ID_874946764" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="JFLAP &#xe2;&#x20ac;&#x201c; An Interactive Formal Languages and Automata Package" FOLDED="true" ID="ID_1377644445" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://www2.cs.duke.edu/csed/jflap/jflapbook/jflapbook2006.pdf">
<node TEXT="JFLAP &#xe2;&#x20ac;&#x201c; An Interactive Formal Languages and Automata Package Susan H. Rodger Duke University  2 NFA to DFA to Minimal DFA 19  (JFLAP) an interactive visualization and teaching tool for formal languages. This book is intended" ID="ID_1567881989" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Can all context free grammars be converted to NFA/DFA?" FOLDED="true" ID="ID_1521099994" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://stackoverflow.com/questions/41128425/can-all-context-free-grammars-be-converted-to-nfa-dfa">
<node TEXT="Ive seen this post about how to convert context free grammar to a DFA: Automata theory : Conversion of a Context free grammar to a DFA. However just wondering can all context free grammars be converted to DFA/NFA? What about context free grammars that cannot be expressed as a regular expression? Ex. S-(S) | Thanks!" ID="ID_192292871" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Event-based NFA to DFA automaton conversion &#xe2;&#x20ac;&#x201d; CIF 3" FOLDED="true" ID="ID_1811314075" CREATED="1566553719125" MODIFIED="1566553719125" LINK="http://cif.se.wtb.tue.nl/tools/eventbased/nfa-to-dfa.html">
<node TEXT="Starting the NFA to DFA automaton conversion tool&#xc2;&#xb6; The tool can be started in the following ways: In Eclipse right click a .cif file in the Project Explorer or Package Explorer and choose CIF synthesis tools &#xe2;&#x20ac;&#xa3; Event-based synthesis tools &#xe2;&#x20ac;&#xa3; Apply NFA to DFA automaton conversion." ID="ID_867181355" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Visual and Interactive Tools - users.cs.duke.edu" FOLDED="true" ID="ID_899905086" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://users.cs.duke.edu/~rodger/tools/">
<node TEXT="Visual and Interactive Tools .  (Aug. 1999). New features in 3.1 include regular expressions including conversions of regular expressions to NFA and DFA to regular expressions. New features from 3.0 include several conversions from one representation to another. The conversions are nondeterministic finite automaton (NFA) to deterministic " ID="ID_548894640" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Regex = NFA = DFA - CyberZHG (Zhao HG) &#xc2;&#xb7; GitHub" FOLDED="true" ID="ID_1336523382" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://cyberzhg.github.io/toolbox/nfa2dfa">
<node TEXT="Convert simple regular expressions to deterministic finite automaton. (Regex = NFA = DFA)" ID="ID_850114816" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Regular Expression to NFA Converter (Thompson Construction)" FOLDED="true" ID="ID_925047300" CREATED="1566553719125" MODIFIED="1566553719125" LINK="http://hackingoff.com/compilers/regular-expression-to-nfa-dfa">
<node TEXT="Regular Expression to NFA (Non-Deterministic Finite Automata) Visualize the Thompson-McNaughton-Yamada construction NFA for a given regular expression. The subset construction algorithm is also applied to the resultant NFA resulting in a language-equivalent deterministic finite-state automata (DFA)." ID="ID_817475220" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="nfa to dfa free download - SourceForge" FOLDED="true" ID="ID_1274370623" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://sourceforge.net/directory/?q=nfa%20to%20dfa">
<node TEXT="visualFSA is a small tool which lets you construct NFAs/DFAs [(non)deterministic finite automata]. It offers some common algorithms which can be applied to that automatons like converting NFA- DFA word problem accepted language etc." ID="ID_294133322" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Topic: nfa &#xc2;&#xb7; GitHub" FOLDED="true" ID="ID_1096828036" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://github.com/topics/nfa">
<node TEXT="GitHub is where people build software. More than 36 million people use GitHub to discover fork and contribute to over 100 million projects.  The Python script uses to convert the E-NFA to DFA and show the result in the web browser  compiler python lex yacc visualization dfa nfa lexical-analysis syntax-analysis Python Updated Dec 5 2017 " ID="ID_1417252143" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
</node>
<node TEXT="Conversions NFA to DFA Code#$D$#" FOLDED="true" ID="ID_1170604520" CREATED="1566553719125" MODIFIED="1566553719125">
<icon BUILTIN="stop-sign"/>
<node TEXT="Theory of Computation | Conversion from NFA to DFA " FOLDED="true" ID="ID_35466181" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://www.geeksforgeeks.org/theory-of-computation-conversion-from-nfa-to-dfa/">
<node TEXT="Theory of Computation | Conversion from NFA to DFA.  DFA has one and only one move from a given state on a given input symbol. Conversion from NFA to DFA Suppose there is an NFA N  Q &#xe2;&#x2c6;&#x2018; q0 &#xce;&#xb4; F  which recognizes a language L. Then the DFA D  Q&#xe2;&#x20ac;&#x2122; &#xe2;&#x2c6;&#x2018; q0 &#xce;&#xb4;&#xe2;&#x20ac;&#x2122; F&#xe2;&#x20ac;&#x2122;  can be constructed for language L as:  Writing code in " ID="ID_541915228" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="NFA to DFA Conversion (With Expression  Algorithm " FOLDED="true" ID="ID_1269365299" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://decodediary.com/2019/03/09/nfa-to-dfa-conversion-with-expression-algorithm/">
<node TEXT="In this post we will learn how to convert a nfa to dfa. We will also check the algorithms which are used for this conversion and apart from this we will also see some examples. For better understanding you have to also go through the recommended videos and also check the given pdf. I will&#xe2;&#x20ac;&#xa6;" ID="ID_863623823" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="C code to convert NFA into DFA - coders-hub.com" FOLDED="true" ID="ID_897689847" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://www.coders-hub.com/2013/05/c-code-to-convert-nfa-into-dfa.html">
<node TEXT="C code to convert NFA into DFA C program to convert NFA(Non-deterministic Finite Automata) to DFA(Deterministic Finite Automata). Add given below text file to your current directory to check this program. This program is tested on Turbo C." ID="ID_1130091426" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="blog-codes/NFA to DFA Conversion.cpp at master " FOLDED="true" ID="ID_420080027" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://github.com/kartikkukreja/blog-codes/blob/master/src/NFA%20to%20DFA%20Conversion.cpp">
<node TEXT="* Description : Program to convert a given NFA to the corresponding DFA. It reads in the NFA from NFA.txt and writes out the corresponding DFA to DFA.txt. NFA.txt must have the following format:" ID="ID_1122740452" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Conversion of NFA to DFA - cs.odu.edu" FOLDED="true" ID="ID_548624229" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://www.cs.odu.edu/~toida/nerzic/390teched/regular/fa/nfa-2-dfa.html">
<node TEXT="Conversion of NFA to DFA Conversion of NFA to DFA Let M 2 =  Q 2  q 20 2 A 2  be an NFA that recognizes a language L. Then the DFA M =  Q  q 0  A  that satisfies the following conditions recognizes L: Q = 2 Q 2 that is the set of all subsets of Q 2 q 0 = { q 20}  ( q a ) = for each state q in Q and each symbol a in and A = { q Q | q A 2} To obtain a DFA M =  Q  q 0  A " ID="ID_612884045" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="finite automata - How to convert NFA/DFA to java? - Stack " FOLDED="true" ID="ID_543525562" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://stackoverflow.com/questions/7768759/how-to-convert-nfa-dfa-to-java">
<node TEXT="I have a scenario where I have designed the NFA and using JFLAP I have converted it to DFA. I need to know how to code it in Java? Basically how to implement those state transitions in Java. I have seen some examples which do this using switch and if statements but I cant see any relation to DFA/NFA design and how to use it to implement in Java." ID="ID_1270676057" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="Convert NFA to DFA | Free Source Code  Tutorials" FOLDED="true" ID="ID_1721154564" CREATED="1566553719125" MODIFIED="1566553719125" LINK="https://www.sourcecodester.com/php/6250/convert-nfa-dfa.html">
<node TEXT="My plan is to actually convert NFA to DFA. The program includes three state prove that the letters a and b are closed NFA and DFA is become and what values the program automatically recognizes the state and the user displays. R. Bojnordi programmer from Iran Contact number 00989368700813" ID="ID_333453943" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="nfa to dfa conversion - Free Open Source Codes - CodeForge.com" FOLDED="true" ID="ID_1057347785" CREATED="1566553719125" MODIFIED="1566553719125" LINK="http://www.codeforge.com/article/238077">
<node TEXT="This is the source code of NFA to DFA conversion in c#. Welcome to download and try. Thank you for your support!" ID="ID_688208783" CREATED="1566553719125" MODIFIED="1566553719125"/>
</node>
<node TEXT="NFA to DFA Converting an NFA to a DFA {3} 1" FOLDED="true" ID="ID_91264850" CREATED="1566553719125" MODIFIED="1566553719125" LINK="http://web.cecs.pdx.edu/~harry/compilers/slides/LexicalPart3.pdf">
<node TEXT="Converting an NFA to a DFA Given: A non-deterministic finite state machine (NFA)  NFA DFA (The names of the states is arbitrary and can be changed later if desired.)  Algorithm: Convert NFA to DFA We&#xc3;&#x2022;ll use MoveNFA(Sa) the transition function from NFA #-Closure(s) where s is a single state from NFA #-Closure(S) where S is a set of " ID="ID_1450881732" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Convert DFA to Code (ISSR-CS510) (Compiler) (Arabic " FOLDED="true" ID="ID_1846102430" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://www.youtube.com/watch?v=Mizgw0Xie1I">
<node TEXT="&#xd8;&#xa7;&#xd8;&#xac;&#xd8;&#xaa;&#xd9;&#x2021;&#xd8;&#xa7;&#xd8;&#xaf; &#xd8;&#xb4;&#xd8;&#xae;&#xd8;&#xb5;&#xd9;&#x160; &#xd9;&#x160;&#xd8;&#xad;&#xd8;&#xaa;&#xd9;&#x2026;&#xd9;&#x201e; &#xd8;&#xa7;&#xd9;&#x201e;&#xd8;&#xae;&#xd8;&#xb7;&#xd8;&#xa3; &#xd9;&#x2026;&#xd8;&#xad;&#xd8;&#xa7;&#xd9;&#x2c6;&#xd9;&#x201e;&#xd8;&#xa9; &#xd9;&#x201e;&#xd8;&#xaa;&#xd8;&#xa8;&#xd8;&#xb3;&#xd9;&#x160;&#xd8;&#xb7; &#xd8;&#xaa;&#xd8;&#xad;&#xd9;&#x2c6;&#xd9;&#x160;&#xd9;&#x201e; DFA &#xd8;&#xa5;&#xd9;&#x201e;&#xd9;&#x2030; &#xd9;&#x192;&#xd9;&#x2c6;&#xd8;&#xaf; ahmed.marei.84@stud.cu.edu.eg" ID="ID_1254090260" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="NFA to DFA conversion algorithm with solved example " FOLDED="true" ID="ID_1533116202" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://er.yuvayana.org/nfa-to-dfa-conversion-algorithm-with-solved-example/">
<node TEXT="Learn NFA to DFA conversion algorithm with solved example and black diagrams. The goal is to construct a Deterministic Finite Automata (DFA) from given Non-Deterministic Finite Automata (DFA) machine." ID="ID_1394688942" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Pseudocode for converting NFA to DFA - Stack Overflow" FOLDED="true" ID="ID_269452690" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://stackoverflow.com/questions/11954935/pseudocode-for-converting-nfa-to-dfa">
<node TEXT="as the title suggests I want somebody to help me in coding the conversion of NFA to DFA . I need the pseudocode only . I have tried searching using Google  and I found the whole source code even  however there were little resource to help me for giving me a formal method (in written wordsnot via picture) for the conversion ." ID="ID_1043295745" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
</node>
<node TEXT="Regular Expressions to DFA Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1206658632" CREATED="1566553719126" MODIFIED="1566553719126">
<icon BUILTIN="stop-sign"/>
<node TEXT="Regexper" FOLDED="true" ID="ID_1117898232" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://regexper.com/">
<node TEXT="Regular expression visualizer using railroad diagrams. You thought you only had two problems&#xe2;&#x20ac;&#xa6;" ID="ID_15372630" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="GitHub - cyanmoon/Re2NFA_DFA_Visualization: Regular " FOLDED="true" ID="ID_112328337" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://github.com/cyanmoon/Re2NFA_DFA_Visualization">
<node TEXT="Regular expression to NFA DFA Minimum DFA and visualization of NFA DFA Minimum DFA. - cyanmoon/Re2NFA_DFA_Visualization" ID="ID_1032159719" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Regular-Expressions.info - Regex Tutorial Examples and " FOLDED="true" ID="ID_880473219" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://www.regular-expressions.info/">
<node TEXT="Regular Expressions Quick Start. If you just want to get your feet wet with regular expressions take a look at the one-page regular expressions quick start.While you cant learn to efficiently use regular expressions from this brief overview its enough to be able to throw together a bunch of simple regular expressions." ID="ID_1405874769" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="DFA to Regular Expression Conversion - YouTube" FOLDED="true" ID="ID_302936554" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://www.youtube.com/watch?v=SmT1DXLl3f4">
<node TEXT="Theory Of Computation Lecture 63--Conversion of Finite automata to Regular Expression and vice versa - Duration: 42:50. Gate Lectures by Ravindrababu Ravula 368634 views 42:50" ID="ID_1745002429" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="Visual and Interactive Tools - users.cs.duke.edu" FOLDED="true" ID="ID_280281597" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://users.cs.duke.edu/~rodger/tools/">
<node TEXT="Visual and Interactive Tools .  New features in 3.1 include regular expressions including conversions of regular expressions to NFA and DFA to regular expressions. New features from 3.0 include several conversions from one representation to another. The conversions are nondeterministic finite automaton (NFA) to deterministic finite " ID="ID_546722624" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="Convert Regular Expression to DFA - YouTube" FOLDED="true" ID="ID_1609133933" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://www.youtube.com/watch?v=dlH2pIndNrU">
<node TEXT="This is a complete worked example of converting a regular expression to a DFA. Watch the related videos for more details about the individual steps." ID="ID_484769267" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="Regex = NFA = DFA - GitHub" FOLDED="true" ID="ID_730746004" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://cyberzhg.github.io/toolbox/nfa2dfa">
<node TEXT="Convert simple regular expressions to deterministic finite automaton. (Regex = NFA = DFA)" ID="ID_714054923" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="Regular Expression to NFA (Non-Deterministic Finite Automata)" FOLDED="true" ID="ID_1028131456" CREATED="1566553719127" MODIFIED="1566553719127" LINK="http://hackingoff.com/compilers/regular-expression-to-nfa-dfa">
<node TEXT="Regular Expression to NFA (Non-Deterministic Finite Automata) Visualize the Thompson-McNaughton-Yamada construction NFA for a given regular expression. The subset construction algorithm is also applied to the resultant NFA resulting in a language-equivalent deterministic finite-state automata (DFA)." ID="ID_241851488" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="GitHub - Jack-Q/reg2dfa: Regular expression to DFA with " FOLDED="true" ID="ID_154714853" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://github.com/Jack-Q/reg2dfa">
<node TEXT="Regular expression to DFA with DOT format output for visualization https://jack-q.github.io/reg2dfa/ dfa nfa visualization regular-expression 32 commits" ID="ID_466961007" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="DFA vs NFA engines: What is the difference in their " FOLDED="true" ID="ID_1006216722" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://stackoverflow.com/questions/3978438/dfa-vs-nfa-engines-what-is-the-difference-in-their-capabilities-and-limitations">
<node TEXT="Among other points made on page 7 There are two kinds of regular expression engines: text-directed engines and regex-directed engines. Jeffrey Friedl calls them DFA and NFA engines respectively.certain very useful features such as lazy quantifiers and backreferences can only be implemented in regex-directed engines." ID="ID_597944548" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="(PDF) Interactive manipulation of regular objects with " FOLDED="true" ID="ID_585003517" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://www.academia.edu/2757425/Interactive_manipulation_of_regular_objects_with_FAdo">
<node TEXT="INTERACTIVE VISUALISATION  from dfa import * Currently the FAdo graphical environment allows the Example 1. Convert to a regular expression the follow- editing and visualisation of diagrams representing finite au- ing NDFA: tomata and provides an user interface to some conversion @NDFA 2 algorithms and string recognition. " ID="ID_491055015" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="FSM Simulator - ivanzuzak.info" FOLDED="true" ID="ID_1403673190" CREATED="1566553719127" MODIFIED="1566553719127" LINK="http://ivanzuzak.info/noam/webapps/fsm_simulator/">
<node TEXT="Enter a regular expression into the input field below or click Generate random regex to have the app generate a simple regex randomly for you. Next click Create automaton to create a FSM for the defined regex and display its transition graph.. A valid regex consists of alphanumeric characters representing the set of input symbols (e.g. a B 9) the $ character representing the empty string " ID="ID_970956522" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
</node>
<node TEXT="Regular Expressions to DFA Code#$D$#" FOLDED="true" ID="ID_934211696" CREATED="1566553719127" MODIFIED="1566553719127">
<icon BUILTIN="stop-sign"/>
<node TEXT="Regular Expression to DFA - ProjectsGeek" FOLDED="true" ID="ID_954285498" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://projectsgeek.com/2011/06/regular-expression-to-dfa.html">
<node TEXT="One can specify all token types using regular expressions. These regular expressions are then converted to DFA&#xe2;&#x20ac;&#x2122;s in the form of DFA transition table. Lexical analyzer reads a character from a source program and based on the current state and current symbol read makes a transition to some other state." ID="ID_292439705" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="Regular Expression to DFA Code in C Language - ProjectsGeek" FOLDED="true" ID="ID_1019926617" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://projectsgeek.com/2011/05/regular-expression-to-dfa-code-in-c-language.html">
<node TEXT="Regular Expression to DFA Code in C Language Regular Expression to DFA ( To be taken from compiler point of view) .The implementation to be done as per the algorithm covered in the book Compiler Design and Principles." ID="ID_1083283321" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="Convert Regular Expression to DFA - YouTube" FOLDED="true" ID="ID_1546417404" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://www.youtube.com/watch?v=dlH2pIndNrU">
<node TEXT="This is a complete worked example of converting a regular expression to a DFA. Watch the related videos for more details about the individual steps." ID="ID_1570837729" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="REGULAR EXPRESSION to DFA CONVERSION with a PROGRAM - YouTube" FOLDED="true" ID="ID_1759217940" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://www.youtube.com/watch?v=iDBin6BzqUY">
<node TEXT="Its a simple demonstration of a program which converts regular expressions to corresponding minimized DFAs and gives transition table with transition diagram as outputs." ID="ID_1069465617" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="GitHub - ckshitij/RE_TO_DFA: code of RE" FOLDED="true" ID="ID_1424624970" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://github.com/ckshitij/RE_TO_DFA">
<node TEXT="In these applications the regular expressions and finite automata are used to recognize this language. Formal definition of Regular expression. The class of regular expressions over &#xe2;&#x2c6;&#x2018; is defined recursively as follows: The letters &#xcf;&#x2020; and &#xd0;&#x201e; are regular expressions over &#xe2;&#x2c6;&#x2018; . Every letter &#xe2;&#x20ac;&#x2dc;a&#xe2;&#x20ac;&#x2122; c &#xe2;&#x2c6;&#x2018;is a regular expression over &#xe2;&#x2c6;&#x2018; ." ID="ID_373941095" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="DFA to Regular Expression | Examples | Gate Vidyalay" FOLDED="true" ID="ID_613094840" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://www.gatevidyalay.com/dfa-to-regular-expression-examples-automata/">
<node TEXT="DFA to Regular Expression- The methods to convert DFA to regular expression are- Ardens Method and State Elimination Method. Convert DFA to a Regular Expression Using State Elimination Method. DFA to Regular Expression Conversion Exercises." ID="ID_1771042448" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="Regular expression - Wikipedia" FOLDED="true" ID="ID_1958429633" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://en.wikipedia.org/wiki/Regular_expression">
<node TEXT="A regular expression regex or regexp (sometimes called a rational expression) is a sequence of characters that define a search pattern.Usually such patterns are used by string searching algorithms for find or find and replace operations on strings or for input validation.It is a technique developed in theoretical computer science and formal language theory." ID="ID_713800465" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="Regular-Expressions.info - Regex Tutorial Examples and " FOLDED="true" ID="ID_833267128" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://www.regular-expressions.info/">
<node TEXT="Regular Expressions Quick Start. If you just want to get your feet wet with regular expressions take a look at the one-page regular expressions quick start.While you cant learn to efficiently use regular expressions from this brief overview its enough to be able to throw together a bunch of simple regular expressions." ID="ID_784128619" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="GitHub - felipemoura/RegularExpression-to-NFA-to-DFA" FOLDED="true" ID="ID_168932533" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://github.com/felipemoura/RegularExpression-to-NFA-to-DFA">
<node TEXT="README.txt @author Felipe Moreira Moura @NUID 59797811 @course Computer Engineering @class CSCE 428 - Project 01: Regular Expression Files: * MakeFile * Java classes * NFA.java * DFA.java * State.java * RegularExpression.java * ExpressionReader.java * ValidateExpression.java Compiling: * To compile it just use make it will compile all java files with javac." ID="ID_1749791100" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="From DFA to C Code - YouTube" FOLDED="true" ID="ID_231525124" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://www.youtube.com/watch?v=MAQUNynQu_E">
<node TEXT="An example code on converting DFA to C code. Java Project For Beginners Step By Step Using NetBeans And MySQL Database In One Video [ With Code ] - Duration: 2:30:28. 1BestCsharp blog 6143433 views" ID="ID_920631339" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="Writing own regular expression parser - CodeProject" FOLDED="true" ID="ID_718922361" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://www.codeproject.com/articles/5412/writing-own-regular-expression-parser">
<node TEXT="Depending on time future releases might incorporate a more complete regular expression parser that searches through files of any size and delivers the results in different ways. At this point for the completeness of the article I must note that there is a way of converting a regular expression directly into a DFA." ID="ID_1041490095" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="Regular Expression to NFA Converter (Thompson Construction)" FOLDED="true" ID="ID_1020386786" CREATED="1566553719127" MODIFIED="1566553719127" LINK="http://hackingoff.com/compilers/regular-expression-to-nfa-dfa">
<node TEXT="Regular Expression to NFA (Non-Deterministic Finite Automata) Visualize the Thompson-McNaughton-Yamada construction NFA for a given regular expression. The subset construction algorithm is also applied to the resultant NFA resulting in a language-equivalent deterministic finite-state automata (DFA)." ID="ID_1684320420" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
</node>
</node>
<node TEXT="RE to DFA Conversions" ID="ID_980077292" CREATED="1566881027607" MODIFIED="1566881027607" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Regular Expressions to DFA Conversions Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1770027568" CREATED="1566553719126" MODIFIED="1566553719126">
<icon BUILTIN="stop-sign"/>
<node TEXT="DFA to Regular Expression Conversion - YouTube" FOLDED="true" ID="ID_623608692" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://www.youtube.com/watch?v=SmT1DXLl3f4">
<node TEXT="Theory Of Computation Lecture 63--Conversion of Finite automata to Regular Expression and vice versa - Duration: 42:50. Gate Lectures by Ravindrababu Ravula 368634 views 42:50" ID="ID_1335046010" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Conversion of Regular Expression to Finite Automata " FOLDED="true" ID="ID_177368607" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://www.youtube.com/watch?v=62JAy4oH6lU">
<node TEXT="TOC: Conversion of Regular Expression to Finite Automata - Examples (Part 1) This lecture shows how to convert Regular Expressions to their equivalent Finite" ID="ID_990552588" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="GitHub - liji/RegularExpressionToNFAAndDFA: Convert " FOLDED="true" ID="ID_990052312" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://github.com/liji/RegularExpressionToNFAAndDFA">
<node TEXT="Convert Regular Expression to NFA and DFA. Contribute to liji/RegularExpressionToNFAAndDFA development by creating an account on GitHub. Convert Regular Expression to NFA and DFA. Contribute to liji/RegularExpressionToNFAAndDFA development by creating an account on GitHub." ID="ID_1652373503" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="GitHub - cyanmoon/Re2NFA_DFA_Visualization: Regular " FOLDED="true" ID="ID_1757201184" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://github.com/cyanmoon/Re2NFA_DFA_Visualization">
<node TEXT="Regular expression to NFA DFA Minimum DFA and visualization of NFA DFA Minimum DFA. - cyanmoon/Re2NFA_DFA_Visualization" ID="ID_774213241" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Convert Regular Expression to DFA - Compiler Design" FOLDED="true" ID="ID_1983880658" CREATED="1566553719126" MODIFIED="1566553719126" LINK="http://mail.ecomputernotes.com/compiler-design/convert-regular-expression-to-dfa">
<node TEXT="Regular expression can be converted into DFA by the following methods: (i) Thompsons subset construction &#xe2;&#x20ac;&#xa2; Given regular expression is converted into NFA &#xe2;&#x20ac;&#xa2; Resultant NFA is converted into DFA (ii) Direct Method &#xe2;&#x20ac;&#xa2; In direct method given regular expression is converted directly into DFA. Rules for Conversion of Regular Expression to NFA " ID="ID_1782842229" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Convert simple regular expressions to deterministic finite " FOLDED="true" ID="ID_1473326170" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://cyberzhg.github.io/toolbox/nfa2dfa">
<node TEXT="Convert simple regular expressions to deterministic finite automaton. (Regex = NFA = DFA)" ID="ID_6435476" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Regular Expression to NFA Converter (Thompson Construction)" FOLDED="true" ID="ID_426918455" CREATED="1566553719126" MODIFIED="1566553719126" LINK="http://hackingoff.com/compilers/regular-expression-to-nfa-dfa">
<node TEXT="Regular Expression to NFA (Non-Deterministic Finite Automata) Visualize the Thompson-McNaughton-Yamada construction NFA for a given regular expression. The subset construction algorithm is also applied to the resultant NFA resulting in a language-equivalent deterministic finite-state automata (DFA)." ID="ID_1243812120" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Regular Expression to DFA - ProjectsGeek" FOLDED="true" ID="ID_1085503558" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://projectsgeek.com/2011/06/regular-expression-to-dfa.html">
<node TEXT="One can specify all token types using regular expressions. These regular expressions are then converted to DFA&#xe2;&#x20ac;&#x2122;s in the form of DFA transition table. Lexical analyzer reads a character from a source program and based on the current state and current symbol read makes a transition to some other state." ID="ID_931512416" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="FSM2Regex - ivanzuzak.info" FOLDED="true" ID="ID_1264834268" CREATED="1566553719126" MODIFIED="1566553719126" LINK="http://ivanzuzak.info/noam/webapps/fsm2regex/">
<node TEXT="Regexper - A Web app that displays regular expressions as railroad diagrams. Grammophone - A Web app for analyzing and transforming context-free grammars e.g. for generating strings from a grammar and computing SLR/LR/LALR parsing tables. Debuggex - A Web app that is a visual regular expression debugger tester and helper." ID="ID_1101941391" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="FSM Simulator - ivanzuzak.info" FOLDED="true" ID="ID_1481369222" CREATED="1566553719126" MODIFIED="1566553719126" LINK="http://ivanzuzak.info/noam/webapps/fsm_simulator/">
<node TEXT="Regexper - A Web app that displays regular expressions as railroad diagrams. Grammophone - A Web app for analyzing and transforming context-free grammars e.g. for generating strings from a grammar and computing SLR/LR/LALR parsing tables. Debuggex - A Web app that is a visual regular expression debugger tester and helper." ID="ID_54863828" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Regular-Expressions.info - Regex Tutorial Examples and " FOLDED="true" ID="ID_1301984991" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://www.regular-expressions.info/">
<node TEXT="Regular Expressions Quick Start. If you just want to get your feet wet with regular expressions take a look at the one-page regular expressions quick start.While you cant learn to efficiently use regular expressions from this brief overview its enough to be able to throw together a bunch of simple regular expressions." ID="ID_1259586407" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Visual and Interactive Tools - users.cs.duke.edu" FOLDED="true" ID="ID_1716290560" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://users.cs.duke.edu/~rodger/tools/">
<node TEXT="Visual and Interactive Tools . Susan H. Rodger.  New features in 3.1 include regular expressions including conversions of regular expressions to NFA and DFA to regular expressions. New features from 3.0 include several conversions from one representation to another. The conversions are nondeterministic finite automaton (NFA) to " ID="ID_768521153" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
</node>
<node TEXT="Regular Expressions to DFA Conversions Code#$D$#" FOLDED="true" ID="ID_785421848" CREATED="1566553719126" MODIFIED="1566553719126">
<icon BUILTIN="stop-sign"/>
<node TEXT="From DFA to C Code - YouTube" FOLDED="true" ID="ID_208080520" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://www.youtube.com/watch?v=MAQUNynQu_E">
<node TEXT="An example code on converting DFA to C code. Java Project For Beginners Step By Step Using NetBeans And MySQL Database In One Video [ With Code ] - Duration: 2:30:28. 1BestCsharp blog 6143433 views" ID="ID_1530022852" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Convert Regular Expression to DFA - YouTube" FOLDED="true" ID="ID_582885947" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://www.youtube.com/watch?v=dlH2pIndNrU">
<node TEXT="This is a complete worked example of converting a regular expression to a DFA. Watch the related videos for more details about the individual steps." ID="ID_1604753756" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Regular Expression to DFA Code in C Language - ProjectsGeek" FOLDED="true" ID="ID_1087286426" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://projectsgeek.com/2011/05/regular-expression-to-dfa-code-in-c-language.html">
<node TEXT="Regular Expression to DFA Code in C Language May 4 2011 by ProjectsGeek Leave a Comment Regular Expression to DFA ( To be taken from compiler point of view) .The implementation to be done as per the algorithm covered in the book Compiler Design and Principles." ID="ID_1391742216" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="REGULAR EXPRESSION to DFA CONVERSION with a PROGRAM - YouTube" FOLDED="true" ID="ID_420511608" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://www.youtube.com/watch?v=iDBin6BzqUY">
<node TEXT="Its a simple demonstration of a program which converts regular expressions to corresponding minimized DFAs and gives transition table with transition diagram as outputs." ID="ID_1730816825" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="DFA to Regular Expression | Examples | Gate Vidyalay" FOLDED="true" ID="ID_217039043" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://www.gatevidyalay.com/dfa-to-regular-expression-examples-automata/">
<node TEXT="DFA to Regular Expression- The methods to convert DFA to regular expression are- Ardens Method and State Elimination Method. Convert DFA to a Regular Expression Using State Elimination Method. DFA to Regular Expression Conversion Exercises." ID="ID_481334240" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="GitHub - ckshitij/RE_TO_DFA: code of RE" FOLDED="true" ID="ID_625988620" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://github.com/ckshitij/RE_TO_DFA">
<node TEXT="CONVERSION OF RE TO DFA. Regular expression is used to represent the language (lexeme) of finite automata (lexical analyzer). Regular expressions are used to specify regular languages and finite automata are used to recognize the regular languages." ID="ID_1632157020" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Conversion of Regular Expression to Finite Automata " FOLDED="true" ID="ID_1068200124" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://www.youtube.com/watch?v=62JAy4oH6lU">
<node TEXT="TOC: Conversion of Regular Expression to Finite Automata - Examples (Part 1) This lecture shows how to convert Regular Expressions to their equivalent Finite" ID="ID_1151597032" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Converting from regex (postfix) to epsilon nfa simple code " FOLDED="true" ID="ID_1486309124" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://stackoverflow.com/questions/29980297/converting-from-regex-postfix-to-epsilon-nfa-simple-code-or-pseudo-code">
<node TEXT="I have a regular expression in postfix form and I have to convert it to epsilon-NFA. I have read a lot of codes but it was complex hard and I couldnt understand. My question is there an express simple code(c# c++) to do this or even a pseudo code could helps me?" ID="ID_863366006" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Convert Regular Expression to DFA - Compiler Design" FOLDED="true" ID="ID_47175376" CREATED="1566553719126" MODIFIED="1566553719126" LINK="http://ecomputernotes.com/compiler-design/convert-regular-expression-to-dfa">
<node TEXT="&#xe2;&#x20ac;&#xa2; Direct method is used to convert given regular expression directly into DFA. &#xe2;&#x20ac;&#xa2; Uses augmented regular expression r#. &#xe2;&#x20ac;&#xa2; Important states of NFA correspond to positions in regular expression that hold symbols of the alphabet." ID="ID_1062152852" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Regular Expression to DFA - ProjectsGeek" FOLDED="true" ID="ID_394499597" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://projectsgeek.com/2011/06/regular-expression-to-dfa.html">
<node TEXT="Accept the given regular expression with end of character as # Covert the regular expressions to its equivalent postfix form manually. ( students need not write the code for converting infix to postfix but they can directly accept postfix form of the infix expression) Construct a syntax tree from the postfix expression obtained in step 2." ID="ID_1582332742" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="Download Regular Expression To Dfa Conversion C Code " FOLDED="true" ID="ID_1895426297" CREATED="1566553719126" MODIFIED="1566553719126" LINK="http://www.sourcecodeonline.com/list?q=regular_expression_to_dfa_conversion_c_code">
<node TEXT="Regular Expression To Dfa Conversion C Code Acre Conversion - Ad Blocker Code - Add Code Tgp - Adios Java Code - Aim Smiles Code - Aliveglow Code - American Power Conversion Code 1-20 of 60 Pages: Go to 1 2 3 Next  page" ID="ID_1255524664" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
<node TEXT="GitHub - felipemoura/RegularExpression-to-NFA-to-DFA" FOLDED="true" ID="ID_441859694" CREATED="1566553719126" MODIFIED="1566553719126" LINK="https://github.com/felipemoura/RegularExpression-to-NFA-to-DFA">
<node TEXT="README.txt @author Felipe Moreira Moura @NUID 59797811 @course Computer Engineering @class CSCE 428 - Project 01: Regular Expression Files: * MakeFile * Java classes * NFA.java * DFA.java * State.java * RegularExpression.java * ExpressionReader.java * ValidateExpression.java Compiling: * To compile it just use make it will compile all java files with javac." ID="ID_500195184" CREATED="1566553719126" MODIFIED="1566553719126"/>
</node>
</node>
<node TEXT="DFA to Regular Expressions Conversions Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1370313641" CREATED="1566553719127" MODIFIED="1566553719127">
<icon BUILTIN="stop-sign"/>
<node TEXT="DFA to Regular Expression Conversion - YouTube" FOLDED="true" ID="ID_1049221473" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://www.youtube.com/watch?v=SmT1DXLl3f4">
<node TEXT="Theory Of Computation Lecture 63--Conversion of Finite automata to Regular Expression and vice versa - Duration: 42:50. Gate Lectures by Ravindrababu Ravula 368634 views 42:50" ID="ID_1855158917" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="Conversion of Regular Expression to Finite Automata " FOLDED="true" ID="ID_731528370" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://www.youtube.com/watch?v=62JAy4oH6lU">
<node TEXT="TOC: Conversion of Regular Expression to Finite Automata - Examples (Part 1) This lecture shows how to convert Regular Expressions to their equivalent Finite" ID="ID_1457388766" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="NFA to Regular Expression Conversion - YouTube" FOLDED="true" ID="ID_14265410" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://www.youtube.com/watch?v=OKFrju0HB7k">
<node TEXT="TOC: NFA to Regular Expression Conversion Topics Discussed: 1) NFA to Regular Expression conversion 2) NFA to Regular Expression conversion example Contribut" ID="ID_807088941" CREATED="1566553719127" MODIFIED="1566553719127"/>
</node>
<node TEXT="DFA to Regular Expression Conversion (when the DFA has " FOLDED="true" ID="ID_658891650" CREATED="1566553719127" MODIFIED="1566553719127" LINK="https://www.youtube.com/watch?v=fRVljh8y7Qw">
<node TEXT="TOC: DFA to Regular Expression Conversion (when the DFA has Multiple Final States) This lecture shows how to design the Regular Expression for a given DFA when the DFA has Multiple Final States " ID="ID_1618977291" CREATED="1566553719145" MODIFIED="1566553719145"/>
</node>
<node TEXT="GitHub - cyanmoon/Re2NFA_DFA_Visualization: Regular " FOLDED="true" ID="ID_1324335886" CREATED="1566553719145" MODIFIED="1566553719145" LINK="https://github.com/cyanmoon/Re2NFA_DFA_Visualization">
<node TEXT="Regular expression to NFA DFA Minimum DFA and visualization of NFA DFA Minimum DFA. - cyanmoon/Re2NFA_DFA_Visualization" ID="ID_762438842" CREATED="1566553719145" MODIFIED="1566553719145"/>
</node>
<node TEXT="Convert simple regular expressions to deterministic finite " FOLDED="true" ID="ID_143266477" CREATED="1566553719145" MODIFIED="1566553719145" LINK="https://cyberzhg.github.io/toolbox/nfa2dfa">
<node TEXT="Convert simple regular expressions to deterministic finite automaton. (Regex = NFA = DFA)" ID="ID_1864543511" CREATED="1566553719145" MODIFIED="1566553719145"/>
</node>
<node TEXT="Regular Expression to NFA (Non-Deterministic Finite Automata)" FOLDED="true" ID="ID_496034427" CREATED="1566553719145" MODIFIED="1566553719145" LINK="http://hackingoff.com/compilers/regular-expression-to-nfa-dfa">
<node TEXT="Regular Expression to NFA (Non-Deterministic Finite Automata) Visualize the Thompson-McNaughton-Yamada construction NFA for a given regular expression. The subset construction algorithm is also applied to the resultant NFA resulting in a language-equivalent deterministic finite-state automata (DFA)." ID="ID_1589682944" CREATED="1566553719145" MODIFIED="1566553719145"/>
</node>
<node TEXT="Visual and Interactive Tools - users.cs.duke.edu" FOLDED="true" ID="ID_1854065357" CREATED="1566553719145" MODIFIED="1566553719145" LINK="https://users.cs.duke.edu/~rodger/tools/">
<node TEXT="Visual and Interactive Tools . Susan H. Rodger.  New features in 3.1 include regular expressions including conversions of regular expressions to NFA and DFA to regular expressions. New features from 3.0 include several conversions from one representation to another. The conversions are nondeterministic finite automaton (NFA) to " ID="ID_516556137" CREATED="1566553719145" MODIFIED="1566553719145"/>
</node>
<node TEXT="regex - Convert a NFA to Regular Expression - Stack Overflow" FOLDED="true" ID="ID_506117440" CREATED="1566553719145" MODIFIED="1566553719145" LINK="https://stackoverflow.com/questions/20061252/convert-a-nfa-to-regular-expression">
<node TEXT="I found a same question on this website and the answer was a PDF describing how to convert an NFA to a regex.But this is not working because this method has some conditions: There are transitions going from the initial state to all other states and there are no transitions into the initial state." ID="ID_494529963" CREATED="1566553719145" MODIFIED="1566553719145"/>
</node>
<node TEXT="FSM Simulator - ivanzuzak.info" FOLDED="true" ID="ID_1435805631" CREATED="1566553719145" MODIFIED="1566553719145" LINK="http://ivanzuzak.info/noam/webapps/fsm_simulator/">
<node TEXT="Enter a regular expression into the input field below or click Generate random regex to have the app generate a simple regex randomly for you. Next click Create automaton to create a FSM for the defined regex and display its transition graph.. A valid regex consists of alphanumeric characters representing the set of input symbols (e.g. a B 9) the $ character representing the empty string " ID="ID_1311494543" CREATED="1566553719145" MODIFIED="1566553719145"/>
</node>
<node TEXT="RegExpert : A Tool for Visualization of Regular Expressions" FOLDED="true" ID="ID_1489719404" CREATED="1566553719145" MODIFIED="1566553719145" LINK="https://bib.irb.hr/datoteka/330746.RegExpert-A_tool_for_visualization_of_Regular_Expressions.pdf">
<node TEXT="another such as converting an NFA to a DFA to a minimal state DFA to a regular expression or regular grammar. RegExpert is not the first e-learning tool developed at the University of Zagreb. Prior to RegExpert  we have developed Automata Simulator [9] and SoftLab [10] both applicable in the field of automata theory fundamentals." ID="ID_1324430637" CREATED="1566553719145" MODIFIED="1566553719145"/>
</node>
<node TEXT="GitHub - Jack-Q/reg2dfa: Regular expression to DFA with " FOLDED="true" ID="ID_369707226" CREATED="1566553719145" MODIFIED="1566553719145" LINK="https://github.com/Jack-Q/reg2dfa">
<node TEXT="Regular expression to DFA with DOT format output for visualization - Jack-Q/reg2dfa. Regular expression to DFA with DOT format output for visualization - Jack-Q/reg2dfa  REG 2 DFA. Convert regular expression to NFA DFA and minimal DFA and check the result visually. Example. regular expression:" ID="ID_629307511" CREATED="1566553719145" MODIFIED="1566553719145"/>
</node>
</node>
<node TEXT="DFA to Regular Expressions Conversions Code#$D$#" FOLDED="true" ID="ID_843387910" CREATED="1566553719145" MODIFIED="1566553719145">
<icon BUILTIN="stop-sign"/>
<node TEXT="GitHub - ckshitij/RE_TO_DFA: code of RE" FOLDED="true" ID="ID_829498987" CREATED="1566553719145" MODIFIED="1566553719145" LINK="https://github.com/ckshitij/RE_TO_DFA">
<node TEXT="CONVERSION OF RE TO DFA. Regular expression is used to represent the language (lexeme) of finite automata (lexical analyzer). Regular expressions are used to specify regular languages and finite automata are used to recognize the regular languages." ID="ID_1033892607" CREATED="1566553719145" MODIFIED="1566553719145"/>
</node>
<node TEXT="Regular Expression to DFA Code in C Language - ProjectsGeek" FOLDED="true" ID="ID_220906259" CREATED="1566553719146" MODIFIED="1566553719146" LINK="https://projectsgeek.com/2011/05/regular-expression-to-dfa-code-in-c-language.html">
<node TEXT="Regular Expression to DFA Code in C Language May 4 2011 by ProjectsGeek Leave a Comment Regular Expression to DFA ( To be taken from compiler point of view) .The implementation to be done as per the algorithm covered in the book Compiler Design and Principles." ID="ID_881429347" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="Convert Regular Expression to DFA - YouTube" FOLDED="true" ID="ID_175530312" CREATED="1566553719146" MODIFIED="1566553719146" LINK="https://www.youtube.com/watch?v=dlH2pIndNrU">
<node TEXT="This is a complete worked example of converting a regular expression to a DFA. Watch the related videos for more details about the individual steps." ID="ID_862811430" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="DFA to Regular Expression Conversion - YouTube" FOLDED="true" ID="ID_769878312" CREATED="1566553719146" MODIFIED="1566553719146" LINK="https://www.youtube.com/watch?v=SmT1DXLl3f4">
<node TEXT="Theory Of Computation Lecture 63--Conversion of Finite automata to Regular Expression and vice versa - Duration: 42:50. Gate Lectures by Ravindrababu Ravula 368634 views 42:50" ID="ID_616517447" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="Conversion of Regular Expression to Finite Automata " FOLDED="true" ID="ID_384042301" CREATED="1566553719146" MODIFIED="1566553719146" LINK="https://www.youtube.com/watch?v=62JAy4oH6lU">
<node TEXT="TOC: Conversion of Regular Expression to Finite Automata - Examples (Part 1) This lecture shows how to convert Regular Expressions to their equivalent Finite" ID="ID_393168566" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="NFA to Regular Expression Conversion - YouTube" FOLDED="true" ID="ID_755091724" CREATED="1566553719146" MODIFIED="1566553719146" LINK="https://www.youtube.com/watch?v=OKFrju0HB7k">
<node TEXT="TOC: NFA to Regular Expression Conversion Topics Discussed: 1) NFA to Regular Expression conversion 2) NFA to Regular Expression conversion example Contribut" ID="ID_143093575" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="Convert Regular Expression to DFA - Compiler Design" FOLDED="true" ID="ID_517913873" CREATED="1566553719146" MODIFIED="1566553719146" LINK="http://ecomputernotes.com/compiler-design/convert-regular-expression-to-dfa">
<node TEXT="&#xe2;&#x20ac;&#xa2; Direct method is used to convert given regular expression directly into DFA. &#xe2;&#x20ac;&#xa2; Uses augmented regular expression r#. &#xe2;&#x20ac;&#xa2; Important states of NFA correspond to positions in regular expression that hold symbols of the alphabet." ID="ID_787886004" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="Regular Expression to DFA - ProjectsGeek" FOLDED="true" ID="ID_460196842" CREATED="1566553719146" MODIFIED="1566553719146" LINK="https://projectsgeek.com/2011/06/regular-expression-to-dfa.html">
<node TEXT="One can specify all token types using regular expressions. These regular expressions are then converted to DFA&#xe2;&#x20ac;&#x2122;s in the form of DFA transition table. Lexical analyzer reads a character from a source program and based on the current state and current symbol read makes a transition to some other state." ID="ID_1980385712" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="FSM2Regex - ivanzuzak.info" FOLDED="true" ID="ID_99409008" CREATED="1566553719146" MODIFIED="1566553719146" LINK="http://ivanzuzak.info/noam/webapps/fsm2regex/">
<node TEXT="Enter a FSM below and the application will convert and show the equivalent regular expression. Alternately enter a regular expression and the application will convert and show the equivalent FSM. Input automaton . Enter a FSM into the input field below or click Generate random DFA/NFA/eNFA to have the app generate a simple FSM randomly for you." ID="ID_244251211" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="Convert simple regular expressions to deterministic finite " FOLDED="true" ID="ID_528122819" CREATED="1566553719146" MODIFIED="1566553719146" LINK="https://cyberzhg.github.io/toolbox/nfa2dfa">
<node TEXT="Convert simple regular expressions to deterministic finite automaton. (Regex = NFA = DFA)" ID="ID_1681009815" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="GitHub - hokein/Automata.js: A regular expression converter" FOLDED="true" ID="ID_1499571824" CREATED="1566553719146" MODIFIED="1566553719146" LINK="https://github.com/hokein/Automata.js/">
<node TEXT="Automata.js is a regular expression converter written in JS for both Node.js and browser. It aims to convert regular expression to finite state machine(FSM like NFA). Besides dot script transition is provided so that you can make diagrams with Graphiz. Try it online! Development" ID="ID_1629371619" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="Download Regular Expression To Dfa Conversion C Code " FOLDED="true" ID="ID_1392625595" CREATED="1566553719146" MODIFIED="1566553719146" LINK="http://www.sourcecodeonline.com/list?q=regular_expression_to_dfa_conversion_c_code">
<node TEXT="Regular Expression To Dfa Conversion C Code Acre Conversion - Ad Blocker Code - Add Code Tgp - Adios Java Code - Aim Smiles Code - Aliveglow Code - American Power Conversion Code 1-20 of 60 Pages: Go to 1 2 3 Next  page" ID="ID_347372982" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
</node>
</node>
<node TEXT="RE to DFA" ID="ID_368329813" CREATED="1566881027610" MODIFIED="1566881027610" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
</node>
<node TEXT="DFA to RE Conversions" ID="ID_93423034" CREATED="1566881027610" MODIFIED="1566881027610" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="State/loop elimination" ID="ID_1736368505" CREATED="1566881027610" MODIFIED="1566881027610" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="State/loop elimination Interactive Visualisation#$D$#" FOLDED="true" ID="ID_410211889" CREATED="1566553719146" MODIFIED="1566553719146">
<icon BUILTIN="stop-sign"/>
<node TEXT="Python Data Visualization using Bokeh for algo traders and " FOLDED="true" ID="ID_222090217" CREATED="1566553719146" MODIFIED="1566553719146" LINK="https://blog.quantinsti.com/python-data-visualization-using-bokeh/">
<node TEXT="Some of the popular packages include Matplotlib Bokeh Plotly and Seaborn. In this blog post we will explore Bokeh which is a Python interactive visualization library that uses modern web browsers for presentation. Using Bokeh one can quickly and easily create interactive plots dashboards and data applications. Bokeh for Python Data " ID="ID_1896532396" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="Arizona DOT LOOP 202 South Mountain Freeway project - YouTube" FOLDED="true" ID="ID_1011129670" CREATED="1566553719146" MODIFIED="1566553719146" LINK="https://www.youtube.com/watch?v=YncYHNqiDj4">
<node TEXT="Arizona DOT LOOP 202 South Mountain Freeway project.  The interactive transcript could not be loaded.  North Houston Highway Improvement Project 3D Visualization of the Proposed Recommended " ID="ID_1454296485" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="Fusion: Interactive Coordination of Diverse Data " FOLDED="true" ID="ID_789834117" CREATED="1566553719146" MODIFIED="1566553719146" LINK="http://infovis.cs.vt.edu/oldsite/papers/CHI03-Fusion.pdf">
<node TEXT="Fusion integrates diverse data visualizations and mining algorithms to enable user-customized visualization workspaces. It supports the use of diverse visualizations produced both in-house and by third party developers and can publish workspaces on the web. Data schemas enable users to associate related data from different sources." ID="ID_1451667081" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="Loop 9 Transportation Study" FOLDED="true" ID="ID_471789547" CREATED="1566553719146" MODIFIED="1566553719146" LINK="http://www.loop9.org/">
<node TEXT="To address these transportation concerns a new direction was identified for the Loop 9 Southeast project. TxDOT and NCTCOG in cooperation with local government officials worked together to prepare a Corridor/Feasibility Study for the Loop 9 Southeast study area from US 67 to I-20 (more information about the Corridor/Feasibility Study)." ID="ID_1090683212" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="Data Visualization with Bokeh in Python Part III: Making " FOLDED="true" ID="ID_1480980426" CREATED="1566553719146" MODIFIED="1566553719146" LINK="https://towardsdatascience.com/data-visualization-with-bokeh-in-python-part-iii-a-complete-dashboard-dc6a86aa6e23">
<node TEXT="Creating an interactive visualization application in Bokeh. Sometimes I learn a data science technique to solve a specific problem. Other times as with Bokeh I try out a new tool because I see some cool projects on Twitter and think: &#xe2;&#x20ac;&#x153;That looks pretty neat." ID="ID_286181968" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="Elimination of Thermodynamically Infeasible Loops in " FOLDED="true" ID="ID_1451114784" CREATED="1566553719146" MODIFIED="1566553719146" LINK="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3030201/">
<node TEXT="Elimination of Thermodynamically Infeasible Loops in Steady-State Metabolic Models  One shortcoming of current COBRA methods is the possible violation of the loop law in the computed steady-state flux solutions. The loop law is analogous to Kirchhoffs second law for electric circuits and states that at steady state there can be no net flux " ID="ID_1456847709" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="Interactive Data Reports - djj.state.fl.us" FOLDED="true" ID="ID_1092740914" CREATED="1566553719146" MODIFIED="1566553719146" LINK="http://www.djj.state.fl.us/research/reports/reports-and-data/interactive-data-reports">
<node TEXT="Become A Partner. The vision of the Faith Community Network and Volunteer Chaplaincy Services program is to provide a full range of programs and services that will turn around the lives of troubled youth and ensure that voluntary chaplaincy services are available to youth and their families during times of family crisis." ID="ID_772074007" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="Perform Data Visualization in Python by 9 Popular Ways" FOLDED="true" ID="ID_1207814673" CREATED="1566553719146" MODIFIED="1566553719146" LINK="https://www.analyticsvidhya.com/blog/2015/05/data-visualization-python/">
<node TEXT="9 popular ways to perform Data Visualization in Python. Sunil Ray May 17 2015 .  It is useful in producing publication quality figures in interactive environment across platforms. It can also be used for animations as well. To know more about this library check this link." ID="ID_617255814" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="Interactive visual analysis - Wikipedia" FOLDED="true" ID="ID_1805937046" CREATED="1566553719146" MODIFIED="1566553719146" LINK="https://en.wikipedia.org/wiki/Interactive_visual_analysis">
<node TEXT="Interactive Visual Analysis (IVA) is a set of techniques for combining the computational power of computers with the perceptive and cognitive capabilities of humans in order to extract knowledge from large and complex datasets.The techniques rely heavily on user interaction and the human visual system and exist in the intersection between visual analytics and big data." ID="ID_1164693824" CREATED="1566553719146" MODIFIED="1566553719146"/>
</node>
<node TEXT="Maxime Chamberland - YouTube" FOLDED="true" ID="ID_321017582" CREATED="1566553719146" MODIFIED="1566553719146" LINK="https://www.youtube.com/user/Whitest4r/videos">
<node TEXT="Hi! Im a research fellow currently living in the UK (originally from Canada) with interests in neuroimaging machine learning data science and visualization." ID="ID_1256601606" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="Anteater: Interactive Visualization for Program Understanding" FOLDED="true" ID="ID_1111251940" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://arxiv.org/pdf/1907.02872">
<node TEXT="In this paper we present Anteater an interactive visualization system for tracing and exploring the execution of a program. While existing debugging tools often have visualization components these components are often added on top of an existing environment. In Anteater in contrast visualization is a driving concern. We" ID="ID_293678497" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="Interactive Data Visualization in Python With Bokeh &#xe2;&#x20ac;&#x201c; Real " FOLDED="true" ID="ID_1233697892" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://realpython.com/python-data-visualization-bokeh/">
<node TEXT="Bokeh prides itself on being a library for interactive data visualization. Unlike popular counterparts in the Python visualization space like Matplotlib and Seaborn Bokeh renders its graphics using HTML and JavaScript. This makes it a great candidate for building web-based dashboards and " ID="ID_1823783194" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
</node>
<node TEXT="State/loop elimination Code#$D$#" FOLDED="true" ID="ID_828287470" CREATED="1566553719147" MODIFIED="1566553719147">
<icon BUILTIN="stop-sign"/>
<node TEXT="regex - DFA - RE using State Elimination - Stack Overflow" FOLDED="true" ID="ID_1046940671" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://stackoverflow.com/questions/17015059/dfa-re-using-state-elimination">
<node TEXT="DFA - RE using State Elimination [closed] Ask Question 2. 1.  But if youre just a script monkey plugging code fragments into a framework then you wouldnt know that. Sorry for the snarkiness but someone has to stand up for real software design. &#xe2;&#x20ac;&#x201c; ThomasMcLeod Aug 12 15 at 2:58." ID="ID_1020233764" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="Gauss Elimination - Simple MATLAB CODE/ PROGRAMMING - YouTube" FOLDED="true" ID="ID_776021994" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://www.youtube.com/watch?v=juDxSMpzv6c">
<node TEXT="In this Method You will able to understand the MATLAB Code for Gauss Elimination. Skip navigation  Gauss Elimination - Simple MATLAB CODE/ PROGRAMMING  Gauss Elimination and Back " ID="ID_1551053530" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="Gaussian elimination - Rosetta Code" FOLDED="true" ID="ID_862935796" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://rosettacode.org/wiki/Gaussian_elimination">
<node TEXT="Task. Solve Ax=b using Gaussian elimination then backwards substitution. A being an n by n matrix.. Also x and b are n by 1 vectors. To improve accuracy please use partial pivoting and scaling. See also the Wikipedia entry: Gaussian elimination" ID="ID_1134853182" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="python - Gaussian Elimination with Pivots - Code Review " FOLDED="true" ID="ID_883906904" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://codereview.stackexchange.com/questions/194761/gaussian-elimination-with-pivots">
<node TEXT="Im pretty new to python and coding in general. For practice Ive written the following code which uses Gaussian reduction to solve a system of linear equations. import numpy as np def gaussian_reduce(matrix b):  Solve a system of linear equations matrix*X = b using Gaussian elimination." ID="ID_522535255" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="hi am working on a code for gaussian elimination - MATLAB " FOLDED="true" ID="ID_871186144" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://www.mathworks.com/matlabcentral/answers/130593-hi-am-working-on-a-code-for-gaussian-elimination">
<node TEXT="hi am working on a code for gaussian elimination but I cant get the code to run for non square matrix please what should I do Here is the code and thanks in advance. function [xU] = gausselim(Ab) % function to perform gauss eliminination  Reload the page to see its updated state." ID="ID_840411508" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="Elimination of Thermodynamically Infeasible Loops in " FOLDED="true" ID="ID_1334266453" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3030201/">
<node TEXT="Elimination of Thermodynamically Infeasible Loops in Steady-State Metabolic Models  One shortcoming of current COBRA methods is the possible violation of the loop law in the computed steady-state flux solutions. The loop law is analogous to Kirchhoffs second law for electric circuits and states that at steady state there can be no net flux " ID="ID_151191333" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="Matlab Programming Gauss elimination Method - YouTube" FOLDED="true" ID="ID_1390167838" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://www.youtube.com/watch?v=h1V1hF1eg5w">
<node TEXT="This video shows the Matlab Coding for Gauss Elimination method. Skip navigation Sign in. Search.  Matlab Programming Gauss elimination Method Anup Patil.  How do computers read code? " ID="ID_1600904940" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="for loop - undestanding c program gauss-jordan elimination " FOLDED="true" ID="ID_952220116" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://stackoverflow.com/questions/40756368/undestanding-c-program-gauss-jordan-elimination">
<node TEXT="i know i sound stupid but i really need to understand the gauss-jordan elimination c program. i already try to understand the coding but its still confusing for to read the code line by line.Especially the for(j=1; j=n; j++) loop." ID="ID_1582058328" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="Verification Code Terms and Conditions &#xc2;&#xad;&#xc2;&#xad;- State Farm " FOLDED="true" ID="ID_651332217" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://www.statefarm.com/customer-care/faqs/sms-texting/verification-code">
<node TEXT="State Farm &#xc2;&#xae; Verification Code Terms  Conditions - 96557. State Farm verification code is a standard-rate SMS (Short Messaging Service) program which provides statefarm.com users with an on-demand unique verification code sent via text message to a customer&#xe2;&#x20ac;&#x2122;s mobile phone. If you have any questions or concerns about sending and/or receiving SMS messages please use our company information " ID="ID_1733168478" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="ZIP Code&#xe2;&#x201e;&#xa2; Lookup | USPS" FOLDED="true" ID="ID_1402688476" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://tools.usps.com/go/ZipLookupAction!input.action">
<node TEXT="Cities by ZIP Code&#xe2;&#x201e;&#xa2; For more rapid delivery please use the recommended or recognized city names whenever possible for this ZIP Code &#xe2;&#x201e;&#xa2;." ID="ID_75343486" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="Fourier Motzkin Elimination - Colorado State University" FOLDED="true" ID="ID_1167804780" CREATED="1566553719147" MODIFIED="1566553719147" LINK="http://www.cs.colostate.edu/~cs560/Spring2012/ClassNotes/lecture24-fourier-motzkin.ppt.pdf">
<node TEXT="&#xe2;&#x20ac;&#x201c; Using Fourier-Motzkin elimination for code generation &#xe2;&#x20ac;&#x201c; Using Fourier-Motzkin elimination for determining schedule constraints Why Transformation Frameworks? Currently &#xe2;&#x20ac;&#x201c; Frameworks used in compiler to &#xe2;&#x20ac;&#xa6; &#xe2;&#x20ac;&#x201c; abstract loops memory accesses and data dependences in loop &#xe2;&#x20ac;&#x201c; specify the effect of a sequence of loop transformations on the " ID="ID_445295924" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="Gaussian Elimination - Department of Computer Science" FOLDED="true" ID="ID_1444637299" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://www.cs.rutgers.edu/~venugopa/parallel_summer2012/ge.html">
<node TEXT="Explanation: The above code is for forward elimination section of gaussian elimination.The matrix A and vector B are looped through and each equation is then set as a pivot. This pivot is then sent to each process as are the remaining pivot +1 to n equations. Process 0 is the master it hhandles many aspects of the communication." ID="ID_1756054304" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
</node>
</node>
</node>
<node TEXT="Ardens theorem Properties of Regular Languages" ID="ID_1075236278" CREATED="1566881027612" MODIFIED="1566881027612" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Pumping Lemma for Regular languages" ID="ID_971326495" CREATED="1566881027612" MODIFIED="1566881027612" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Regular Expressions Interactive Visualisation#$D$#" FOLDED="true" ID="ID_204529687" CREATED="1566553719121" MODIFIED="1566553719121">
<icon BUILTIN="stop-sign"/>
<node TEXT="Regexper" FOLDED="true" ID="ID_939439961" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://regexper.com/">
<node TEXT="Regular expression visualizer using railroad diagrams. You thought you only had two problems&#xe2;&#x20ac;&#xa6;" ID="ID_1454484538" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="Debuggex: Online visual regex tester. JavaScript Python " FOLDED="true" ID="ID_724221318" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://www.debuggex.com/">
<node TEXT="Expected Matches (hover over highlights for details) Actual Matches Edit Passing ; Enter a string to be tested. If all highlighted matches and subgroups look correct click This is right." ID="ID_735162118" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="RegexOne - Learn Regular Expressions - Lesson 1: An " FOLDED="true" ID="ID_492887793" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://regexone.com/">
<node TEXT="Regular expressions are extremely useful in extracting information from text such as code log files spreadsheets or even documents. And while there is a lot of theory behind formal languages the following lessons and examples will explore the more practical uses of regular expressions so that you can use them as quickly as possible." ID="ID_1776417324" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="Regulex JavaScript Regular Expression Visualizer." FOLDED="true" ID="ID_1455443810" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://jex.im/regulex/#!flags=re=%5E(a%7Cb)*%3F%24">
<node TEXT="Regulex JavaScript Regular Expression Visualizer. / / Visualize Export Image Embed On My Site! IgnoreCase Multiline GlobalMatch. Created with Rapha&#xc3;&#xab;l 2.1.2 XgfTlM|.q XgfTlM|.q RegExp: / ^ (a | b) *? $ / Begin! 0 or more times a b Group #1 End! Created by Jex." ID="ID_5187705" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="Regular Expressions in Python | DataCamp" FOLDED="true" ID="ID_578613943" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://www.datacamp.com/courses/regular-expressions-in-python">
<node TEXT="Time to discover the fundamental concepts of regular expressions! In this key chapter you will learn to understand the basic concepts of regular expression syntax. Using a real dataset with tweets meant for sentiment analysis you will learn how to apply pattern matching using normal and special characters and greedy and lazy quantifiers." ID="ID_808921652" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="Web Scraping Regular Expressions and Data Visualization " FOLDED="true" ID="ID_490300866" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://towardsdatascience.com/web-scraping-regular-expressions-and-data-visualization-doing-it-all-in-python-37a1aade7924">
<node TEXT="Regular expressions come up all the time when parsing string information and are a vital tool to learn at least at a basic level!  Visualization. This project is indicative of data science because the majority of time was spent collecting and formatting the data. However now that we have a clean dataset we get to make some plots!" ID="ID_450173013" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="Visualizing Regular Expressions: regexper.com - Medium" FOLDED="true" ID="ID_10455639" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://medium.com/@yumenohosi/visualizing-regular-expressions-regexper-com-dade9ae3f0ab">
<node TEXT="Visualizing Regular Expressions: regexper.com.  Visualizations such as these are important especially during code review or when trying to explain your logic to colleagues. Regular expressions " ID="ID_381292090" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="RegExr: Learn Build  Test RegEx" FOLDED="true" ID="ID_1419124006" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://regexr.com/">
<node TEXT="Regular expression tester with syntax highlighting PHP / PCRE  JS Support contextual help cheat sheet reference and searchable community patterns. RegExr is an online tool to learn build  test Regular Expressions (RegEx / RegExp)." ID="ID_768855180" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="Regex Cheat Sheet: A Quick Guide to Regular Expressions in " FOLDED="true" ID="ID_558333980" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://www.dataquest.io/blog/regex-cheatsheet/">
<node TEXT="The tough thing about learning data science is remembering all the syntax. While at Dataquest we advocate getting used to consulting the Python documentation sometimes it&#xe2;&#x20ac;&#x2122;s nice to have a handy PDF reference so we&#xe2;&#x20ac;&#x2122;ve put together this Python regular expressions (regex) cheat sheet to help you out!. This regex cheat sheet is based on Python 3&#xe2;&#x20ac;&#x2122;s documentation on regular expressions." ID="ID_614560740" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="GitHub - cuttlefishh/python-for-data-analysis: An " FOLDED="true" ID="ID_829828969" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://github.com/cuttlefishh/python-for-data-analysis">
<node TEXT="Course in data science. Learn to analyze data of all types using the Python programming language. No programming experience is necessary. Practice every day. Dont over-do it. Slow and steady wins the race. Its alright to be totally lost at first. When you get stuck get more information. Try to " ID="ID_704934705" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="REGEX Generator" FOLDED="true" ID="ID_780699207" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://www.regex-generator.com/">
<node TEXT="Regular Expression Generator. Copyright &#xc2;&#xa9; 2013-2018 SEQREL GmbH. All rights reserved. - Impressum (Legal notice) - Terms of Use of the Website - Privacy " ID="ID_1115379773" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="Regular-Expressions.info - Regex Tutorial Examples and " FOLDED="true" ID="ID_1826186699" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://www.regular-expressions.info/">
<node TEXT="Regular Expressions Quick Start. If you just want to get your feet wet with regular expressions take a look at the one-page regular expressions quick start.While you cant learn to efficiently use regular expressions from this brief overview its enough to be able to throw together a bunch of simple regular expressions." ID="ID_1564128980" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
</node>
<node TEXT="Regular Expressions Code#$D$#" FOLDED="true" ID="ID_1486500839" CREATED="1566553719121" MODIFIED="1566553719121">
<icon BUILTIN="stop-sign"/>
<node TEXT="Source Code Syntax - Regular-Expressions.info" FOLDED="true" ID="ID_1664383712" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://www.regular-expressions.info/examplesprogrammer.html">
<node TEXT="Example Regexes to Match Common Programming Language Constructs. Regular expressions are very useful to manipulate source code in a text editor or in a regex-based text processing tool.Most programming languages use similar constructs like keywords comments and strings." ID="ID_1059708224" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="Regular Expressions - DreamBank" FOLDED="true" ID="ID_1957843855" CREATED="1566553719121" MODIFIED="1566553719121" LINK="http://dreambank.net/regex.html">
<node TEXT="Regular Expressions. Regular expressions are a set of codes that are used to match patterns of letters in many programming languages. The DreamBank search engine lets you use the complete set of regular expressions (with a few exceptions) in your searches so that you can refine your queries to find exactly what you want." ID="ID_1852004346" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="Use regular expressions - Visual Studio | Microsoft Docs" FOLDED="true" ID="ID_1643922089" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://docs.microsoft.com/en-us/visualstudio/ide/using-regular-expressions-in-visual-studio">
<node TEXT="Use regular expressions in Visual Studio. 03/26/2018; 6 minutes to read +4; In this article. Visual Studio uses .NET regular expressions to find and replace text.. Regular expression examples. The following table contains some regular expression characters operators constructs and pattern examples." ID="ID_39875384" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="Regular Expressions In C# - c-sharpcorner.com" FOLDED="true" ID="ID_1612486121" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://www.c-sharpcorner.com/article/regular-expressions-in-C-Sharp/">
<node TEXT="C# Regex class provides functions to implement regular expressions. The code example include how to use Regular Expressions in C# for IsNaturalNumber IsWholeNumber IsPositiveNumber IsInteger IsNumber IsAlpha and IsAlphaNumeric." ID="ID_403524387" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="replace - What flavor of Regex does Visual Studio Code use " FOLDED="true" ID="ID_514218371" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://stackoverflow.com/questions/42179046/what-flavor-of-regex-does-visual-studio-code-use">
<node TEXT="VS Code does support regular expression searches however backreferences and lookaround arent supported by default. But you can enable these with the setting search.usePCRE2. This configures ripgrep to use the PCRE2 regex engine." ID="ID_707731974" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="Regular Expressions - JavaScript | MDN" FOLDED="true" ID="ID_1181977810" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions">
<node TEXT="Regular expressions are patterns used to match character combinations in strings. In JavaScript regular expressions are also objects. These patterns are used with the exec and test methods of RegExp and with the match matchAll replace search and split methods of String. This chapter describes JavaScript regular expressions." ID="ID_856930010" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="8 Regular Expressions You Should Know - Code Envato Tuts+" FOLDED="true" ID="ID_399959032" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://code.tutsplus.com/tutorials/8-regular-expressions-you-should-know--net-6149">
<node TEXT="Regular expressions (abbreviated as regex or regexp with plural forms regexes regexps or regexen) are written in a formal language that can be interpreted by a regular expression processor a program that either serves as a parser generator or examines text and identifies parts that match the provided specification." ID="ID_1689166836" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="RegExr: Learn Build  Test RegEx" FOLDED="true" ID="ID_998937339" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://regexr.com/">
<node TEXT="Regular expression tester with syntax highlighting PHP / PCRE  JS Support contextual help cheat sheet reference and searchable community patterns. RegExr is an online tool to learn build  test Regular Expressions (RegEx / RegExp)." ID="ID_1626788351" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="Quick-Start: Regex Cheat Sheet - rexegg.com" FOLDED="true" ID="ID_1789590253" CREATED="1566553719121" MODIFIED="1566553719121" LINK="http://www.rexegg.com/regex-quickstart.html">
<node TEXT="The tables below are a reference to basic regex. While reading the rest of the site when in doubt you can always come back and look here. (It you want a bookmark heres a direct link to the regex reference tables).I encourage you to print the tables so you have a cheat sheet on your desk for quick reference." ID="ID_535195768" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="Regular Expression Language - Quick Reference | Microsoft Docs" FOLDED="true" ID="ID_921576976" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference">
<node TEXT="A regular expression is a pattern that the regular expression engine attempts to match in input text. A pattern consists of one or more character literals operators or constructs. For a brief introduction see .NET Regular Expressions. Each section in this quick reference lists a particular " ID="ID_1751612211" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="Regular Expressions: The Complete Tutorial" FOLDED="true" ID="ID_1137996317" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://www.princeton.edu/~mlovett/reference/Regular-Expressions.pdf">
<node TEXT="regular expressions with whatever data you can access using the application or programming language you are working with. Different Regular Expression Engines A regular expression &#xe2;&#x20ac;&#x153;engine&#xe2;&#x20ac;&#xfffd; is a piece of software that can process regular expressions trying to match the pattern to the given string." ID="ID_569071828" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="Free Online Regular Expression Tester - FreeFormatter.com" FOLDED="true" ID="ID_318697838" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://www.freeformatter.com/regex-tester.html">
<node TEXT="Regular Expression Tester. This free regular expression tester lets you test your regular expressions against any entry of your choice and clearly highlights all matches. It is JavaScript based and uses XRegExp library for enhanced features." ID="ID_1288883312" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
</node>
<node TEXT="Operators of Regular Expressions Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1486885768" CREATED="1566553719121" MODIFIED="1566553719121">
<icon BUILTIN="stop-sign"/>
<node TEXT="Regular Expressions in Python | DataCamp" FOLDED="true" ID="ID_1114809608" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://www.datacamp.com/courses/regular-expressions-in-python">
<node TEXT="Time to discover the fundamental concepts of regular expressions! In this key chapter you will learn to understand the basic concepts of regular expression syntax. Using a real dataset with tweets meant for sentiment analysis you will learn how to apply pattern matching using normal and special characters and greedy and lazy quantifiers." ID="ID_1060904695" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="How is the AND/OR operator represented as in Regular " FOLDED="true" ID="ID_1576545596" CREATED="1566553719121" MODIFIED="1566553719121" LINK="https://stackoverflow.com/questions/8020848/how-is-the-and-or-operator-represented-as-in-regular-expressions">
<node TEXT="How is the AND/OR operator represented as in Regular Expressions? Ask Question Asked 7 years 9 months ago. Active  Regular expression to match a line that doesnt contain a word. 2775. What is the !! (not not) operator in JavaScript? 3882. How to replace all occurrences of a string?" ID="ID_1604583822" CREATED="1566553719121" MODIFIED="1566553719121"/>
</node>
<node TEXT="RegExpert : A Tool for Visualization of Regular Expressions" FOLDED="true" ID="ID_621282574" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://bib.irb.hr/datoteka/330746.RegExpert-A_tool_for_visualization_of_Regular_Expressions.pdf">
<node TEXT="RegExpert : A Tool for Visualization of Regular Expressions Ivan Budiselic * Sinisa Srbljic and Miroslav Popovic * * University of Zagreb School of Electrical Engineering and Computing Zagreb Croatia e-mail: { ivan.budiselic sinisa.srbljic miro.popovic }@fer.hr Abstract In recent years tools for computer aided" ID="ID_1021135287" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Interactive Visualization for System Log Analysis" FOLDED="true" ID="ID_1611158696" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://people.eecs.berkeley.edu/~kubitron/courses/cs262a-F13/projects/reports/project1_report_ver3.pdf">
<node TEXT="Interactive Visualization for System Log Analysis Armin Samii and Woojong Koh University of California Berkeley Figure 1: Our visualization displays arbitrary system log data by parsing the variable parts of each log message. Each row contains messages from a single node. Each column is a certain type of message. Each point is a single log " ID="ID_778347445" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="RegExr: Learn Build  Test RegEx" FOLDED="true" ID="ID_793624793" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://regexr.com/">
<node TEXT="Regular expression tester with syntax highlighting PHP / PCRE  JS Support contextual help cheat sheet reference and searchable community patterns. RegExr is an online tool to learn build  test Regular Expressions (RegEx / RegExp)." ID="ID_296620635" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="MeshFlow: Interactive Visualization of Mesh Construction " FOLDED="true" ID="ID_640550264" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://www.youtube.com/watch?v=oTH7zwS_Wto">
<node TEXT="We base our clustering on an analysis of the frequency of repeated operations and implement it using substituting regular expressions. By filtering operations based on either their type or which " ID="ID_1894414116" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Data Processing  Visualization - m-clark.github.io" FOLDED="true" ID="ID_1615274193" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://m-clark.github.io/data-processing-and-visualization/tidyverse.html">
<node TEXT="The focus of this document is on common data processing and exploration techniques in R especially as a prelude to visualization. The first part of the document will cover data structures the dplyr and tidyverse packages which enhance and facilitate the sorts of operations that typically arise when dealing with data including faster I/O and grouped operations." ID="ID_1564195435" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="MeshFlow: Interactive Visualization of Mesh  - Taylor " FOLDED="true" ID="ID_1887446519" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://mafiadoc.com/meshflow-interactive-visualization-of-mesh-taylor-university_5c6dc37e097c473c758b456f.html">
<node TEXT="We base our clustering on an analysis of the frequency of repeated operations and implement it using substituting regular expressions. By filtering operations based on either their type or which vertices they affect MeshFlow also ensures that viewers can interactively focus on the relevant parts of the modeling process." ID="ID_44753081" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Extract structured data from text by text patterns " FOLDED="true" ID="ID_25732295" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://www.opensemanticsearch.org/enhancer/regex">
<node TEXT="Extract structured data from text by text patterns (Regular Expressions) You can extract some structured data i.e. for aggregated overviews interactive navigation and interactive filters (faceted search) data analysis and data visualization from unstructured text by extraction of the interesting text parts to structured fields properties or " ID="ID_1162736379" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="REGEX Generator" FOLDED="true" ID="ID_614956086" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://www.regex-generator.com/">
<node TEXT="Regular Expression Generator. Copyright &#xc2;&#xa9; 2013-2018 SEQREL GmbH. All rights reserved. - Impressum (Legal notice) - Terms of Use of the Website - Privacy " ID="ID_1209217552" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="String Manipulation in R | DataCamp" FOLDED="true" ID="ID_1386002761" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://www.datacamp.com/courses/string-manipulation-in-r-with-stringr">
<node TEXT="data visualization data visualization machine learning machine learning visualization -SQL visualization not SQL Press enter to see all search results  Interactive Course String Manipulation in R with stringr.  put them back together and use stringr to detect extract match and split strings using regular expressions a powerful way to " ID="ID_1130793951" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Rubular: a Ruby regular expression editor" FOLDED="true" ID="ID_16904634" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://rubular.com/">
<node TEXT="Rubular is a Ruby-based regular expression editor. Its a handy way to test regular expressions as you write them. To start enter a regular expression and a test string." ID="ID_819185168" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
</node>
<node TEXT="Operators of Regular Expressions Code#$D$#" FOLDED="true" ID="ID_73567262" CREATED="1566553719122" MODIFIED="1566553719122">
<icon BUILTIN="stop-sign"/>
<node TEXT="Perl | Operators in Regular Expression - GeeksforGeeks" FOLDED="true" ID="ID_830209122" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://www.geeksforgeeks.org/perl-operators-in-regular-expression/">
<node TEXT="The Regular Expression is a string which is the combination of different characters that provides matching of the text strings. A regular expression can also be referred to as regex or regexp. The basic method for applying a regular expression is to use of binding operators =~ (Regex Operator) and " ID="ID_1482233008" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Regex - Common Operators - MIT" FOLDED="true" ID="ID_1173081261" CREATED="1566553719122" MODIFIED="1566553719122" LINK="http://web.mit.edu/gnu/doc/html/regex_3.html">
<node TEXT="The result is a regular expression that will match a string if a matches its first part and b matches the rest. For example `xy (two match-self operators) matches `xy. Repetition Operators. Repetition operators repeat the preceding regular expression a specified number of times. The Match-zero-or-more Operator (*)" ID="ID_1427985255" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="regex - Regular Expressions: Is there an AND operator " FOLDED="true" ID="ID_1814749553" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://stackoverflow.com/questions/469913/regular-expressions-is-there-an-and-operator">
<node TEXT="The order is always implied in the structure of the regular expression. To accomplish what you want youll have to match the input string multiple times against different expressions. What you want to do is not possible with a single regexp." ID="ID_1371358500" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Regular Expression for And |  Regex | OCPsoft" FOLDED="true" ID="ID_142612848" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://www.ocpsoft.org/tutorials/regular-expressions/and-in-regex/">
<node TEXT="When attempting to build a logical &#xe2;&#x20ac;&#x153;and&#xe2;&#x20ac;&#xfffd; operation using regular expressions we have a few approaches to follow. The first approach may seem obvious but if you think about it regular expressions are logical &#xe2;&#x20ac;&#x153;and&#xe2;&#x20ac;&#xfffd; by default. Every sequential character in a regular expression is &#xe2;&#x20ac;&#x153;and&#xe2;&#x20ac;&#x2122;ed&#xe2;&#x20ac;&#xfffd; together." ID="ID_1603034425" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Regular Expressions: The Complete Tutorial" FOLDED="true" ID="ID_1845158879" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://www.princeton.edu/~mlovett/reference/Regular-Expressions.pdf">
<node TEXT="regular expressions with whatever data you can access using the application or programming language you are working with. Different Regular Expression Engines A regular expression &#xe2;&#x20ac;&#x153;engine&#xe2;&#x20ac;&#xfffd; is a piece of software that can process regular expressions trying to match the pattern to the given string." ID="ID_514737427" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Regular Expression Language - Quick Reference | Microsoft Docs" FOLDED="true" ID="ID_872477141" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference">
<node TEXT="A regular expression is a pattern that the regular expression engine attempts to match in input text. A pattern consists of one or more character literals operators or constructs. For a brief introduction see .NET Regular Expressions. Each section in this quick reference lists a particular " ID="ID_1710683661" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Regular expression - Wikipedia" FOLDED="true" ID="ID_1739049316" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://en.wikipedia.org/wiki/Complement_operator_(regular_expressions)">
<node TEXT="A regular expression regex or regexp (sometimes called a rational expression) is a sequence of characters that define a search pattern.Usually such patterns are used by string searching algorithms for find or find and replace operations on strings or for input validation.It is a technique developed in theoretical computer science and formal language theory." ID="ID_168539705" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Regular-Expressions.info - Regex Tutorial Examples and " FOLDED="true" ID="ID_1042331495" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://www.regular-expressions.info/">
<node TEXT="Regular Expressions Quick Start. If you just want to get your feet wet with regular expressions take a look at the one-page regular expressions quick start.While you cant learn to efficiently use regular expressions from this brief overview its enough to be able to throw together a bunch of simple regular expressions." ID="ID_1086281352" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Source Code Syntax - Regular-Expressions.info" FOLDED="true" ID="ID_1719959682" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://www.regular-expressions.info/examplesprogrammer.html">
<node TEXT="Example Regexes to Match Common Programming Language Constructs. Regular expressions are very useful to manipulate source code in a text editor or in a regex-based text processing tool.Most programming languages use similar constructs like keywords comments and strings." ID="ID_1583274460" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Regular Expressions - JavaScript | MDN" FOLDED="true" ID="ID_644413477" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions">
<node TEXT="Regular expressions are patterns used to match character combinations in strings. In JavaScript regular expressions are also objects. These patterns are used with the exec and test methods of RegExp and with the match matchAll replace search and split methods of String. This chapter describes JavaScript regular expressions." ID="ID_275512612" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="AWK Regular Expression Operators - tutorialspoint.com" FOLDED="true" ID="ID_400751129" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://www.tutorialspoint.com/awk/awk_regular_expression_operators">
<node TEXT="AWK Regular Expression Operators - Learn AWK Programming and how to develop Environment Overview Workflow Basic Syntax Basic Examples Built-in Variables Operators Regular Expressions Arrays Control Flow Looping Built in Functions User Defined Functions Output Redirection Pretty Printing." ID="ID_556737583" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="12 Using Regular Expressions With Oracle Database" FOLDED="true" ID="ID_1554547922" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://docs.oracle.com/cd/B13789_01/appdev.101/b10795/adfns_re.htm">
<node TEXT="For this type of match the regular expression is a string of literals with no metacharacters. For example to find the sequence abc you specify the regular expression: abc Regular Expression Operations on Subexpressions. As mentioned earlier regular expressions are constructed using metacharacters and literals." ID="ID_1643698712" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
</node>
<node TEXT="Building Regular Expressions Interactive Visualisation#$D$#" FOLDED="true" ID="ID_554420926" CREATED="1566553719122" MODIFIED="1566553719122">
<icon BUILTIN="stop-sign"/>
<node TEXT="RegExr: Learn Build  Test RegEx" FOLDED="true" ID="ID_225418086" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://regexr.com/">
<node TEXT="Regular expression tester with syntax highlighting PHP / PCRE  JS Support contextual help cheat sheet reference and searchable community patterns. RegExr is an online tool to learn build  test Regular Expressions (RegEx / RegExp)." ID="ID_1966392105" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Build Regex - A Simple RegEx GUI" FOLDED="true" ID="ID_293457564" CREATED="1566553719122" MODIFIED="1566553719122" LINK="http://buildregex.com/">
<node TEXT="A simple regular expression GUI builder. Build RegEx - A Regular Expression GUI. Built with love by Steven Wade using VerbalExpressions.jsSteven Wade using VerbalExpressions.js" ID="ID_1658802547" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Lecture 9/65: Regular Expressions - YouTube" FOLDED="true" ID="ID_616144054" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://www.youtube.com/watch?v=lVjt0rw9yJs">
<node TEXT="Lecture 9/65: Regular Expressions hhp3.  The interactive transcript could not be loaded.  Part 5.7 Conversion of Finite Automata to Regular Expression how to convert fa to regular expression " ID="ID_372879673" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Regular Expressions in Python | DataCamp" FOLDED="true" ID="ID_602168480" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://www.datacamp.com/courses/regular-expressions-in-python">
<node TEXT="Time to discover the fundamental concepts of regular expressions! In this key chapter you will learn to understand the basic concepts of regular expression syntax. Using a real dataset with tweets meant for sentiment analysis you will learn how to apply pattern matching using normal and special characters and greedy and lazy quantifiers." ID="ID_1325916236" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Web Scraping Regular Expressions and Data Visualization " FOLDED="true" ID="ID_619021469" CREATED="1566553719122" MODIFIED="1566553719122" LINK="https://towardsdatascience.com/web-scraping-regular-expressions-and-data-visualization-doing-it-all-in-python-37a1aade7924">
<node TEXT="To get a better plot we have to do some work. Plotting code in Python like regular expressions can be a little complex and it takes some practice to get used to. Mostly I learn by building on answers on sites like Stack Overflow or by reading official documentation. After a bit of work we get the following plot (see notebook for the details):" ID="ID_1892173512" CREATED="1566553719122" MODIFIED="1566553719122"/>
</node>
<node TEXT="Architecture Flashcards | Quizlet" FOLDED="true" ID="ID_1124992456" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://quizlet.com/83308592/architecture-flash-cards/">
<node TEXT="Start studying Architecture. Learn vocabulary terms and more with flashcards games and other study tools. Search.  _____ allows interactive visualization and collaboration over the web. CATIA. A(n) _____ is a licensed person who leads a team in the planning and design of a building or house. architect." ID="ID_266908560" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Chalmer Lowe - bokeh: Data Visualization in Python - PyCon " FOLDED="true" ID="ID_1166898639" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://www.youtube.com/watch?v=xId9B1BVusA">
<node TEXT="Speaker: Chalmer Lowe Bokeh is a powerful data visualization library that creates fully interactive plots and integrates well with the data analysis tools y" ID="ID_1980178793" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Debuggex: Online visual regex tester. JavaScript Python " FOLDED="true" ID="ID_1024303345" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://www.debuggex.com/">
<node TEXT="Expected Matches (hover over highlights for details) Actual Matches Edit Passing ; Enter a string to be tested. If all highlighted matches and subgroups look correct click This is right." ID="ID_1215548309" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Rubular: a Ruby regular expression editor" FOLDED="true" ID="ID_830602811" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://rubular.com/">
<node TEXT="Rubular is a Ruby-based regular expression editor. Its a handy way to test regular expressions as you write them. To start enter a regular expression and a test string." ID="ID_32323830" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Quick-Start: Regex Cheat Sheet - rexegg.com" FOLDED="true" ID="ID_244173723" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://www.rexegg.com/regex-quickstart.html">
<node TEXT="The tables below are a reference to basic regex. While reading the rest of the site when in doubt you can always come back and look here. (It you want a bookmark heres a direct link to the regex reference tables).I encourage you to print the tables so you have a cheat sheet on your desk for quick reference." ID="ID_1391241423" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Regex Cheat Sheet: A Quick Guide to Regular Expressions in " FOLDED="true" ID="ID_119937350" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://www.dataquest.io/blog/regex-cheatsheet/">
<node TEXT="The tough thing about learning data science is remembering all the syntax. While at Dataquest we advocate getting used to consulting the Python documentation sometimes it&#xe2;&#x20ac;&#x2122;s nice to have a handy PDF reference so we&#xe2;&#x20ac;&#x2122;ve put together this Python regular expressions (regex) cheat sheet to help you out!. This regex cheat sheet is based on Python 3&#xe2;&#x20ac;&#x2122;s documentation on regular expressions." ID="ID_501537803" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="JFLAP &#xe2;&#x20ac;&#x201c; An Interactive Formal Languages and Automata Package" FOLDED="true" ID="ID_1165766354" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://www2.cs.duke.edu/csed/jflap/jflapbook/jflapbook2006.pdf">
<node TEXT="JFLAP &#xe2;&#x20ac;&#x201c; An Interactive Formal Languages and Automata Package Susan H. Rodger Duke University Thomas W. Finley  4 Regular Expressions 45  (JFLAP) an interactive visualization and teaching tool for formal languages. This book is intended" ID="ID_1368735618" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
</node>
<node TEXT="Building Regular Expressions Code#$D$#" FOLDED="true" ID="ID_646582649" CREATED="1566553719123" MODIFIED="1566553719123">
<icon BUILTIN="stop-sign"/>
<node TEXT="RegExr: Learn Build  Test RegEx" FOLDED="true" ID="ID_1531166157" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://regexr.com/">
<node TEXT="Regular expression tester with syntax highlighting PHP / PCRE  JS Support contextual help cheat sheet reference and searchable community patterns. RegExr is an online tool to learn build  test Regular Expressions (RegEx / RegExp)." ID="ID_433692013" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Expresso - A Tool for Building and Testing Regular Expressions" FOLDED="true" ID="ID_1408403935" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://www.codeproject.com/articles/3669/expresso-a-tool-for-building-and-testing-regular-e">
<node TEXT="Expresso provides a toolbox with which one can build regular expressions using a set of tab pages from which any of the syntactical elements can be selected. After building an expression sample data can be read or entered manually and the regular expression can be run against that data." ID="ID_1725529661" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Build Regex - A Simple RegEx GUI" FOLDED="true" ID="ID_487416152" CREATED="1566553719123" MODIFIED="1566553719123" LINK="http://buildregex.com/">
<node TEXT="A simple regular expression GUI builder. Build RegEx - A Regular Expression GUI. Built with love by Steven Wade using VerbalExpressions.jsSteven Wade using VerbalExpressions.js" ID="ID_1238654852" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Building regular expression patterns - ibm.com" FOLDED="true" ID="ID_861411502" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://www.ibm.com/support/knowledgecenter/SS42VS_DSM/t_LSX_build_regex.html">
<node TEXT="To create a log source extension you use regular expressions (regex) to match strings of text from the unsupported log source. Building regular expression patterns To create a log source extension you use regular expressions (regex) to match strings of text from the unsupported log source." ID="ID_295513866" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Examples of javascript form validation using regular " FOLDED="true" ID="ID_1312494267" CREATED="1566553719123" MODIFIED="1566553719123" LINK="http://form.guide/snippets/javascript-form-validation-using-regular-expression.html">
<node TEXT="In this tutorial you will see how to use regular expressions to validate. Through a list of examples  we will build a script to validate phone numbers  UK postal codes along with more examples. First let&#xe2;&#x20ac;&#x2122;s start by building the webpage and the validation code then we will talk about the regular expressions used to validate the strings." ID="ID_398573078" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Regular Expressions - DreamBank" FOLDED="true" ID="ID_1062486741" CREATED="1566553719123" MODIFIED="1566553719123" LINK="http://dreambank.net/regex.html">
<node TEXT="Regular Expressions. Regular expressions are a set of codes that are used to match patterns of letters in many programming languages. The DreamBank search engine lets you use the complete set of regular expressions (with a few exceptions) in your searches so that you can refine your queries to find exactly what you want." ID="ID_927904139" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Source Code Syntax - Regular-Expressions.info" FOLDED="true" ID="ID_1849714939" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://www.regular-expressions.info/examplesprogrammer.html">
<node TEXT="Example Regexes to Match Common Programming Language Constructs. Regular expressions are very useful to manipulate source code in a text editor or in a regex-based text processing tool.Most programming languages use similar constructs like keywords comments and strings." ID="ID_1876290625" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="replace - What flavor of Regex does Visual Studio Code use " FOLDED="true" ID="ID_1673011230" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://stackoverflow.com/questions/42179046/what-flavor-of-regex-does-visual-studio-code-use">
<node TEXT="Apart from solving this specific issue Im looking for information about the flavor of Regexes in Visual Studio Code and where to find documentation about it so I can help myself with any other questions I might stumble upon. Full Visual Studio uses .NET Regular Expressions as documented here. This link is mentioned as the documentation for " ID="ID_593311327" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Using Regular Expressions in C# .NET - CodeProject" FOLDED="true" ID="ID_1671645381" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://www.codeproject.com/articles/93804/using-regular-expressions-in-c-net">
<node TEXT="Although they may be complicated writing and documenting regular expressions allows the developer to concentrate on more important parts of the implementation process. The use of several free and open source regular expression tools makes understanding and building regular expressions a worthwhile task." ID="ID_243451632" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="How-To: Regular Expressions in Java (Part 1) - Tutorial " FOLDED="true" ID="ID_99490276" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://www.ocpsoft.org/opensource/guide-to-regular-expressions-in-java-part-1/">
<node TEXT="Guide to Regular Expressions in Java (Part 1)  in fact they are quite easy. My strategy whenever building a new regular expression is to start with the simplest most general match possible. From there I continuously add more and more complexity until I have matched substituted or inserted exactly what I need.  Thanks for the above " ID="ID_1892310485" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="How to match a pattern by using regular expressions and " FOLDED="true" ID="ID_1638252879" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://support.microsoft.com/en-us/help/308252/how-to-match-a-pattern-by-using-regular-expressions-and-visual-c">
<node TEXT="How to match a pattern by using regular expressions and Visual C#.  Regular expressions allow for easy parsing and matching of strings to a specific pattern.  .RegularExpressions namespace so that you will not be required to qualify declarations in those namespaces later in your code." ID="ID_1350411173" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
<node TEXT="Easy Regular Expression Builder - regexbuddy.com" FOLDED="true" ID="ID_95808147" CREATED="1566553719123" MODIFIED="1566553719123" LINK="https://www.regexbuddy.com/create.html">
<node TEXT="If you have written regular expressions before you know that the regex syntax can be hard to keep track of. Certainly when writing a regex pattern that uses plenty of grouping and alternation. RegexBuddys regex building blocks make it much easier to define regular expressions.Instead of typing in regex tokens directly just pick what you want from a descriptive menu." ID="ID_1985501438" CREATED="1566553719123" MODIFIED="1566553719123"/>
</node>
</node>
<node TEXT="Arden&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xe2;&#x201e;&#xa2;s theorem Properties of Regular Languages Interactive Visualisation#$D$#" FOLDED="true" ID="ID_370497510" CREATED="1566553719147" MODIFIED="1566553719147">
<icon BUILTIN="stop-sign"/>
<node TEXT="Regular expression - Wikipedia" FOLDED="true" ID="ID_561664829" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://en.wikipedia.org/wiki/Complement_operator_(regular_expressions)">
<node TEXT="A regular expression regex or regexp (sometimes called a rational expression) is a sequence of characters that define a search pattern.Usually such patterns are used by string searching algorithms for find or find and replace operations on strings or for input validation.It is a technique developed in theoretical computer science and formal language theory." ID="ID_934677756" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="The Butterfly Theorem - YouTube" FOLDED="true" ID="ID_1392301791" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://www.youtube.com/watch?v=57iDvH8ey9M">
<node TEXT="Proof of the butterfly theorem. Proof of the butterfly theorem.  Pumping Lemma for regular languages (Hindi) - Duration:  Geometry Board to understand properties of circle " ID="ID_854186517" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="Angle Bisector Theorem - YouTube" FOLDED="true" ID="ID_1556060194" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://www.youtube.com/watch?v=xRsRJHpKohQ">
<node TEXT="This video is unavailable. Watch Queue Queue. Watch Queue Queue" ID="ID_984303725" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="Interactive Mathematics Activities - cut-the-knot.org" FOLDED="true" ID="ID_975573637" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://www.cut-the-knot.org/Curriculum/index.shtml">
<node TEXT="Interactive Mathematics Activities for Arithmetic Geometry Algebra Probability Logic Mathmagic Optical Illusions Combinatorial games and Puzzles." ID="ID_90780788" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="Programming language - Wikipedia" FOLDED="true" ID="ID_922085186" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://en.wikipedia.org/wiki/Dialecting">
<node TEXT="A programming language is a formal language which comprises a set of instructions that produce various kinds of output.Programming languages are used in computer programming to implement algorithms.. Most programming languages consist of instructions for computers.There are programmable machines that use a set of specific instructions rather than general programming languages." ID="ID_280071946" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="Geometry Standard 1 &#xe2;&#x20ac;&#x201c; Mathematical Processes" FOLDED="true" ID="ID_1066845589" CREATED="1566553719147" MODIFIED="1566553719147" LINK="http://archive.jc-schools.net/dynamic/math/math-geometry.pdf">
<node TEXT="Geometry Standard 1 &#xe2;&#x20ac;&#x201c; Mathematical Processes Course Level Expectations: CLE 3108.1.1 Use mathematical language symbols definitions proofs and counterexamples correctly  CLE 3108.4.2 Describe the properties of regular polygons including comparative classification of them  the Pythagorean Theorem Law of Sines and Law of Cosines" ID="ID_403431238" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="Circles Properties and Angle Properties of Circles &#xe2;&#x20ac;&#x201c; GeoGebra" FOLDED="true" ID="ID_565383444" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://www.geogebra.org/m/G2SB5xgn">
<node TEXT="This book contains interactive activities demonstrating circle properties and angle properties based on measurement of angles and lengths. Rigorous formal proof are not included here." ID="ID_1378241949" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="Pythagorean Theorem Proof - Math Is Fun" FOLDED="true" ID="ID_1534225934" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://www.mathsisfun.com/geometry/pythagorean-theorem-proof.html">
<node TEXT="Pythagorean Theorem Algebra Proof What is the Pythagorean Theorem? You can learn all about the Pythagorean Theorem but here is a quick summary:. The Pythagorean Theorem says that in a right triangle the square of a (a 2) plus the square of b (b 2) is equal to the square of c (c 2): a 2 + b 2 = c 2. Proof of the Pythagorean Theorem using Algebra" ID="ID_1036611198" CREATED="1566553719147" MODIFIED="1566553719147"/>
</node>
<node TEXT="Properties of Right Triangles: Theorems  Proofs - Video " FOLDED="true" ID="ID_1922586430" CREATED="1566553719147" MODIFIED="1566553719147" LINK="https://study.com/academy/lesson/properties-of-right-triangles.html">
<node TEXT="In this lesson you will learn about the properties of and theorems associated with right triangles which have a wide range of applications in math and science." ID="ID_1556144958" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Geometry Articles Theorems Problems and Interactive " FOLDED="true" ID="ID_1247945936" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://cut-the-knot.org/geometry.shtml">
<node TEXT="More than 850 topics - articles problems puzzles - in geometry most accompanied by interactive Java illustrations and simulations." ID="ID_270740756" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Introduction to the Theory of Computation Michael Sipser " FOLDED="true" ID="ID_1253004066" CREATED="1566553719148" MODIFIED="1566553719148" LINK="http://www.engppt.com/2011/11/book-introduction-to-theory-of.html">
<node TEXT="Properties of Regular Languages. Regular Expressions. 1. Pumping Lemma for Regular Languages. 1.  Cook&#xe2;&#x20ac;&#x2122;s Theorem. 7.  Interactive Proofs and Probablistic Algorithm 9 9. Extra Material Mathematical Preliminaries Decidable problems on Regular and Context-free languages Grammars for regular languages" ID="ID_1397978393" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Industrial Use of ACL2: Applications Achievements " FOLDED="true" ID="ID_715693001" CREATED="1566553719148" MODIFIED="1566553719148" LINK="http://www.cs.utexas.edu/~marijn/publications/ACL2-ARCADE.pdf">
<node TEXT="Shortly after arriving at that \doorstep 30 years ago interactive theorem proving stepped over it into regular industrial application. 2 ACL2 A major attraction of Nqthm for industrial use was the fact that it supported an executable programming language as its logic. Prototypes or models of various computational artifacts" ID="ID_1650848707" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
</node>
<node TEXT="Arden&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xe2;&#x201e;&#xa2;s theorem Properties of Regular Languages Code#$D$#" FOLDED="true" ID="ID_1388776336" CREATED="1566553719148" MODIFIED="1566553719148">
<icon BUILTIN="stop-sign"/>
<node TEXT="Designing Regular Expressions - YouTube" FOLDED="true" ID="ID_1272566286" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://www.youtube.com/watch?v=FOhEmW_nMRs">
<node TEXT="TOC: Designing Regular Expressions This lecture shows how design Regular Expressions for the following Languages: 1) Language accepting strings of length exactly 2 2) Language accepting strings of " ID="ID_1591476062" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Rices theorem - Wikipedia" FOLDED="true" ID="ID_302781146" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://en.wikipedia.org/wiki/Rice%27s_theorem">
<node TEXT="In computability theory Rices theorem states that all non-trivial semantic properties of programs are undecidable. A semantic property is one about the programs behavior (for instance does the program terminate for all inputs) unlike a syntactic property (for instance does the program contain an if-then-else statement)." ID="ID_921577257" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Regular language - Wikipedia" FOLDED="true" ID="ID_176548642" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://en.wikipedia.org/wiki/Regular_language">
<node TEXT="To locate the regular languages in the Chomsky hierarchy one notices that every regular language is context-free.The converse is not true: for example the language consisting of all strings having the same number of as as bs is context-free but not regular.To prove that a language such as this is not regular one often uses the Myhill&#xe2;&#x20ac;&#x201c;Nerode theorem or the pumping lemma among other methods." ID="ID_919172020" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Regular Expressions Regular Grammar and Regular Languages " FOLDED="true" ID="ID_718795554" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://www.geeksforgeeks.org/regular-expressions-regular-grammar-and-regular-languages/">
<node TEXT="Regular Grammar : A grammar is regular if it has rules of form A - a or A - aB or A - &#xc9;&#x203a; where &#xc9;&#x203a; is a special symbol called NULL. Regular Languages : A language is regular if it can be expressed in terms of regular expression. Closure Properties of Regular Languages Union : If L1 and If L2 are two regular languages their union L1 &#xe2;&#x2c6;&#xaa; L2 will also be regular." ID="ID_1234175754" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Ardens Theorem - tutorialspoint.com" FOLDED="true" ID="ID_756518385" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://www.tutorialspoint.com/automata_theory/ardens_theorem">
<node TEXT="In order to find out a regular expression of a Finite Automaton we use Arden&#xe2;&#x20ac;&#x2122;s Theorem along with the properties of regular expressions. Statement &#xe2;&#x2c6;&#x2019; Let P and Q be two regular expressions. If P does not contain null string then R = Q + RP has a unique solution that is R = QP* Proof &#xe2;&#x2c6;&#x2019; R = Q + (Q + RP)P [After putting the value R = Q + RP " ID="ID_1444352150" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Finite Automata - Stanford University" FOLDED="true" ID="ID_1502313636" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://web.stanford.edu/class/archive/cs/cs103/cs103.1142/lectures/13/Small13.pdf">
<node TEXT="Closure Properties Theorem: If L is a regular language then L is also a regular language. If we begin with a regular language and complement it we end up with a regular language. This is an example of a closure property of regular languages. The regular languages are closed under complementation. Well see more such properties later on." ID="ID_610061060" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="How to prove a language is regular? - Computer Science " FOLDED="true" ID="ID_1882507933" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://cs.stackexchange.com/questions/1331/how-to-prove-a-language-is-regular">
<node TEXT="The answer by Ran G. give a fairly extensive listing of the equivalent models that can be used to specify regular languages (and the list goes on two-way automata MSO logic but that is covered by the link under more equivalent models)." ID="ID_456779618" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Theory of Computation | Closure Properties of Context Free " FOLDED="true" ID="ID_423683453" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://www.geeksforgeeks.org/theory-of-computation-closure-properties-of-context-free-languages/">
<node TEXT="Context free languages can be generated by context free grammar which has the form : A - &#xcf;&#xfffd; (where A &#xe2;&#x2c6;&#x2c6; N and &#xcf;&#xfffd; &#xe2;&#x2c6;&#x2c6; (T &#xe2;&#x2c6;&#xaa; N)* and N is a non-terminal and T is a terminal) Properties of Context Free Languages Union : If L1 and If L2 are two context free languages their union L1 &#xe2;&#x2c6;&#xaa; L2 will also be context free. For example" ID="ID_1139701133" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="6.045: Automata Computability and Complexity Or Great " FOLDED="true" ID="ID_1424999109" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-045j-automata-computability-and-complexity-spring-2011/lecture-notes/MIT6_045JS11_lec04.pdf">
<node TEXT="6.045: Automata Computability and Complexity Or Great Ideas in Theoretical Computer Science Spring 2010 Class 4 Nancy Lynch" ID="ID_856617609" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="math geometry 5 math theorems Flashcards and Study Sets " FOLDED="true" ID="ID_1240475069" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://quizlet.com/subject/math-geometry-5-math-theorems/">
<node TEXT="Learn math geometry 5 math theorems with free interactive flashcards. Choose from 500 different sets of math geometry 5 math theorems flashcards on Quizlet." ID="ID_1813299674" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Automata Theory - USF Computer Science" FOLDED="true" ID="ID_1236679597" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://www.cs.usfca.edu/~galles/cs411/lecture/lectureFR2.pdf">
<node TEXT="FR2-27: Rice&#xe2;&#x20ac;&#x2122;s Theorem &#xe2;&#x20ac;&#x201c; Proof Let Mbe any Turing Machine wbe any input string and P be any non-trivial property of a language such that {} has property P. Let L NP be some recursively enumerable language that does not have the property P and let M NP be a Turing Machine such that L[M NP] = L NP We will create a machine M&#xe2;&#x20ac;&#xb2; such that M&#xe2;&#x20ac;&#xb2; has property P if and only if Mdoes not halt on w." ID="ID_108264971" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="geometry theorems 1 chapter 6 Flashcards and Study Sets " FOLDED="true" ID="ID_784645908" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://quizlet.com/subject/geometry-theorems-1-chapter-6/">
<node TEXT="Learn geometry theorems 1 chapter 6 with free interactive flashcards. Choose from 500 different sets of geometry theorems 1 chapter 6 flashcards on Quizlet." ID="ID_1392574889" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
</node>
<node TEXT="Pumping Lemma for Regular languages Interactive Visualisation#$D$#" FOLDED="true" ID="ID_484998935" CREATED="1566553719148" MODIFIED="1566553719148">
<icon BUILTIN="stop-sign"/>
<node TEXT="Pumping Lemma (For Regular Languages) - YouTube" FOLDED="true" ID="ID_1758743879" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://www.youtube.com/watch?v=dikEDuepOtI">
<node TEXT="TOC: Pumping Lemma (For Regular Languages) This lecture discusses the concept of Pumping Lemma which is used to prove that a Language is not Regular.  The interactive transcript could not be " ID="ID_145069841" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="VISUALIZING THE PUMPING LEMMA FOR REGULAR LANGUAGES by " FOLDED="true" ID="ID_1792583609" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://www.cs.montana.edu/techreports/2004/thesis_final.pdf">
<node TEXT="can be used by students to study the pumping lemma for regular languages in a vi-sual interactive fashion. We expect that students will be able to learn the pumping lemma and its application more readily through the use of this software. Designed as applets that run in standard web browsers the software models for" ID="ID_1904547875" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Sample Proof { CFG Pumping Lemma - Computer Action Team" FOLDED="true" ID="ID_103777269" CREATED="1566553719148" MODIFIED="1566553719148" LINK="http://web.cecs.pdx.edu/~black/CS311/homeworks/cfg_pumping_lemma_proof.pdf">
<node TEXT="Sample Proof { CFG Pumping Lemma Andrew Sackville-West November 5 2010 Use the pumping lemma to prove that the following language is not con-text free. L = f0n1n0 n1 jn 0g Proof. Assume that L is context free. Then by the pumping lemma for context free languages there must be a pumping length p such that if s is" ID="ID_861130087" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Pumping Lemma (For Regular Languages) | Example 1 - YouTube" FOLDED="true" ID="ID_1815876408" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://www.youtube.com/watch?v=Ty9tpikilAo">
<node TEXT="TOC: Pumping Lemma (For Regular Languages) | Example 1 This lecture shows an example of how to prove that a given language is Not Regular using Pumping Lemma" ID="ID_1112114836" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="The Pumping Game - Weitz" FOLDED="true" ID="ID_721121390" CREATED="1566553719148" MODIFIED="1566553719148" LINK="http://weitz.de/pump/">
<node TEXT="A simple game to help you understand the pumping lemma for regular languages. Exercise: Random:  Your job of course is to end up with a string that does not belong to the language. Continue: Do the same language again  Note that some of the languages presented here are regular and the computer should always win in these cases. It is part " ID="ID_29303862" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Proof for pumping Lemma linear context free language " FOLDED="true" ID="ID_228236352" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://stackoverflow.com/questions/55111612/proof-for-pumping-lemma-linear-context-free-language">
<node TEXT="Where can I find the proof for the linear context free languages pumping lemma? I am looking for the proof that is specific for the linear context free language  in contradiction to how we prove the &#xe2;&#x20ac;&#x153;regular&#xe2;&#x20ac;&#xfffd; pumping lemma for context free grammar in general. In the regular&#xe2;&#x20ac;&#xfffd; pumping lemma there is a bound on the height of X[1] and " ID="ID_1163307785" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Visualizing the pumping lemma for regular languages" FOLDED="true" ID="ID_1021928671" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://scholarworks.montana.edu/xmlui/handle/1/1088">
<node TEXT="The pumping lemma is used to prove that particular languages are not regular. Traditional methods of teaching the pumping lemma seem inadequate for helping average students learn this concept. In this thesis we describe a set of software tools that help students visualize the pumping lemma for regular language." ID="ID_764916834" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Visual and Interactive Tools - users.cs.duke.edu" FOLDED="true" ID="ID_865484536" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://users.cs.duke.edu/~rodger/tools/">
<node TEXT="Visual and Interactive Tools . Susan H. Rodger. Duke University .  PumpLemma - A tool for experimenting with the Pumping Lemma for regular languages and context-free languages - This is a very old tool from about 1997 and is no longer supported. FLAP - X Windows version (OLD try the newer Java Version of FLAP above! It is much easier to " ID="ID_1399738229" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Regular Languages | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1143336155" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://brilliant.org/wiki/regular-languages/">
<node TEXT="A regular language is a language that can be expressed with a regular expression or a deterministic or non-deterministic finite automata or state machine. A language is a set of strings which are made up of characters from a specified alphabet or set of symbols. Regular languages are a subset of the set of all strings. Regular languages are used in parsing and designing programming languages " ID="ID_794382191" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Context Free Languages | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1348443211" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://brilliant.org/wiki/context-free-languages/">
<node TEXT="Context-free languages (CFLs) are generated by context-free grammars. The set of all context-free languages is identical to the set of languages accepted by pushdown automata and the set of regular languages is a subset of context-free languages. An inputed language is accepted by a computational model if it runs through the model and ends in an accepting final state." ID="ID_1596474058" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="COSC341 Theory of Computing - Alex Gavryushkin" FOLDED="true" ID="ID_188093602" CREATED="1566553719148" MODIFIED="1566553719148" LINK="https://biods.org/teaching/COSC341">
<node TEXT="Lecture 7: Pumping lemma; Lecture 8: Pushdown automata and context free grammars; Lecture 9: Regular languages; Lecture 10: Classification of languages pumping Lemma 2; Lectures 11&#xe2;&#x20ac;&#x201c;13: Turing Machines. Handouts. These slides; Complementary lecture notes. Information COSC341 website; Assessment Assignment 1: 10% due Thursday 28 March" ID="ID_1899207634" CREATED="1566553719148" MODIFIED="1566553719148"/>
</node>
<node TEXT="Regular Pumping Lemma - Duke Computer Science" FOLDED="true" ID="ID_245582977" CREATED="1566553719148" MODIFIED="1566553719148" LINK="http://www.cs.duke.edu/csed/jflap/modules/JFLAPWorkshop2014/Upload%20Exercises%20and%20Modules%20here/JayBagga/Exercises/Regular%20Pumping%20Lemma/Regular%20Pumping%20Lemma.pdf">
<node TEXT="Regular pumping lemma is a powerful tool that helps you show that certain languages are not regular. The statement of the regular pumping lemma is as follows: If L is a regular language then there exists an integer m such that given a word w in L with jwj m w can be decomposed as w = xyz with the following properties: 1. jxyj m 2. jyj 0 " ID="ID_1632745419" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
</node>
<node TEXT="Pumping Lemma for Regular languages Code#$D$#" FOLDED="true" ID="ID_1229409392" CREATED="1566553719149" MODIFIED="1566553719149">
<icon BUILTIN="stop-sign"/>
<node TEXT="Pumping lemma for regular languages - Wikipedia" FOLDED="true" ID="ID_762178554" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://en.wikipedia.org/wiki/Pumping_lemma_for_regular_languages">
<node TEXT="In the theory of formal languages the pumping lemma for regular languages is a lemma that describes an essential property of all regular languages.Informally it says that all sufficiently long words in a regular language may be pumped&#xe2;&#x20ac;&#x201d;that is have a middle section of the word repeated an arbitrary number of times&#xe2;&#x20ac;&#x201d;to produce a new word that also lies within the same language." ID="ID_900879215" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Computer Science Study Guide: Pumping Lemma Examples" FOLDED="true" ID="ID_1716598442" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://compquiz.blogspot.com/2009/11/pumping-lemma-examples.html">
<node TEXT="Pumping Lemma Examples Steps to solve Pumping Lemma problems: 1. If the language is finite it is regular  otherwise it might be non-regular. 2. Consider the given language to be regular 3. State pumping lemma 4. Choose a string w from language choose smartly . 5. Partition it according to constraints of pumping lemma in a generic way" ID="ID_1206120659" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="dfa - Pumping lemma for regular language - Stack Overflow" FOLDED="true" ID="ID_1092325403" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://stackoverflow.com/questions/14705091/pumping-lemma-for-regular-language">
<node TEXT="You are not completely clear about pumping lemma. What pumping lemma say: Formal definition: Pumping lemma for regular languages Let L be a regular language. Then there exists an integer p &#xe2;&#x2030;&#xa5; 1 depending only on L such that every string w in L of length at least p (p is called the pumping length) can be written as w = xyz (i.e. w can be divided into three substrings) satisfying the " ID="ID_386376026" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Theory of Computation | Pumping Lemma - GeeksforGeeks" FOLDED="true" ID="ID_1037806785" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://www.geeksforgeeks.org/theory-of-computation-pumping-lemma/">
<node TEXT="Pumping Lemma is used as a proof for irregularity of a language. Thus if a language is regular it always satisfies pumping lemma. If there exists at least one string made from pumping which is not in L then L is surely not regular. The opposite of this may not always be true. That is if Pumping Lemma holds it does not mean that the " ID="ID_1881297237" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Pumping Lemma - YouTube" FOLDED="true" ID="ID_1583466071" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://www.youtube.com/watch?v=XeT8sJxU1ak">
<node TEXT="Pumping Lemma For Regular Languages This lecture shows an example of how to prove that a given language is Not Regular using Pumping Lemma. a^n b^n is not regular language where n greater then and " ID="ID_1351280401" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="THE PUMPING LEMMA - cs.toronto.edu" FOLDED="true" ID="ID_1560142601" CREATED="1566553719149" MODIFIED="1566553719149" LINK="http://www.cs.toronto.edu/~azadeh/page11/page12/material/pumping-lemma.pdf">
<node TEXT="THE PUMPING LEMMA x Theorem. For any regular language L there exists an integer n such that for all x &#xe2;&#x2c6;&#x2c6; L with |x| &#xe2;&#x2030;&#xa5; n there exist uvw &#xe2;&#x2c6;&#x2c6;  THE PUMPING LEMMA n x Theorem. For any regular language L there exists an integer n such that for all x &#xe2;&#x2c6;&#x2c6; L with |x " ID="ID_724819960" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Talk:Pumping lemma for regular languages - Wikipedia" FOLDED="true" ID="ID_1624284203" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://en.wikipedia.org/wiki/Talk:Pumping_lemma_for_regular_languages">
<node TEXT="I have just modified one external link on Pumping lemma for regular languages. Please take a moment to review my edit. If you have any questions or need the bot to ignore the links or the page altogether please visit this simple FaQ for additional information. I made the following changes:" ID="ID_1537846250" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="All Assignments: Pumping lemma for regular languages" FOLDED="true" ID="ID_209615248" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://bscs-student.blogspot.com/2009/06/pumping-lemma-for-regular-languages.html">
<node TEXT="In the theory of formal languages the pumping lemma for regular languages describes an essential property of all regular languages. Informally it says that all sufficiently long words in a regular language may be pumped - that is have a middle section of the word repeated an arbitrary number of times - to produce a new word which also lies within the same language." ID="ID_1294994074" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Pumping Lemma (For Regular Languages) | Example 1 - YouTube" FOLDED="true" ID="ID_1257064015" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://www.youtube.com/watch?v=Ty9tpikilAo">
<node TEXT="TOC: Pumping Lemma (For Regular Languages) | Example 1 This lecture shows an example of how to prove that a given language is Not Regular using Pumping Lemma" ID="ID_335126823" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Limits of FA Can FA recognize all &#xe2;&#x20ac;&#x2dc;&#xe2;&#x20ac;&#x2dc;computable&#xe2;&#x20ac;&#x2122;&#xe2;&#x20ac;&#x2122; languages " FOLDED="true" ID="ID_1558657393" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://cseweb.ucsd.edu/classes/fa01/cse105_B/lec6seq.pdf">
<node TEXT="Ex. { 0 1 | n  0} is not regular n n Limits of FA NO! Can FA recognize all &#xe2;&#x20ac;&#x2dc;&#xe2;&#x20ac;&#x2dc;computable&#xe2;&#x20ac;&#x2122;&#xe2;&#x20ac;&#x2122; languages? Pumping Lemma  Pumping Lemma If A is a regular language then there is a no. p" ID="ID_709214330" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Regular Pumping Lemmas - JFLAP" FOLDED="true" ID="ID_248796058" CREATED="1566553719149" MODIFIED="1566553719149" LINK="http://www.jflap.org/tutorial/pumpinglemma/regular/index.html">
<node TEXT="Regular Pumping Lemmas Contents. Definition Explaining the Game Starting the Game User Goes First Computer Goes First. This game approach to the pumping lemma is based on the approach in Peter Linzs An Introduction to Formal Languages and Automata.. Definition" ID="ID_1825876375" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="How to feel intuitively that a language is regular " FOLDED="true" ID="ID_1075087137" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://cs.stackexchange.com/questions/2393/how-to-feel-intuitively-that-a-language-is-regular">
<node TEXT="Given a language $ L= \{a^n b^n c^n\}$ how can I say directly without looking at production rules that this language is not regular? I could use pumping lemma but some guys are saying just look" ID="ID_28295076" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
</node>
</node>
</node>
<node TEXT="Closure and Decision properties" ID="ID_314788537" CREATED="1566881027621" MODIFIED="1566881027621" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Closure and Decision properties Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1329116096" CREATED="1566553719149" MODIFIED="1566553719149">
<icon BUILTIN="stop-sign"/>
<node TEXT="15 Data Visualizations That Will Blow Your Mind | Udacity" FOLDED="true" ID="ID_1253900704" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://blog.udacity.com/2015/01/15-data-visualizations-will-blow-mind.html">
<node TEXT="If a picture is worth a thousand words a data visualization is worth at least a million. As inspiration for your own work with data check out these 15 data visualizations that will wow you. Taken together this roundup is an at-a-glance representation of the range of uses data analysis has from " ID="ID_676794760" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Development of a 3D ePlan/LandXML Visualisation System in " FOLDED="true" ID="ID_1518688472" CREATED="1566553719149" MODIFIED="1566553719149" LINK="http://www.csdila.unimelb.edu.au/projects/3dwebsite/source/Development%20of%20a%203D%20ePlanLandXML%20Visualisation%20System%20in%20Australia.pdf">
<node TEXT="Development of a 3D ePlan/LandXML Visualisation System in Australia Davood SHOJAEI Abbas RAJABIFARD Mohsen KALANTARI Ian D. BISHOP and Ali AIEN Australia . Key words: 3D Visualisation 3D Cadastre ePlan LandXML Australia . SUMMARY . The importance of managing properties and people&#xe2;&#x20ac;&#x2122;s interests in complex multi-level" ID="ID_550946678" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="GraphVis - Interactive Graph Visualization and Analytics" FOLDED="true" ID="ID_223327872" CREATED="1566553719149" MODIFIED="1566553719149" LINK="http://graphvis.com/">
<node TEXT="Understand predict and gain a competitive advantage over your competitors. GraphVis is a web-based visual graph analytics platform that integrates powerful statistical analysis graph mining and machine learning techniques with interactive visualization to aid in the discovery of important patterns and insights for sense making reasoning and decision-making." ID="ID_194466399" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Take Power BI Visualization to the Next Level - YouTube" FOLDED="true" ID="ID_1454294326" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://www.youtube.com/watch?v=_tYs7SDQikE">
<node TEXT="Data Visualization is the front end of every BI system and getting it right is one of the most important tasks in a BI application. Good visualization will benefit the decision making process " ID="ID_1410833549" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Exploring Stakeholder Value Models via Interactive " FOLDED="true" ID="ID_635736923" CREATED="1566553719149" MODIFIED="1566553719149" LINK="http://seari.mit.edu/documents/preprints/RICCI_VALUE_CSER14.pdf">
<node TEXT="analysis of these issues (truthfulness and trust) which is used to discuss the relationship between models and decision outcomes. Interactive visualization is proposed as an efficient and effective method for increasing model truthfulness and model trust and hence making better decisions." ID="ID_1356237231" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="DSS models visualisation and GIS" FOLDED="true" ID="ID_822392768" CREATED="1566553719149" MODIFIED="1566553719149" LINK="http://macaulay.webarchive.hutton.ac.uk/visualisationlitrev/chap5.html">
<node TEXT="Visualisation and Decision Support Systems. Visualisation Systems in DSS ALBE GIS and AVS  Although an object has its own distinct properties it inherits properties of higher-level objects since an object is one of the nodes in a network hierarchy (Liu 1993).  Canopy closure based vegetation modelling provides vegetation patterns over " ID="ID_698735201" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Closure property of Context Free Language(with  - YouTube" FOLDED="true" ID="ID_697763791" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://www.youtube.com/watch?v=f5lIp_BMooM">
<node TEXT="6.1 CFG Context free grammer of all palindromes in urdu and hindi by www.shamil.pk - Duration: 8:27. University Of Shamil 18434 views" ID="ID_251384784" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="VisionScape Interactive LLC. Transforms Landscape Design " FOLDED="true" ID="ID_644666956" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://www.prweb.com/releases/visionscape/3d-landscape-design/prweb9775524.htm">
<node TEXT="VisionScape Interactive LLC. introduced the new 3D Virtual Property late July 2012 to landscape and outdoor living professionals as well as consumers. The Virtual Property is an interactive online 3D replica of any outdoor space created with VisionScape&#xe2;&#x20ac;&#x2122;s 3D landscape design software Virtual Property Architect&#xe2;&#x201e;&#xa2;." ID="ID_771660030" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="In-Depth: Decision Trees and Random Forests | Python Data " FOLDED="true" ID="ID_1384700720" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://jakevdp.github.io/PythonDataScienceHandbook/05.08-random-forests.html">
<node TEXT="Decision trees and over-fitting&#xc2;&#xb6;. Such over-fitting turns out to be a general property of decision trees: it is very easy to go too deep in the tree and thus to fit details of the particular data rather than the overall properties of the distributions they are drawn from." ID="ID_408198177" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Creating and Visualizing Decision Trees with Python - Medium" FOLDED="true" ID="ID_1190983132" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://medium.com/@rnbrown/creating-and-visualizing-decision-trees-with-python-f8e8fa394176">
<node TEXT="Creating and Visualizing Decision Trees with Python  One of the great properties of decision trees is that they are very easily interpreted.  we can use the pydotplus package to create a " ID="ID_1203443744" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Gestalt Principles for Data Visualization: Similarity " FOLDED="true" ID="ID_750705239" CREATED="1566553719149" MODIFIED="1566553719149" LINK="http://emeeks.github.io/gestaltdataviz/section1.html">
<node TEXT="Gestalt Principles for Data Visualization Similarity Proximity  Enclosure  Similarity. The most intuitive gestalt principle is that graphical elements with shared visual properties will be considered in the same group. Here we see the use of color similarity to indicate two classes of elements: the red ones and the gray ones. " ID="ID_1768056903" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Visualising data: can you see stories? | Stories Through Data" FOLDED="true" ID="ID_475073401" CREATED="1566553719149" MODIFIED="1566553719149" LINK="http://storiesthroughdata.blogs.lincoln.ac.uk/2013/04/12/visualising-data-can-you-see-stories/">
<node TEXT="Home Visualising data: can you see stories? Visualising data: can you see stories?  if we assume that there are some fundamental properties of narrative that cross media &#xe2;&#x20ac;&#x201c; like structuralist  I map that design decision back to a clearly stated design problem and ask &#xe2;&#x20ac;&#x153;does narrative help solve this?&#xe2;&#x20ac;&#xfffd; If yes &#xe2;&#x20ac;&#x153;what kind of " ID="ID_224655003" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
</node>
<node TEXT="Closure and Decision properties Code#$D$#" FOLDED="true" ID="ID_1373806002" CREATED="1566553719149" MODIFIED="1566553719149">
<icon BUILTIN="stop-sign"/>
<node TEXT="Closure and Decision Properties of Regular Languages - YouTube" FOLDED="true" ID="ID_22126449" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://www.youtube.com/watch?v=Xrpd588qS6U">
<node TEXT="Closure and Decision Properties of Regular Languages  The Coding Train 61903 views.  Closure Properties Of Various Languages in TOC " ID="ID_1871468594" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Decision Properties of Regular Languages - Stanford University" FOLDED="true" ID="ID_1997740363" CREATED="1566553719149" MODIFIED="1566553719149" LINK="http://infolab.stanford.edu/~ullman/ialc/spr10/slides/rs1.pdf">
<node TEXT="Properties of Language Classes A language class is a set of languages. We have one example: the regular languages. We&#xe2;&#x20ac;&#x2122;ll see many more in this class. Language classes have two important kinds of properties: 1. Decision properties. 2. Closure properties." ID="ID_1472934538" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="computer science - Closures and Context Free Grammars " FOLDED="true" ID="ID_249937268" CREATED="1566553719149" MODIFIED="1566553719149" LINK="https://stackoverflow.com/questions/430324/closures-and-context-free-grammars">
<node TEXT="Im looking over my syllabus for my theoretical computer science class and within the heading of Context Free Grammars it lists closure properties. I have looked through my textbook on this subje" ID="ID_1170225522" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Closure Properties of DFAs - Computer Action Team" FOLDED="true" ID="ID_318657783" CREATED="1566553719149" MODIFIED="1566553719149" LINK="http://web.cecs.pdx.edu/~sheard/course/CS581/notes/ClosurePropDFA.pdf">
<node TEXT="Closure Properties of DFAs Sipser pages 44 - 47 . Closure properties of DFAs Languages captured by DFA&#xe2;&#x20ac;&#x2122;s are closed under &#xe2;&#x20ac;&#xa2; Union  reduces the closure under set-theoretical difference operator to closure under complementation and intersection. Example Difference - = L - M = L &#xe2;&#x2c6;&#xa9; C(M)" ID="ID_377469348" CREATED="1566553719149" MODIFIED="1566553719149"/>
</node>
<node TEXT="Properties of Context-Free Languages - Stanford University" FOLDED="true" ID="ID_687066438" CREATED="1566553719149" MODIFIED="1566553719149" LINK="http://infolab.stanford.edu/~ullman/ialc/spr10/slides/cfl5.pdf">
<node TEXT="Properties of Context-Free Languages Decision Properties Closure Properties. 2 Summary of Decision Properties As usual when we talk about &#xe2;&#x20ac;&#x153;a CFL&#xe2;&#x20ac;&#xfffd; we really mean &#xe2;&#x20ac;&#x153;a representation for the CFL e.g. a CFG or a PDA accepting by final state or empty stack." ID="ID_1131810256" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Closure property of Context Free Language(with  - YouTube" FOLDED="true" ID="ID_605045322" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://www.youtube.com/watch?v=f5lIp_BMooM">
<node TEXT="Closure property of Context Free Language(with Proof) University Academy- Formerly-IP University CSE/IT. Loading Unsubscribe from University Academy- Formerly-IP University CSE/IT?" ID="ID_701736468" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="DoD Base Realignment and Closure - comptroller.defense.gov" FOLDED="true" ID="ID_1968752688" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://comptroller.defense.gov/Portals/45/Documents/defbudget/fy2015/budget_justification/pdfs/05_BRAC/FINAL_FY15_BRAC_Summary_Book.pdf">
<node TEXT="closures and who find that they must sell their homes in real estate markets which have been adversely affected by the closure decision. In the Committee Reports accompanying the FY 1990 Military Construction Appropriations Act the Congress began applying some restrictions on the use of BRAC I funds." ID="ID_1237854929" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="CFL Closure Property - tutorialspoint.com" FOLDED="true" ID="ID_77136396" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://www.tutorialspoint.com/automata_theory/cfl_closure_properties">
<node TEXT="CFL Closure Property - Learn Automata concepts in simple and easy steps starting from Introduction Deterministic Finite Automata Non-Deterministic Finite Automata NDFA to DFA Conversion DFA Minimization Moore and Mealy Machines Introduction to Grammars Language Generated by Grammars Chomsky Grammar Classification Regular Expressions Regular Sets Ardens Theorem Constructing FA from " ID="ID_1309802324" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Canal Street closure and diversion route date announced " FOLDED="true" ID="ID_1307637301" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://www.nottinghampost.com/news/local-news/canal-street-closure-diversion-route-3014816">
<node TEXT="Canal Street closure and diversion route date announced. After 14 week closure a decision is expected to be made on whether to keep the road closed in preparation for the eventual full closure" ID="ID_1773331073" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Closure of dehiscence - General Surgery Coding - Ask An Expert" FOLDED="true" ID="ID_1683801955" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://www.supercoder.com/my-ask-an-expert/topic/closure-of-dehiscence">
<node TEXT="Closure of dehiscence. E. maria Posted Wed 14th of August  Should we code the excision 11404 or just the closure 12032? Because it was done in the office I cant use modifier 78 what would be the appropriate modifier? 79 vs 58 E. maria Posted Fri 16th of August 2013 17:09:40 PM. Can someone please help me with this?" ID="ID_1810982565" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="10 U.S. Code &#xc2;&#xa7; 2687 - Base closures and realignments | U.S " FOLDED="true" ID="ID_1621015154" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://www.law.cornell.edu/uscode/text/10/2687">
<node TEXT="&#xe2;&#x20ac;&#x153;If the base closure and realignment decisions of the 2005 round of base closures and realignments under the Defense Base Closure and Realignment Act of 1990 (part A of title XXIX of Public Law 101&#xe2;&#x20ac;&#x201c;510; 10 U.S.C. 2687 note) or the Integrated Global Presence and Basing Strategy would result in an increase in the number of members of the " ID="ID_1005137904" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Decision properties of CFL by vikita pimple on Prezi" FOLDED="true" ID="ID_753888489" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://prezi.com/fa54bb3un7-j/decision-properties-of-cfl/">
<node TEXT="Emptiness &#xe2;&#x20ac;&#x201c; Instead start with your grammar in CNF. &#xe2;&#x20ac;&#xa2; The proof of the pumping lemma states that the longest derivation path of a string of size n will be 2n &#xe2;&#x20ac;&#x201c; 1. &#xe2;&#x20ac;&#xa2; Systematically generate all derivations with one step then two steps &#xe2;&#x20ac;&#xa6; then 2n &#xe2;&#x20ac;&#x201c; 1 steps where the length of" ID="ID_1543390076" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
</node>
</node>
<node TEXT="Case Study" ID="ID_1320929950" CREATED="1566881027623" MODIFIED="1566881027623" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="RE in text search and replace " ID="ID_1432945598" CREATED="1566881027623" MODIFIED="1566881027623" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Case Study Regular Expressions in text search and replace  Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1484405254" CREATED="1566553719150" MODIFIED="1566553719150">
<icon BUILTIN="stop-sign"/>
<node TEXT="String Manipulation in R | DataCamp" FOLDED="true" ID="ID_393946188" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://www.datacamp.com/courses/string-manipulation-in-r-with-stringr">
<node TEXT="String Manipulation in R with stringr.  match and split strings using regular expressions a powerful way to express patterns. 1 String basics Free  Practice your string manipulation skills on a couple of case studies. Youll also learn a few new skills reading strings into R and handling problems of case (e.g. " ID="ID_1067715214" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Chapter 7 Introduction to data visualization " FOLDED="true" ID="ID_1425708143" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://rafalab.github.io/dsbook/introduction-to-data-visualization.html">
<node TEXT="This book introduces concepts and skills that can help you tackle real-world data analysis challenges. It covers concepts from probability statistical inference linear regression and machine learning and helps you develop skills such as R programming data wrangling with dplyr data visualization with ggplot2 file organization with UNIX/Linux shell version control with GitHub and " ID="ID_1363506070" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Introduction | Introduction to Data Science" FOLDED="true" ID="ID_1633620034" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://rafalab.github.io/dsbook/introduction.html">
<node TEXT="Introduction. The demand for skilled data science practitioners in industry academia and government is rapidly growing. This book introduces concepts and skills that can help you tackle real-world data analysis challenges. It covers concepts from probability statistical inference linear regression and machine learning." ID="ID_968004104" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Extracting information from reports using Regular " FOLDED="true" ID="ID_584704222" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://www.analyticsvidhya.com/blog/2017/03/extracting-information-from-reports-using-regular-expressons-library-in-python/">
<node TEXT="This tutorial provides detailed explanation for extracting information from reports using Regular Expression library in Python.  text = Mary had a little Lamb result = regex.search(text) More information about RegEx usage in Python can be found at Regex One and in this AV article.  A Unique Tutorial with Case Study in Python . July 30 " ID="ID_39862776" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Tools We Love: Regex101.com | UpBuild" FOLDED="true" ID="ID_1233632785" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://www.upbuild.io/blog/regex-101/">
<node TEXT="The tool that we love that we&#xe2;&#x20ac;&#x2122;ll be highlighting today is Regex101.com which can help you build and test regular expressions.. Regular expressions were one of the hardest things to get my head around when I first encountered them. They appeared alien (still do sometimes) and applying them to a real-world situation at the time was difficult." ID="ID_1800066182" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Vim screencast #17: Regular expressions - YouTube" FOLDED="true" ID="ID_1409704304" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://www.youtube.com/watch?v=VjOcINs6QWs">
<node TEXT="The interactive transcript could not be loaded.  Static site case study: https:  Introduction to Regular Expressions - Programming with Text - Duration: " ID="ID_431337316" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Principles and Techniques of Data Science" FOLDED="true" ID="ID_810117270" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://www.textbook.ds100.org/ch/08/text_regex.html">
<node TEXT="This is the textbook for Data 100 the Principles and Techniques of Data Science course at UC Berkeley. Data 100 is the upper-division semester-long data science course that follows Data 8 the Foundations of Data Science. The readers assumed background is detailed in the About This Book page." ID="ID_1509116482" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Beginning Python Visualization [Book] - learning.oreilly.com" FOLDED="true" ID="ID_1632691010" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://learning.oreilly.com/library/view/beginning-python-visualization/9781484200520/">
<node TEXT="We are visual animals. But before we can see the world in its true splendor our brains just like our computers have to sort and organize raw data and then  - Selection from Beginning Python Visualization [Book]" ID="ID_542762703" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Python | CSCAR" FOLDED="true" ID="ID_43136444" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://cscar.research.umich.edu/tag/python/page/2/">
<node TEXT="Regular expressions are perfectly suited for people who like puzzles. Regular expressions are a sequence of characters used to define a search pattern. They are commonly used to do &#xe2;&#x20ac;&#x153;find&#xe2;&#x20ac;&#xfffd; and &#xe2;&#x20ac;&#x153;find and replace&#xe2;&#x20ac;&#xfffd; string operations. They are also used to validate strings like phone numbers passwords etc. in data entry." ID="ID_1641246051" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Beginners Tutorial for Regular Expressions in Python " FOLDED="true" ID="ID_772684215" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://www.analyticsvidhya.com/blog/2015/06/regular-expression-python/">
<node TEXT="Beginners Tutorial for Regular Expressions in Python. Sunil Ray June 7 2015 .  It helps to search a pattern and replace with a new sub string.  Building a Recommendation System using Word2vec: A Unique Tutorial with Case Study in Python . July 30 2019 ." ID="ID_917457886" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Pattern | CLiPS" FOLDED="true" ID="ID_1787895316" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://www.clips.uantwerpen.be/pattern">
<node TEXT="Pattern is a web mining module for the Python programming language. It has tools for data mining (Google Twitter and Wikipedia API a web crawler a HTML DOM parser) natural language processing (part-of-speech taggers n-gram search sentiment analysis WordNet) machine learning (vector space model clustering SVM) network analysis and canvas visualization." ID="ID_1085447109" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Rubular: a Ruby regular expression editor" FOLDED="true" ID="ID_505154844" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://rubular.com/">
<node TEXT="Rubular is a Ruby-based regular expression editor. Its a handy way to test regular expressions as you write them. To start enter a regular expression and a test string." ID="ID_224177963" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
</node>
<node TEXT="Case Study Regular Expressions in text search and replace  Code#$D$#" FOLDED="true" ID="ID_665251269" CREATED="1566553719150" MODIFIED="1566553719150">
<icon BUILTIN="stop-sign"/>
<node TEXT="regex - Visual Studio Code Search and Replace with Regular " FOLDED="true" ID="ID_1151388684" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://stackoverflow.com/questions/43577528/visual-studio-code-search-and-replace-with-regular-expressions">
<node TEXT="So your goal is to search and replace? According to the Official Visual Studios keyboard shotcuts pdf you can press Ctrl + H on Windows and Linux  or &#xe2;&#x152;&#xa5;&#xe2;&#x152;&#x2dc;F on Mac to enable search and replace tool:" ID="ID_630120216" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Demystifying Regular Expressions in R - Rsquared Academy Blog" FOLDED="true" ID="ID_1261967230" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://blog.rsquaredacademy.com/regular-expression-in-r/">
<node TEXT="a regular expression is a special text for identifying a pattern; it can be used to search replace validate and extract strings matching a given pattern; use cases include email and password validation search and replace in text editors html tags validation web scraping etc." ID="ID_1143597108" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Search Text with Regular Expressions - SQL Server " FOLDED="true" ID="ID_846076466" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://docs.microsoft.com/en-us/sql/ssms/scripting/search-text-with-regular-expressions">
<node TEXT="Regular expressions are a concise and flexible notation for finding and replacing patterns of text. A specific set of regular expressions can be used in the Find what field of the SQL Server Management Studio Find and Replace dialog box. Any character. Matches any single character except a line " ID="ID_761811270" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Perl Text Patterns for Search and Replace" FOLDED="true" ID="ID_707649444" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://www.regular-expressions.info/perl.html">
<node TEXT="The Perl programming language originally designed for text-processing only is the main cause for the popularity that regular expressions enjoy nowadays. Mainly because Perls regex engine introduced many new powerful features and because regexes are part of the Perl syntax and not an add-on library as with most other languages." ID="ID_1478413633" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Search and Replace Regular Expressions - funduc.com" FOLDED="true" ID="ID_1573957700" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://www.funduc.com/regexp.htm">
<node TEXT="Search and Replace Regular Expressions. Search  Replace has extensive support for Regular Expressions for advanced search /or replace where the search string follows a rule and is not always exactly the same. Regular Expressions use special character operators which are symbols that control the search and an expression which is a combination of characters and operators that specifies " ID="ID_1512947757" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Quick-Start: Regex Cheat Sheet - rexegg.com" FOLDED="true" ID="ID_454736628" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://www.rexegg.com/regex-quickstart.html">
<node TEXT="The tables below are a reference to basic regex. While reading the rest of the site when in doubt you can always come back and look here. (It you want a bookmark heres a direct link to the regex reference tables).I encourage you to print the tables so you have a cheat sheet on your desk for quick reference." ID="ID_1517103917" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Using Regular Expressions for Search/Replace - codeguru.com" FOLDED="true" ID="ID_594707344" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://www.codeguru.com/cpp/cpp/string/regex/article.php/c2791/Using-Regular-Expressions-for-SearchReplace.htm">
<node TEXT="Using Regular Expressions for Search/Replace. Advertiser Disclosure.  We can extend this kind of search to a case insensitive search where the sub-string abc will find strings like Abc ABC etc. That is the case is ignored but the sequence of the letters should be exactly the same.  The code for regular expression search is given " ID="ID_1892804977" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="DO IT LIKE A PRO &#xe2;&#x20ac;&#x201c; Visual Studio find and replace" FOLDED="true" ID="ID_547570831" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://blog.goyello.com/2009/08/22/do-it-like-a-pro-visual-studio-find-and-replace/">
<node TEXT="Just press [CTRL] + [F] and you will see one of the most commonly used windows in Visual Studio &#xe2;&#x20ac;&#x201c; find and replace. I have been using it only for simple operations like searching simple strings and replacing them with other. Fortunately it has also very neat function which enables you to use Regular Expressions." ID="ID_950576346" CREATED="1566553719150" MODIFIED="1566553719150"/>
</node>
<node TEXT="Use regular expressions - Visual Studio | Microsoft Docs" FOLDED="true" ID="ID_1107392644" CREATED="1566553719150" MODIFIED="1566553719150" LINK="https://docs.microsoft.com/en-us/visualstudio/ide/using-regular-expressions-in-visual-studio">
<node TEXT="Use regular expressions in Visual Studio. 03/26/2018; 6 minutes to read +4; In this article. Visual Studio uses .NET regular expressions to find and replace text.. Regular expression examples. The following table contains some regular expression characters operators constructs and pattern examples." ID="ID_1086504388" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Find and replace text tags and attributes - Adobe" FOLDED="true" ID="ID_1528816860" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://helpx.adobe.com/dreamweaver/using/find-replace-text.html">
<node TEXT="Use Dreamweaver&#xe2;&#x20ac;&#x2122;s powerful find and replace features to find and replace code text or tags (with or without attributes) within a current document folder site or across all open documents. You can also use powerful pattern-matching algorithms (regular expressions) for sophisticated find-and-replace operations." ID="ID_494991882" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Find and replace text and multi-caret selection - Visual " FOLDED="true" ID="ID_856390879" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://docs.microsoft.com/en-us/visualstudio/ide/finding-and-replacing-text">
<node TEXT="In the Show settings for list select Text Editor and then in the Display items list select Find Highlight (Extension). Search tool windows. You can use the Find control in code or text windows such as Output windows and Find Results windows by selecting Edit  Find and Replace or pressing Ctrl+F." ID="ID_1592316973" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="String Manipulation in R | DataCamp" FOLDED="true" ID="ID_463134882" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://www.datacamp.com/courses/string-manipulation-in-r-with-stringr">
<node TEXT="String Manipulation in R with stringr.  match and split strings using regular expressions a powerful way to express patterns. 1 String basics Free  Practice your string manipulation skills on a couple of case studies. Youll also learn a few new skills reading strings into R and handling problems of case (e.g. " ID="ID_207664695" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="Context Free Grammars (CFG) and Languages " FOLDED="true" POSITION="right" ID="ID_1208610630" CREATED="1566881027629" MODIFIED="1566881027629" Folded="true">
<edge COLOR="#6bf67b"/>
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Introduction" ID="ID_1019086769" CREATED="1566881027629" MODIFIED="1566881027629" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="Regular Grammar" ID="ID_691117216" CREATED="1566881027629" MODIFIED="1566881027629" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="Context Free Grammar- Definition" ID="ID_364999247" CREATED="1566881027629" MODIFIED="1566881027629" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Context Free Grammars and Languages  Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1305221277" CREATED="1566553719151" MODIFIED="1566553719151">
<icon BUILTIN="stop-sign"/>
<node TEXT="Remarks on Visualizing BNF Grammars using Interactive SVG" FOLDED="true" ID="ID_181943089" CREATED="1566553719151" MODIFIED="1566553719151" LINK="http://www.svgopen.org/2014/abstracts/5-Remarks_on_Visualizing_BNF_Grammars_using_Interactive_SVG/InteractiveSyntaxDiagramsLecture.pdf">
<node TEXT="Remarks on Visualizing BNF Grammars using Interactive SVG August 27-30 2014 Winchester England Visual Storytelling  - is visualization more comprehensive than written text?  BNF (Backus Naur Form) is a meta language to define exactly the grammar of a context-free language. Often parsers are derived from the BNF. Most of the time an " ID="ID_1078020168" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Context Free Languages | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1973261206" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://brilliant.org/wiki/context-free-languages/">
<node TEXT="Context-free languages (CFLs) are generated by context-free grammars. The set of all context-free languages is identical to the set of languages accepted by pushdown automata and the set of regular languages is a subset of context-free languages. An inputed language is accepted by a computational model if it runs through the model and ends in an accepting final state." ID="ID_966065873" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Context Free Grammar  Context Free Language - YouTube" FOLDED="true" ID="ID_312472239" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://www.youtube.com/watch?v=5_tfVe7ED3g">
<node TEXT="TOC: Context Free Language Topics Discussed: 1. Context Free Language 2. Context Free Grammar 3. Example of CFL generated using Context Free Grammar Contribu" ID="ID_595667390" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Understanding Context-free Grammars through Data Visualization" FOLDED="true" ID="ID_597807081" CREATED="1566553719151" MODIFIED="1566553719151" LINK="http://www.diva-portal.se/smash/get/diva2:934721/FULLTEXT01.pdf">
<node TEXT="context-free grammars parse sentences and visualize the output. A user experience study with usability-tests and user-interviews is conducted in order to investigate the possible bene&#xef;&#xac;&#xfffd;ts and disadvantages of said visualization when writing context-free grammars. The results show that data visualization was" ID="ID_704844774" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Context-Free Grammars - cs.rochester.edu" FOLDED="true" ID="ID_1399297526" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://www.cs.rochester.edu/~nelson/courses/csc_173/grammars/cfg.html">
<node TEXT="Context-Free Grammars. A context-free grammar (CFG) is a set of recursive rewriting rules (or productions) used to generate patterns of strings. A CFG consists of the following components: a set of terminal symbols which are the characters of the alphabet that appear in the strings generated by the grammar." ID="ID_293689572" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="(PDF) CGM: A context-free grammar manipulator | Nelma " FOLDED="true" ID="ID_558692213" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://www.academia.edu/2757457/CGM_A_context-free_grammar_manipulator">
<node TEXT="The context-free grammar manipulator now presented allows the editing of a context-free grammar the conversion to Chomsky normal form word parsing ? This work was partially funded by Funda&#xc2;&#xb8;ca &#xcb;&#x153;o para a Ci&#xcb;&#x2020;encia e Tecnologia (FCT) and Program POSI. and the (interactive) construction of parse trees." ID="ID_594360626" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="AN INTERACTIVE PARSER GENERATOR FOR CONTEXT-FREE GRAMMARS " FOLDED="true" ID="ID_1192032971" CREATED="1566553719151" MODIFIED="1566553719151" LINK="http://ozark.hendrix.edu/~ferrer/research/papers/InteractiveParser.pdf">
<node TEXT="AN INTERACTIVE PARSER GENERATOR FOR CONTEXT-FREE GRAMMARS Gabriel J. Ferrer Department of Mathematics and Computer Science Hendrix College  To demonstrate the input language for context-free grammars Figure 1 gives as an  (similar to the visualization from [10]). Each row of the text output is a tree node." ID="ID_955822745" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="CGM: A context-free grammar manipulator" FOLDED="true" ID="ID_1548016076" CREATED="1566553719151" MODIFIED="1566553719151" LINK="http://www.dcc.fc.up.pt/~nam/publica/cgm.pdf">
<node TEXT="that grammars are non-ambiguous (otherwise several semantics can be given to a word). E cient (linear) parsing algorithms are well-known for sub-classes of context-free languages as the ones generated by LR-grammars [ASU86]. Here we wanted a parser for a generic context-free grammar that would allow the interactive construction of parse trees." ID="ID_102847997" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Increasing Visualization and Interaction - Duke University" FOLDED="true" ID="ID_1788947807" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://users.cs.duke.edu/~rodger/papers/cse00/cse00fin.html">
<node TEXT="The proofs include construction type proofs where one representation of a language is converted to another representation such as proving that context-free grammars (CFG) and pushdown automata (PDA) both represent context-free languages. Visualization provides students with an alternative view in addition to the theoretical representation that " ID="ID_258771415" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Simplification of CFG (Reduction of CFG) - YouTube" FOLDED="true" ID="ID_598979263" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://www.youtube.com/watch?v=EF09zxzpVbk">
<node TEXT="TOC: Simplification of CFG (Reduction of CFG) This Lecture shows how to Simplify a given CFG and explains the Phases involved in the Reduction step. Contribu" ID="ID_1217736255" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="An Interactive Visualisation for Definite Clause Grammars" FOLDED="true" ID="ID_142047718" CREATED="1566553719151" MODIFIED="1566553719151" LINK="http://www1.pub.informatik.uni-wuerzburg.de/pub/theses/2017-kalkus-master.pdf">
<node TEXT="or utilising the XML2 schema de&#xef;&#xac;&#xfffd;nition language to validate XML data  One convenient way to describe lists in Prolog are De&#xef;&#xac;&#xfffd;nite Clause Grammars (DCGs). These are an extension of context-free grammars and wereintroducedin1980byF.PereiraandD.Warren[PW80].  ducedaGraphical Interactive Diagnosing Testing and Slicing System (GIDTS) in " ID="ID_298760392" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Visual and Interactive Tools - users.cs.duke.edu" FOLDED="true" ID="ID_1763738182" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://users.cs.duke.edu/~rodger/tools/">
<node TEXT="Visual and Interactive Tools .  P&#xc3;&#xa2;t&#xc3;&#xa9; - A tool for parsing restricted and unrestricted grammars and transforming context-free grammers to CNF. - New version of pate is now available (March 2000)  A tool for experimenting with the Pumping Lemma for regular languages and context-free languages - This is a very old tool from about 1997 and " ID="ID_1899609601" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
</node>
<node TEXT="Context Free Grammars and Languages  Code#$D$#" FOLDED="true" ID="ID_1549757526" CREATED="1566553719151" MODIFIED="1566553719151">
<icon BUILTIN="stop-sign"/>
<node TEXT="Context-free grammar - Wikipedia" FOLDED="true" ID="ID_1579450967" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://en.wikipedia.org/wiki/Context-free_grammar">
<node TEXT="Context-free grammars are a special form of Semi-Thue systems that in their general form date back to the work of Axel Thue. The formalism of context-free grammars was developed in the mid-1950s by Noam Chomsky and also their classification as a special type of formal grammar (which he called phrase-structure grammars)." ID="ID_1509381216" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Context-Free Grammar | Daniel Shiffman" FOLDED="true" ID="ID_526798954" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://shiffman.net/a2z/cfg/">
<node TEXT="A Context-Free Grammar is a set of rules that define the syntax of a language &#xe2;&#x20ac;&#x201d; what is and is not a valid sequence of &#xe2;&#x20ac;&#x153;tokens&#xe2;&#x20ac;&#xfffd;. Programming languages for example are context-free grammars &#xe2;&#x20ac;&#x201d; a compiler reads your code to make sure it conforms to specific rules and informs you of any errors." ID="ID_656777008" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Classification of Context Free Grammars - GeeksforGeeks" FOLDED="true" ID="ID_1278622968" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://www.geeksforgeeks.org/classification-of-context-free-grammars/">
<node TEXT="Context Free Grammars (CFG) can be classified on the basis of following two properties: 1) Based on number of strings it generates. During Compilation the parser uses the grammar of the language to make a parse tree(or derivation tree) out of the source code. The grammar used must be unambiguous " ID="ID_437112810" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Grammars for programming languages - Mikhail Barash - Medium" FOLDED="true" ID="ID_873279230" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://medium.com/@mikhail.barash.mikbar/grammars-for-programming-languages-fae3a72a22c6">
<node TEXT="When syntax of programming languages is communicated context-free grammars are a lingua franca. They define structure of syntax but cannot express static semantics. This post gives an overview of&#xe2;&#x20ac;&#xa6;" ID="ID_209845269" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Context Free Languages | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1149384813" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://brilliant.org/wiki/context-free-languages/">
<node TEXT="Context-free languages (CFLs) are generated by context-free grammars. The set of all context-free languages is identical to the set of languages accepted by pushdown automata and the set of regular languages is a subset of context-free languages. An inputed language is accepted by a computational model if it runs through the model and ends in an accepting final state." ID="ID_276297478" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Context-free Languages: Grammars and Automata" FOLDED="true" ID="ID_1430867460" CREATED="1566553719151" MODIFIED="1566553719151" LINK="http://web.cecs.pdx.edu/~black/CS311/Lecture%20Notes/Context-free%20langauges.pdf">
<node TEXT="Context-free languages more general than regular languages &#xe2;&#x20ac;&#xa2; {anbn | n &#xe2;&#x2030;&#xa5; 0} is not regular &#xe2;&#x20ac;&#xa3; but it is context-free &#xe2;&#x20ac;&#xa2; Why are they called &#xe2;&#x20ac;&#x153;context-free&#xe2;&#x20ac;&#xfffd;? &#xe2;&#x20ac;&#xa3; Context-sensitive grammars allow more than one symbol on the lhs of productions &#xc2;&#xb0; xAy &#xe2;&#x2020;&#x2019; x(S)y can only be applied to the non-terminal A when it is in the context of x and y 5" ID="ID_67060677" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="What programming languages are context-free? - Stack Overflow" FOLDED="true" ID="ID_1130561271" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://stackoverflow.com/questions/898489/what-programming-languages-are-context-free">
<node TEXT="Or to be a little more precise: which programming languages are defined by a context-free grammar? From what I gather C++ is not context-free due to things like macros and templates. My gut tells me that functional languages might be context free but I dont have any hard data to back that up with. Extra rep for concise examples :-)" ID="ID_344604298" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Context-Free Grammars - cs.rochester.edu" FOLDED="true" ID="ID_1982972777" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://www.cs.rochester.edu/~nelson/courses/csc_173/grammars/cfg.html">
<node TEXT="Context-Free Grammars. A context-free grammar (CFG) is a set of recursive rewriting rules (or productions) used to generate patterns of strings. A CFG consists of the following components: a set of terminal symbols which are the characters of the alphabet that appear in the strings generated by the grammar." ID="ID_121557648" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Context-FreeGrammars" FOLDED="true" ID="ID_1902686647" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://people.cs.clemson.edu/~goddard/texts/theoryOfComputation/6a.pdf">
<node TEXT="A context-free grammar (CFG) consists of a set of productions that you use to replace a vari-able by a string of variables and terminals. The language of a grammar is the set of strings it generates. A language is context-free if there is a CFG for it. Goddard 6a: 20" ID="ID_1602304162" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Backus&#xe2;&#x20ac;&#x201c;Naur form - Wikipedia" FOLDED="true" ID="ID_267837305" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form">
<node TEXT="In computer science Backus&#xe2;&#x20ac;&#x201c;Naur form or Backus normal form (BNF) is a notation technique for context-free grammars often used to describe the syntax of languages used in computing such as computer programming languages document formats instruction sets and communication protocols.They are applied wherever exact descriptions of languages are needed: for instance in official language " ID="ID_718632276" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Context Free Grammar  Context Free Language - YouTube" FOLDED="true" ID="ID_878469169" CREATED="1566553719151" MODIFIED="1566553719151" LINK="https://www.youtube.com/watch?v=5_tfVe7ED3g">
<node TEXT="TOC: Context Free Language Topics Discussed: 1. Context Free Language 2. Context Free Grammar 3. Example of CFL generated using Context Free Grammar Contribu" ID="ID_853499719" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
<node TEXT="Context-Free Grammars and Languages" FOLDED="true" ID="ID_349773450" CREATED="1566553719151" MODIFIED="1566553719151" LINK="http://www.cs.wichita.edu/~sinha/teaching/fall17/cs720/slide/cfg1.pdf">
<node TEXT="Limitations of nite automata I There are languages such as f0n1njn 0gthat cannot be described (speci ed) by nite automata or regular expressions I Context-free grammars provide a more powerful mechanism for language speci cation I Context-free grammars can describe features that have a recursive structure making them useful beyond nite automata" ID="ID_1616905375" CREATED="1566553719151" MODIFIED="1566553719151"/>
</node>
</node>
<node TEXT="Context Free Grammar Definition Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1202288514" CREATED="1566553719152" MODIFIED="1566553719152">
<icon BUILTIN="stop-sign"/>
<node TEXT="Context Free Grammar Visualization Using SVG - svgopen.org" FOLDED="true" ID="ID_1803311186" CREATED="1566553719152" MODIFIED="1566553719152" LINK="http://www.svgopen.org/2009/papers/58-Interactive_Documentation_using_JavaScript_and_SVG/">
<node TEXT="Context free grammars are used to describe formal languages in computer science. The most common format for Context Free Grammar representation is the Backus-Naur Form or BNF for short. A BNF consists of a set of production rules - each rule describes a single part of the language." ID="ID_103414457" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Context-Free Grammars - cs.rochester.edu" FOLDED="true" ID="ID_818376754" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://www.cs.rochester.edu/~nelson/courses/csc_173/grammars/cfg.html">
<node TEXT="Context-Free Grammars. A context-free grammar (CFG) is a set of recursive rewriting rules (or productions) used to generate patterns of strings. A CFG consists of the following components: a set of terminal symbols which are the characters of the alphabet that appear in the strings generated by the grammar." ID="ID_176824739" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Understanding Context-free Grammars through Data Visualization" FOLDED="true" ID="ID_350720179" CREATED="1566553719152" MODIFIED="1566553719152" LINK="http://su.diva-portal.org/smash/get/diva2:934721/FULLTEXT01.pdf">
<node TEXT="Understanding Context-free Grammars through Data Visualization Abstract Ever since the late 1950&#xe2;&#x20ac;&#x2122;s context-free grammars have played an important role within the &#xef;&#xac;&#xfffd;eld of linguistics been a part of introductory courses and expanded into other &#xef;&#xac;&#xfffd;elds of study. Meanwhile data" ID="ID_1951412247" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Context Free Grammars | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_886398370" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://brilliant.org/wiki/context-free-grammars/">
<node TEXT="Context-free grammars (CFGs) are used to describe context-free languages. A context-free grammar is a set of recursive rules used to generate patterns of strings. A context-free grammar can describe all regular languages and more but they cannot describe all possible languages. Context-free grammars are studied in fields of theoretical computer science compiler design and linguistics." ID="ID_675658627" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Definition: Context-Free Grammars - YouTube" FOLDED="true" ID="ID_1585539905" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://www.youtube.com/watch?v=I6K-QuE87NM">
<node TEXT="A short definition of context-free grammars.  The interactive transcript could not be loaded.  #32 CONTEXT FREE GRAMMAR Examples in Automata " ID="ID_1394196619" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Context Free Grammar  Context Free Language - YouTube" FOLDED="true" ID="ID_1751178966" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://www.youtube.com/watch?v=5_tfVe7ED3g">
<node TEXT="TOC: Context Free Language Topics Discussed: 1. Context Free Language 2. Context Free Grammar 3. Example of CFL generated using Context Free Grammar Contribu" ID="ID_884019233" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="(PDF) CGM: A context-free grammar manipulator | Nelma " FOLDED="true" ID="ID_1093720581" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://www.academia.edu/2757457/CGM_A_context-free_grammar_manipulator">
<node TEXT="The context-free grammar manipulator now presented allows the editing of a context-free grammar the conversion to Chomsky normal form word parsing ? This work was partially funded by Funda&#xc2;&#xb8;ca &#xcb;&#x153;o para a Ci&#xcb;&#x2020;encia e Tecnologia (FCT) and Program POSI. and the (interactive) construction of parse trees." ID="ID_1613087575" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="AN INTERACTIVE PARSER GENERATOR FOR CONTEXT-FREE GRAMMARS " FOLDED="true" ID="ID_1822333657" CREATED="1566553719152" MODIFIED="1566553719152" LINK="http://ozark.hendrix.edu/~ferrer/research/papers/InteractiveParser.pdf">
<node TEXT="AN INTERACTIVE PARSER GENERATOR FOR CONTEXT-FREE GRAMMARS Gabriel J. Ferrer Department of Mathematics and Computer Science  arbitrary context-free grammar and it will generate a Java class that corresponds to that  (similar to the visualization from [10]). Each row of the text output is a tree node." ID="ID_483108083" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Transform Grammar - JFLAP" FOLDED="true" ID="ID_838927198" CREATED="1566553719152" MODIFIED="1566553719152" LINK="http://www.jflap.org/tutorial/grammar/transform/index.html">
<node TEXT="Definition. The Chomsky Normal Form (CNF) for a context-free grammar has a restricted format in that the right-side of a production has either two variables or one terminal. CNFs restrictions result in many efficient algorithms such as improving speed in Brute Force parsing. How to Transform a Context-Free Grammar into CNF" ID="ID_1280304083" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Diagram - Wikipedia" FOLDED="true" ID="ID_471310595" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://en.wikipedia.org/wiki/Diagrams">
<node TEXT="A diagram is a symbolic representation of information using visualization techniques. Diagrams have been used since ancient times but became more prevalent during the Enlightenment. Sometimes the technique uses a three-dimensional visualization which is then projected onto a two-dimensional surface. The word graph is sometimes used as a synonym for diagram." ID="ID_716383254" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Increasing Visualization and Interaction - Duke University" FOLDED="true" ID="ID_200674347" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://users.cs.duke.edu/~rodger/papers/cse00/cse00fin.html">
<node TEXT="Pate is a parser for restricted and unrestricted grammars and a grammar transformer from a context-free grammar to Chomsky Normal Form (CNF). Given a grammar and an input string the parser is an exhaustive search parser that builds a derivation tree (not displayed) of all possible derivations in a breadth-first manner." ID="ID_106301923" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Context Free Languages | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_4534189" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://brilliant.org/wiki/context-free-languages/">
<node TEXT="Context-free languages (CFLs) are generated by context-free grammars. The set of all context-free languages is identical to the set of languages accepted by pushdown automata and the set of regular languages is a subset of context-free languages. An inputed language is accepted by a computational model if it runs through the model and ends in an accepting final state." ID="ID_630235731" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
</node>
<node TEXT="Context Free Grammar Definition Code#$D$#" FOLDED="true" ID="ID_1904216273" CREATED="1566553719152" MODIFIED="1566553719152">
<icon BUILTIN="stop-sign"/>
<node TEXT="Context-free grammar - Wikipedia" FOLDED="true" ID="ID_1833040519" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://en.wikipedia.org/wiki/Context-free_grammar">
<node TEXT="An extended context-free grammar (or regular right part grammar) is one in which the right-hand side of the production rules is allowed to be a regular expression over the grammars terminals and nonterminals. Extended context-free grammars describe exactly the context-free languages." ID="ID_1328478290" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Context-Free Grammar | Daniel Shiffman" FOLDED="true" ID="ID_1112879352" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://shiffman.net/a2z/cfg/">
<node TEXT="Here I will demontrate how to use libraries to generate text with a Context Free Grammar as well as program your own from scratch. want to learn how to define our own context free grammars and generate text from them. I&#xe2;&#x20ac;&#x2122;m going to give a short explanations followed by code examples." ID="ID_1767679596" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Classification of Context Free Grammars - GeeksforGeeks" FOLDED="true" ID="ID_1594141850" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://www.geeksforgeeks.org/classification-of-context-free-grammars/">
<node TEXT="Context Free Grammars (CFG) can be classified on the basis of following two properties: 1) Based on number of strings it generates. During Compilation the parser uses the grammar of the language to make a parse tree(or derivation tree) out of the source code. The grammar used must be unambiguous " ID="ID_1066154241" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="What does context-free grammar mean? - Definitions.net" FOLDED="true" ID="ID_454315944" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://www.definitions.net/definition/context-free%20grammar">
<node TEXT="Definition of context-free grammar in the Definitions.net dictionary. Meaning of context-free grammar. What does context-free grammar mean? Information and translations of context-free grammar in the most comprehensive dictionary definitions resource on the web." ID="ID_1445106599" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Pushdown automaton - Wikipedia" FOLDED="true" ID="ID_1445095711" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://en.wikipedia.org/wiki/Pushdown_automaton">
<node TEXT="For a context-free grammar in Greibach normal form defining (1&#xce;&#xb3;) &#xe2;&#x2c6;&#x2c6; &#xce;&#xb4;(1aA) for each grammar rule A &#xe2;&#x2020;&#x2019; a&#xce;&#xb3; also yields an equivalent nondeterministic pushdown automaton.: 115. The converse finding a grammar for a given PDA is not that easy. The trick is to code two states of the PDA into the nonterminals of the grammar. Theorem." ID="ID_1173365661" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Context-Free Grammars - cs.rochester.edu" FOLDED="true" ID="ID_238293554" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://www.cs.rochester.edu/~nelson/courses/csc_173/grammars/cfg.html">
<node TEXT="Context-Free Grammars. A context-free grammar (CFG) is a set of recursive rewriting rules (or productions) used to generate patterns of strings. A CFG consists of the following components: a set of terminal symbols which are the characters of the alphabet that appear in the strings generated by the grammar." ID="ID_1830791823" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="syntax - Is C++ context-free or context-sensitive? - Stack " FOLDED="true" ID="ID_429015142" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://stackoverflow.com/questions/14589346/is-c-context-free-or-context-sensitive">
<node TEXT="Even if a language can be proven to have no unambiguous grammars if it can be recognized by a context-free grammar its context-free. Similarly if it cannot be recognized by a context-free grammar but it can be recognized by a context-sensitive grammar its context-sensitive. Ambiguity is not relevant." ID="ID_885641668" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Context Free Grammars | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1512144921" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://brilliant.org/wiki/context-free-grammars/">
<node TEXT="Context-free grammars (CFGs) are used to describe context-free languages. A context-free grammar is a set of recursive rules used to generate patterns of strings. A context-free grammar can describe all regular languages and more but they cannot describe all possible languages. Context-free grammars are studied in fields of theoretical computer science compiler design and linguistics." ID="ID_1245001097" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Context Free Languages | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1034044344" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://brilliant.org/wiki/context-free-languages/">
<node TEXT="Context-free languages (CFLs) are generated by context-free grammars. The set of all context-free languages is identical to the set of languages accepted by pushdown automata and the set of regular languages is a subset of context-free languages. An inputed language is accepted by a computational model if it runs through the model and ends in an accepting final state." ID="ID_1404241692" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Context-Free Grammar Introduction - tutorialspoint.com" FOLDED="true" ID="ID_1054608867" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://www.tutorialspoint.com/automata_theory/context_free_grammar_introduction">
<node TEXT="Definition &#xe2;&#x2c6;&#x2019; A context-free grammar (CFG) consisting of a finite set of grammar rules is a quadruple (N T P S) where. N is a set of non-terminal symbols. T is a set of terminals where N &#xe2;&#x2c6;&#xa9; T = NULL. P is a set of rules P: N &#xe2;&#x2020;&#x2019; (N &#xe2;&#x2c6;&#xaa; T)* i.e. the left-hand side of the production rule P does have any right context or left context." ID="ID_747177114" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Backus&#xe2;&#x20ac;&#x201c;Naur form - Wikipedia" FOLDED="true" ID="ID_1409906242" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form">
<node TEXT="In computer science Backus&#xe2;&#x20ac;&#x201c;Naur form or Backus normal form (BNF) is a notation technique for context-free grammars often used to describe the syntax of languages used in computing such as computer programming languages document formats instruction sets and communication protocols.They are applied wherever exact descriptions of languages are needed: for instance in official language " ID="ID_339338627" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
<node TEXT="Chapter 2. Grammars - Oracle" FOLDED="true" ID="ID_800818033" CREATED="1566553719152" MODIFIED="1566553719152" LINK="https://docs.oracle.com/javase/specs/jls/se7/html/jls-2.html">
<node TEXT="A context-free grammar consists of a number of productions.Each production has an abstract symbol called a nonterminal as its left-hand side and a sequence of one or more nonterminal and terminal symbols as its right-hand side.For each grammar the terminal symbols are drawn from a specified alphabet." ID="ID_159035006" CREATED="1566553719152" MODIFIED="1566553719152"/>
</node>
</node>
<node TEXT="Simplification of Context Free Grammar useless production Interactive Visualisation#$D$#" FOLDED="true" ID="ID_544298017" CREATED="1566553719157" MODIFIED="1566553719157">
<icon BUILTIN="stop-sign"/>
<node TEXT="Simplification of CFG (Reduction of CFG) - YouTube" FOLDED="true" ID="ID_1765757274" CREATED="1566553719157" MODIFIED="1566553719157" LINK="https://www.youtube.com/watch?v=EF09zxzpVbk">
<node TEXT="TOC: Simplification of CFG (Reduction of CFG) This Lecture shows how to Simplify a given CFG and explains the Phases involved in the Reduction step. Contribu" ID="ID_888490562" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="Simplification Of CFG Part-1 | Elimination of useless " FOLDED="true" ID="ID_410098832" CREATED="1566553719157" MODIFIED="1566553719157" LINK="https://www.youtube.com/watch?v=QF-qh454M1k">
<node TEXT="Please feel free to get in touch with me :) If it helped you please like my facebook page and dont forget to subscribe to Last Minute Tutorials. Thaaank Yo" ID="ID_412540001" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="PPT &#xe2;&#x20ac;&#x201c; Simplifications of ContextFree Grammars PowerPoint " FOLDED="true" ID="ID_1986235442" CREATED="1566553719157" MODIFIED="1566553719157" LINK="http://www.powershow.com/view1/17f827-ZDc1Z/Simplifications_of_ContextFree_Grammars_powerpoint_ppt_presentation">
<node TEXT="Courtesy Costas Buch - RPI. 1. Simplifications. of. Context-Free Grammars  Courtesy Costas Buch - RPI. 18. A production is useless. if any of its variables  &#xe2;&#x20ac;&#x201c; A free PowerPoint PPT presentation (displayed as a Flash slide show) on PowerShow.com - id: 17f827-ZDc1Z" ID="ID_1021901940" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="Context Free Grammars CFG - girdhargopalbansal.blogspot.com" FOLDED="true" ID="ID_1320544986" CREATED="1566553719157" MODIFIED="1566553719157" LINK="https://girdhargopalbansal.blogspot.com/2013/06/context-free-grammars-cfg.html">
<node TEXT="Every vertical connection must be tracable to a production. CFG simplification algorithm The goal here is to take an arbitrary Context Free Grammar G = (V T P S) and perform transformations on the grammar that preserve the language generated by the grammar but reach a specific format for the productions." ID="ID_1040011838" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="Removing Useless Productions of a Context Free Grammar " FOLDED="true" ID="ID_1576562424" CREATED="1566553719157" MODIFIED="1566553719157" LINK="https://www.academia.edu/5233444/Removing_Useless_Productions_of_a_Context_Free_Grammar_through_Petri_Net">
<node TEXT="A context free grammar may have &#xce;&#xbb; production or * The output places are labeled from VT &#xe2;&#x2c6;&#xaa; {&#xce;&#xbb;}. unit productions. These productions make the grammar * The intermediate places have labels from VN. odd and difficult to parse. The useless productions have * Production rules are represented by transitions." ID="ID_911190458" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="Removing Useless Productions of a Context Free Grammar " FOLDED="true" ID="ID_211092810" CREATED="1566553719157" MODIFIED="1566553719157" LINK="https://www.researchgate.net/publication/26621608_Removing_Useless_Productions_of_a_Context_Free_Grammar_through_Petri_Net">
<node TEXT="PDF | Following the proposal for a Petri Net (PN) representation of the Context Free Grammar (CFG)[1] we propose in this paper an algorithm to eliminate the useless productions of CFG. First the " ID="ID_554240637" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="Real Computer Science begins where we almost stop reading " FOLDED="true" ID="ID_423262194" CREATED="1566553719157" MODIFIED="1566553719157" LINK="https://girdhargopalbansal.blogspot.com/2013/01/toc-chapter-2.html">
<node TEXT="Context-free grammars can be put in simple forms. The simplification is done on productions and symbols of the grammar. Such simplified grammars should be equivalent to the original grammars started with. Such simplifications on CFGs are important as CFGs have wide applications in compilers." ID="ID_189398566" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="7 Context Free Grammars and Parsing - SourceForge" FOLDED="true" ID="ID_858072666" CREATED="1566553719158" MODIFIED="1566553719158" LINK="http://nltk.sourceforge.net/doc/en/ch07.html">
<node TEXT="A grammar is a formal system that specifies which sequences of words are well-formed in the language and that provides one or more phrase structures for well-formed sequences. We will be looking at context-free grammar (CFG) which is a collection of productions of the form s &#xe2;&#x2020;&#x2019; np vp." ID="ID_1241910565" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="Increasing Engagement in Automata Theory with JFLAP" FOLDED="true" ID="ID_1229740516" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://users.cs.duke.edu/~rodger/talks/talkDuke09VizWorkshop/talkduke09VizWkshop.pptx">
<node TEXT="Increasing Engagement in Automata Theory with JFLAP. Susan H. Rodger. Duke University. rodger@cs.duke.edu.  Context-free grammar. Pumping Lemma. Transform. PDA CFG. CFG PDA (LL  SLR parser)  Present FLA in a visual and interactive manner in addition to the more traditional approach." ID="ID_629742103" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="Increasing Visualization and Interaction" FOLDED="true" ID="ID_1423912793" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://users.cs.duke.edu/~rodger/papers/cse00/cse00fin.html">
<node TEXT="Pate is a parser for restricted and unrestricted grammars and a grammar transformer from a context-free grammar to Chomsky Normal Form (CNF). Given a grammar and an input string the parser is an exhaustive search parser that builds a derivation tree (not displayed) of all possible derivations in a breadth-first manner." ID="ID_1570879736" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="APLIKASI PENYEDERHANAAN CONTEXT FREE GRAMMAR" FOLDED="true" ID="ID_1305761848" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://id.123dok.com/document/dy4mm49y-aplikasi-penyederhanaan-context-free-grammar.html">
<node TEXT="The result shows that the application can simplify Context Free Grammar smoothly and how to simplify Context Free Grammar step by step. Context Free Grammar (CFG) simplification has three stages eliminating espsilon production eliminating unit production and eliminating useless production those three stages must be done sequentially." ID="ID_1840614577" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="(PDF) JFLAP Activities for Formal Languages and Automata " FOLDED="true" ID="ID_533922413" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://www.academia.edu/2792488/JFLAP_Activities_for_Formal_Languages_and_Automata">
<node TEXT="2.5 Context-Free Grammars (Chapters 5 and 6) Questions about context-free grammars are generally much harder than the corresponding questions for finite automata and regular languages. There is for example no guaranteed way of showing that two context-free grammars are equivalent." ID="ID_890870025" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
</node>
<node TEXT="Simplification of Context Free Grammar useless production Code#$D$#" FOLDED="true" ID="ID_938669055" CREATED="1566553719158" MODIFIED="1566553719158">
<icon BUILTIN="stop-sign"/>
<node TEXT="Simplification of CFG (Removal of Unit Productions) - YouTube" FOLDED="true" ID="ID_1375224084" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://www.youtube.com/watch?v=B2o75KpzfU4">
<node TEXT="TOC: Simplification of CFG (Removal of Unit Productions) This Lecture shows how to Simplify a given CFG by removing the Unit Productions. Contribute: http://" ID="ID_1984398024" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="Simplifying Context Free Grammars - GeeksforGeeks" FOLDED="true" ID="ID_773556613" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://www.geeksforgeeks.org/simplifying-context-free-grammars/">
<node TEXT="The definition of context free grammars (CFGs) allows us to develop a wide variety of grammars. Most of the time some of the productions of CFGs are not useful and are redundant. This happens because the definition of CFGs does not restrict us from making these redundant productions. By simplifying " ID="ID_1465544880" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="Simplification Of CFG Part-1 | Elimination of useless " FOLDED="true" ID="ID_1597462343" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://www.youtube.com/watch?v=QF-qh454M1k">
<node TEXT="Please feel free to get in touch with me :) If it helped you please like my facebook page and dont forget to subscribe to Last Minute Tutorials. Thaaank Yo" ID="ID_572435439" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="CFG Simplification - tutorialspoint.com" FOLDED="true" ID="ID_266545090" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://www.tutorialspoint.com/automata_theory/cfg_simplification">
<node TEXT="In a CFG it may happen that all the production rules and symbols are not needed for the derivation of strings. Besides there may be some null productions and unit productions. Elimination of these productions and symbols is called simplification of CFGs. Simplification essentially comprises of the " ID="ID_1874082314" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="Elimination of Useless production/symbols from context " FOLDED="true" ID="ID_38239977" CREATED="1566553719158" MODIFIED="1566553719158" LINK="http://scanftree.com/automata/elimination-of-useless-symbol-from-context-free-grammar">
<node TEXT="Elimination of Useless production/symbols from context free grammar. Condition of Useless Symbol : We will entitle any variable useful only when it is deriving any terminal. And also if a symbol is deriving a termial but not reachable from Start state. Note: All terminals will be useful symbols" ID="ID_99043718" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="Simplification of Context Free Grammars - edurev.in" FOLDED="true" ID="ID_528064595" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://edurev.in/studytube/Simplification-of-Context-Free-Grammars-Theory-of-/aa9f1cb1-acd2-42b7-9e9c-bdb1a07a2698_t">
<node TEXT="Computer Science Engineering (CSE) Simplification of Context Free Grammars - Theory of Computation Summary and Exercise are very important for perfect preparation. You can see some Simplification of Context Free Grammars - Theory of Computation sample questions with examples at the bottom of this page." ID="ID_1278957709" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="formal languages - Context Free Grammar Useless " FOLDED="true" ID="ID_1753529049" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://math.stackexchange.com/q/1975193">
<node TEXT="I am learning about context-free grammar simplification by the process of removing useless production rules because they are either unreachable or never terminate and I began to wonder why the usel" ID="ID_1247295444" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="Simplifications Context-Free Grammars - Academics | WPI" FOLDED="true" ID="ID_1999869750" CREATED="1566553719158" MODIFIED="1566553719158" LINK="http://web.cs.wpi.edu/~kal/courses/fcs/module7/grahneclass9.pdf">
<node TEXT="Useless Production. Fall 2004 COMP 335 16 B bA A  form for any context-free grammar . Fall 2004 COMP 335 39 Greibach Normal Form All productions have form: A " ID="ID_896093062" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="Simplification of Context free grammar - S plifications im " FOLDED="true" ID="ID_730974786" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://www.coursehero.com/file/6090575/Simplification-of-Context-free-grammar/">
<node TEXT="View Notes - Simplification of Context free grammar from CSI 301 at American University of Science  Tech. S plifications im of C xt-Fre Gram ars onte e m 1 AS ubstitution Rule S &#xe2;&#x2020;&#x2019; aB A &#xe2;&#x2020;&#x2019; aaA A" ID="ID_1358026110" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="Lecture 12 Simplification of Context-Free Grammars and " FOLDED="true" ID="ID_1037527717" CREATED="1566553719158" MODIFIED="1566553719158" LINK="http://www.cs.fsu.edu/~sudhir/courses/2019scot4420/Sup12.pdf">
<node TEXT="Simplification of Context-Free Grammars and Normal Forms COT 4420 Theory of Computation. Lecture 12.  The new grammar has a production A &#xe2;&#x2020;&#x2019;  Then there exist a context-free grammar that generates L and does not have any useless productions &#xce;&#xbb;-productions or unit-productions. " ID="ID_1417637535" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="Chomsky Normal Form - tutorialspoint.com" FOLDED="true" ID="ID_1787896827" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://www.tutorialspoint.com/automata_theory/chomsky_normal_form">
<node TEXT="Chomsky Normal Form - Learn Automata concepts in simple and easy steps starting from Introduction Deterministic Finite Automata Non-Deterministic Finite Automata NDFA to DFA Conversion DFA Minimization Moore and Mealy Machines Introduction to Grammars Language Generated by Grammars Chomsky Grammar Classification Regular Expressions Regular Sets Ardens Theorem Constructing FA from " ID="ID_1073443182" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="Simplification of context-free grammar through Petri net " FOLDED="true" ID="ID_1336067571" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://www.sciencedirect.com/science/article/pii/004579499500422X">
<node TEXT="The OPN presentation is shown in Fig. 1. Simplification of a context-free grammar through Petri net Before developing the algorithms to simplify a given CFG through PN some notations that require explanation and clear exposition are given below: (1) P is the set of places corresponding to the variables and terminals. \P\ =\(V^uV-[)\." ID="ID_602177364" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
</node>
<node TEXT="Simplification of Context Free Grammar useless symbols Interactive Visualisation#$D$#" FOLDED="true" ID="ID_987016552" CREATED="1566553719158" MODIFIED="1566553719158">
<icon BUILTIN="stop-sign"/>
<node TEXT="Simplification Of CFG Part-1 | Elimination of useless " FOLDED="true" ID="ID_1211135690" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://www.youtube.com/watch?v=QF-qh454M1k">
<node TEXT="Please feel free to get in touch with me :) If it helped you please like my facebook page and dont forget to subscribe to Last Minute Tutorials. Thaaank Yo" ID="ID_347079330" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="Simplification of CFG (Reduction of CFG) - YouTube" FOLDED="true" ID="ID_988741524" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://www.youtube.com/watch?v=EF09zxzpVbk">
<node TEXT="TOC: Simplification of CFG (Reduction of CFG) This Lecture shows how to Simplify a given CFG and explains the Phases involved in the Reduction step. Contribu" ID="ID_111349596" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="Formalization of simplification for context-free grammars " FOLDED="true" ID="ID_736890844" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://www.researchgate.net/publication/281607740_Formalization_of_simplification_for_context-free_grammars">
<node TEXT="This in turn demands the formalization of context-free grammar simplification (useless and inaccessible symbol elimination and unit and empty rules elimination)." ID="ID_604542681" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="Formalization of simpli&#xef;&#xac;&#xfffd;cation for context-free grammars " FOLDED="true" ID="ID_1024489296" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://arxiv.org/pdf/1509.02032.pdf">
<node TEXT="Context-free grammar simpli&#xef;&#xac;&#xfffd;cation is a subject of high importance in computer language processing tech-nology as well as in formal language theory. This paper presents a formalization using the Coq proof assistant of the fact that general context-free grammars generate languages that can be also generated" ID="ID_1740664183" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="PPT &#xe2;&#x20ac;&#x201c; Simplifications of ContextFree Grammars PowerPoint " FOLDED="true" ID="ID_25199336" CREATED="1566553719158" MODIFIED="1566553719158" LINK="http://www.powershow.com/view1/17f827-ZDc1Z/Simplifications_of_ContextFree_Grammars_powerpoint_ppt_presentation">
<node TEXT="Courtesy Costas Buch - RPI. 1. Simplifications. of. Context-Free Grammars  Courtesy Costas Buch - RPI. 18. A production is useless. if any of its variables  &#xe2;&#x20ac;&#x201c; A free PowerPoint PPT presentation (displayed as a Flash slide show) on PowerShow.com - id: 17f827-ZDc1Z" ID="ID_774564002" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="(PDF) CGM: A context-free grammar manipulator | Nelma " FOLDED="true" ID="ID_1118097527" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://www.academia.edu/2757457/CGM_A_context-free_grammar_manipulator">
<node TEXT="The context-free grammar manipulator now presented allows the editing of a context-free grammar the conversion to Chomsky normal form word parsing ? This work was partially funded by Funda&#xc2;&#xb8;ca &#xcb;&#x153;o para a Ci&#xcb;&#x2020;encia e Tecnologia (FCT) and Program POSI. and the (interactive) construction of parse trees." ID="ID_839793458" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="Attack Grammar: A New Approach to Modeling and Analyzing " FOLDED="true" ID="ID_1137057480" CREATED="1566553719158" MODIFIED="1566553719158" LINK="http://web.cse.ohio-state.edu/~zhang.834/papers/acsac08.pdf">
<node TEXT="grammar is a context-free grammar. Its logical formality makes it better comprehended and more easily analyzed. Finally the algorithmic complexity of our attack grammar approach is quartic with respect to the number of host clusters and analyses based on the attack grammar have a run time linear to the" ID="ID_665182253" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="CGM: A context-free grammar manipulator - dcc.fc.up.pt" FOLDED="true" ID="ID_16196154" CREATED="1566553719158" MODIFIED="1566553719158" LINK="http://www.dcc.fc.up.pt/~nam/publica/cgm.pdf">
<node TEXT="context-free languages as the ones generated by LR-grammars [ASU86]. Here we wanted a parser for a generic context-free grammar that would allow the interactive construction of parse trees. There are two main approaches to parse a word: top-down building the parse tree from the start symbol down to the yield (the word)" ID="ID_235638985" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="Increasing Visualization and Interaction - Duke University" FOLDED="true" ID="ID_642944698" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://users.cs.duke.edu/~rodger/papers/cse00/cse00fin.html">
<node TEXT="Pate is a parser for restricted and unrestricted grammars and a grammar transformer from a context-free grammar to Chomsky Normal Form (CNF). Given a grammar and an input string the parser is an exhaustive search parser that builds a derivation tree (not displayed) of all possible derivations in a breadth-first manner." ID="ID_1363573003" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="(PDF) Formalization of the pumping lemma for context-free " FOLDED="true" ID="ID_371825013" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://www.researchgate.net/publication/282997358_Formalization_of_the_pumping_lemma_for_context-free_languages">
<node TEXT="[Show full abstract] context-free grammars and the Pumping Lemma for context-free languages. The result is an important set of libraries covering the main results of context-free language theory " ID="ID_935757835" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="On the Formalization of Some Results of Context-Free " FOLDED="true" ID="ID_1608664286" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://link.springer.com/chapter/10.1007/978-3-662-52921-8_21">
<node TEXT="These include closure properties (union concatenation and Kleene star) grammar simplification (elimination of useless symbols inaccessible symbols empty rules and unit rules) the existence of a Chomsky Normal Form for context-free grammars and the Pumping Lemma for context-free languages." ID="ID_1316593891" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
<node TEXT="FORMAL LANGUAGES AND AUTOMATA THEORY BY A.PUNTAMBEKAR PDF" FOLDED="true" ID="ID_32300320" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://soundcity.mobi/formal-languages-and-automata-theory-by-apuntambekar-53/">
<node TEXT="Computability TheoryChomsky hierarchy of languages Linear bounded automata and context sensitive language LR(0) grammar Decidability of problems. Formal Languages and Automata Theory [A A Puntambekar] on * FREE* shipping on qualifying offers. Fundamentals: Strings Alphabet." ID="ID_1680609230" CREATED="1566553719158" MODIFIED="1566553719158"/>
</node>
</node>
<node TEXT="Simplification of Context Free Grammar useless symbols Code#$D$#" FOLDED="true" ID="ID_89571186" CREATED="1566553719158" MODIFIED="1566553719158">
<icon BUILTIN="stop-sign"/>
<node TEXT="Simplification Of CFG Part-1 | Elimination of useless " FOLDED="true" ID="ID_1022399587" CREATED="1566553719158" MODIFIED="1566553719158" LINK="https://www.youtube.com/watch?v=QF-qh454M1k">
<node TEXT="Please feel free to get in touch with me :) If it helped you please like my facebook page and dont forget to subscribe to Last Minute Tutorials. Thaaank Yo" ID="ID_1591527076" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="23-Elimination of useless symbols in Context free grammar " FOLDED="true" ID="ID_1775321851" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://www.youtube.com/watch?v=ga1HOvr7Zs4">
<node TEXT="23-Elimination of useless symbols in Context free grammar by Deeba Kannan. 23-Elimination of useless symbols in Context free grammar by Deeba Kannan.  Simplification Of CFG Part-2 " ID="ID_1583004440" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Elimination of Useless production/symbols from context " FOLDED="true" ID="ID_468736387" CREATED="1566553719159" MODIFIED="1566553719159" LINK="http://scanftree.com/automata/elimination-of-useless-symbol-from-context-free-grammar">
<node TEXT="Elimination of Useless production/symbols from context free grammar. Condition of Useless Symbol : We will entitle any variable useful only when it is deriving any terminal. And also if a symbol is deriving a termial but not reachable from Start state. Note: All terminals will be useful symbols" ID="ID_364454077" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Removing useless symbols from CFG - YouTube" FOLDED="true" ID="ID_849029661" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://www.youtube.com/watch?v=Z7nbXfOC1K0">
<node TEXT="23-Elimination of useless symbols in Context free grammar by Deeba Kannan  Simplification Of CFG  24-Elimination of epsilon production in Context free grammar by Deeba Kannan " ID="ID_414866014" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Simplifying Context Free Grammars - GeeksforGeeks" FOLDED="true" ID="ID_340003077" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://www.geeksforgeeks.org/simplifying-context-free-grammars/">
<node TEXT="The definition of context free grammars (CFGs) allows us to develop a wide variety of grammars. Most of the time some of the productions of CFGs are not useful and are redundant. This happens because the definition of CFGs does not restrict us from making these redundant productions. By simplifying " ID="ID_1885182966" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="CFG Simplification - tutorialspoint.com" FOLDED="true" ID="ID_1888568621" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://www.tutorialspoint.com/automata_theory/cfg_simplification">
<node TEXT="In a CFG it may happen that all the production rules and symbols are not needed for the derivation of strings. Besides there may be some null productions and unit productions. Elimination of these productions and symbols is called simplification of CFGs. Simplification essentially comprises of the " ID="ID_1587747511" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Simplification of Context Free Grammars - Theory of " FOLDED="true" ID="ID_904899968" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://edurev.in/studytube/Simplification-of-Context-Free-Grammars-Theory-of-/aa9f1cb1-acd2-42b7-9e9c-bdb1a07a2698_t">
<node TEXT="Part II. Simplification of Context Free Grammars 3 Simplification of CFGs We can simplify a CFG and produce an equivalent reduced CFG. This is done by a. Eliminating useless symbols b. Eliminating &#xce;&#xb5; productions c. Eliminating unit productions. 3.1 Eliminating Useless Symbols Useless symbols are those non-terminals or terminals that do not " ID="ID_983545813" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="theory - Simplification of a context free grammar - Stack " FOLDED="true" ID="ID_1179317788" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://stackoverflow.com/questions/36696412/simplification-of-a-context-free-grammar">
<node TEXT="I am supposed to remove the useless symbols. My questions is should I consider the empty string &#xce;&#xbb; a terminal here while applying the algorithm where I create a new set V containing symbols resulting in direct derivations then adding to V symbols that produce a combination of terminals and variables in V ." ID="ID_1875964609" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="context free - Simplification of CFG - Computer Science " FOLDED="true" ID="ID_422037149" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://cs.stackexchange.com/questions/21913/simplification-of-cfg">
<node TEXT="C isnt Part of the grammar recursion. As it expands to Terminals only it is artificial in the Sense That it is only used for notational convenience while it is unnecessary for expressing the CFG. The simplified grammar obviously contains a typo as no words containing b are derivable contradicting S - aBC - abC - ababb which the original " ID="ID_1815603356" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Simplification of CFG (Reduction of CFG) - YouTube" FOLDED="true" ID="ID_1458284076" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://www.youtube.com/watch?v=EF09zxzpVbk">
<node TEXT="TOC: Simplification of CFG (Reduction of CFG) This Lecture shows how to Simplify a given CFG and explains the Phases involved in the Reduction step. Contribu" ID="ID_1849681463" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Automata Simplification of CFG - Javatpoint" FOLDED="true" ID="ID_1338412399" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://www.javatpoint.com/automata-simplification-of-cfg">
<node TEXT="As we have seen various languages can efficiently be represented by a context-free grammar. All the grammar are not always optimized that means the grammar may consist of some extra symbols(non-terminal). Having extra symbols unnecessary increase the length of grammar. Simplification of grammar means reduction of grammar by removing useless " ID="ID_166552179" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Context Free Grammar Useless Productions - Stack Exchange" FOLDED="true" ID="ID_1785443164" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://math.stackexchange.com/questions/1975193/context-free-grammar-useless-productions">
<node TEXT="Context Free Grammar Useless Productions.  I am learning about context-free grammar simplification by the process of removing useless production rules because they are either unreachable or never terminate and I began to wonder why the useless production rules ever existed.  ^*$ is a string of terminal and non terminal symbols. Every " ID="ID_861413227" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
</node>
<node TEXT="Simplification of Context Free Grammar &#xc3;&#xfffd;&#xe2;&#x20ac;&#x17e;-productions Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1881897438" CREATED="1566553719159" MODIFIED="1566553719159">
<icon BUILTIN="stop-sign"/>
<node TEXT="CFG Simplification/ Reduction/ Optimization Part II " FOLDED="true" ID="ID_506468293" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://www.youtube.com/watch?v=OkBPUmU01Mo">
<node TEXT="CFG Simplification/ Reduction/ Optimization Part II." ID="ID_1584713220" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Reduction of Context Free Grammar | Elimination of unit " FOLDED="true" ID="ID_1128968161" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://www.youtube.com/watch?v=RldiLC1C7os">
<node TEXT="In this video we will discuss about the reduction of a Context Free Grammar i.e. how to reduce a given context free grammar. Topics covered in the video- 1) Reduction of Context Free Grammar " ID="ID_1003378370" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Increasing Visualization and Interaction in the Automata " FOLDED="true" ID="ID_1902668891" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://users.cs.duke.edu/~rodger/papers/cse00/cse00fin.html">
<node TEXT="Pate is a parser for restricted and unrestricted grammars and a grammar transformer from a context-free grammar to Chomsky Normal Form (CNF). Given a grammar and an input string the parser is an exhaustive search parser that builds a derivation tree (not displayed) of all possible derivations in a breadth-first manner." ID="ID_1843579880" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="7 Context Free Grammars and Parsing - SourceForge" FOLDED="true" ID="ID_457971171" CREATED="1566553719159" MODIFIED="1566553719159" LINK="http://nltk.sourceforge.net/doc/en/ch07.html">
<node TEXT="A grammar is a formal system that specifies which sequences of words are well-formed in the language and that provides one or more phrase structures for well-formed sequences. We will be looking at context-free grammar (CFG) which is a collection of productions of the form s &#xe2;&#x2020;&#x2019; np vp." ID="ID_280672322" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Free Simplification Downloads" FOLDED="true" ID="ID_923855111" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://simplification.winsite.com/">
<node TEXT="Clipboard Assistant v.1.139 Clipboard Assistant is intended for an acceleration and a simplification of text operations via the Clipboard. You can use it while you are writing programs filling Web forms making sections of related news items etc.; ProjectTracker for MS Project v.2.5.1 The module implementation policy shows its efficiency for any project." ID="ID_1487394916" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Freeware Simplification Downloads" FOLDED="true" ID="ID_1442938314" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://simplification.winsite.com/freeware/">
<node TEXT="Simplification freeware for FREE downloads at WinSite. New variant of Chess game for Casual players with random moves generator. Craps Portable - download and play. Atangeo Balancer is an application designed to help you preview and edit tridimensional polygonal models." ID="ID_163201637" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Urban Procedural Modeling - Urban Modeling and " FOLDED="true" ID="ID_528225272" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://www.cs.purdue.edu/cgvlab/urban/urban-procedural-modeling.html">
<node TEXT="pleted terminal geometry and their patterns of usage all encoded into a context-free grammar and 3) an interactive editing tool where the user can create new point clouds by using procedural copy and paste operations and smart resizing. We demonstrate our approach on editing of building models with up to 1.8M points." ID="ID_116856856" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="(PDF) Proceduralization of Urban Models - ResearchGate" FOLDED="true" ID="ID_845954132" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://www.researchgate.net/publication/284388643_Proceduralization_of_Urban_Models">
<node TEXT="Proceduralization of Urban Models.  all encoded into a context-free grammar and 3) an interactive editing tool where the user can create new point clouds by using procedural copy and paste " ID="ID_671077883" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="List of algorithms - Wikipedia" FOLDED="true" ID="ID_1308213501" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://en.wikipedia.org/wiki/Graph_algorithms">
<node TEXT="GLR parser:An algorithm for parsing any context-free grammar by Masaru Tomita. It is tuned for deterministic grammars on which it performs almost linear time and O(n 3) in worst case. Inside-outside algorithm: An O(n 3) algorithm for re-estimating production probabilities in probabilistic context-free grammars" ID="ID_1510047973" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Proceduralization of Urban Models - Purdue University" FOLDED="true" ID="ID_1986375286" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://www.cs.purdue.edu/cgvlab/papers/aliaga/ghc15.pdf">
<node TEXT="simplification. During the de-instancing phase dissimilarity clustering is performed to obtain the building components. During the proceduralization phase the components are arranged into a context-free grammar which can be edited text-based or interactively. Our approach proceduralizes several cities up to 19000" ID="ID_746200183" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Grammar checker &#xe2;&#x20ac;&#x201d; Wikipedia Republished // WIKI 2" FOLDED="true" ID="ID_1899694868" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://wiki2.org/en/Grammar_checker">
<node TEXT="A grammar checker in computing terms is a program or part of a program that attempts to verify written text for grammatical correctness.Grammar checkers are most often implemented as a feature of a larger program such as a word processor but are also available as a stand-alone application that can be activated from within programs that work with editable text." ID="ID_1906254586" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Practical Simplification of English Newspaper Text to " FOLDED="true" ID="ID_622684224" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://www.researchgate.net/publication/2740075_Practical_Simplification_of_English_Newspaper_Text_to_Assist_Aphasic_Readers">
<node TEXT="Practical Simplification of English Newspaper Text to Assist Aphasic Readers  a user-driven interactive system that provides a computationally tractable and labor-efficient method of supervised " ID="ID_729825111" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
</node>
<node TEXT="Simplification of Context Free Grammar &#xc3;&#xfffd;&#xe2;&#x20ac;&#x17e;-productions Code#$D$#" FOLDED="true" ID="ID_17915524" CREATED="1566553719159" MODIFIED="1566553719159">
<icon BUILTIN="stop-sign"/>
<node TEXT="Simplifying Context Free Grammars - GeeksforGeeks" FOLDED="true" ID="ID_926912083" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://www.geeksforgeeks.org/simplifying-context-free-grammars/">
<node TEXT="The definition of context free grammars (CFGs) allows us to develop a wide variety of grammars. Most of the time some of the productions of CFGs are not useful and are redundant. This happens because the definition of CFGs does not restrict us from making these redundant productions. By simplifying " ID="ID_972064662" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Simplification of CFG (Removal of Unit Productions) - YouTube" FOLDED="true" ID="ID_66578931" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://www.youtube.com/watch?v=B2o75KpzfU4">
<node TEXT="TOC: Simplification of CFG (Removal of Unit Productions) This Lecture shows how to Simplify a given CFG by removing the Unit Productions. Contribute: http://" ID="ID_1530646927" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Context-Free Grammar Introduction - tutorialspoint.com" FOLDED="true" ID="ID_552399732" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://www.tutorialspoint.com/automata_theory/context_free_grammar_introduction">
<node TEXT="The grammar having a left recursive production is called a left recursive grammar. And if in a context-free grammar G if there is a production is in the form X &#xe2;&#x2020;&#x2019; aX where X is a non-terminal and &#xe2;&#x20ac;&#x2dc;a&#xe2;&#x20ac;&#x2122; is a string of terminals it is called a right recursive production." ID="ID_1444295012" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="Simple parser from a context free grammar &#xc2;&#xb7; GitHub" FOLDED="true" ID="ID_1846904283" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://gist.github.com/DarinM223/81e5308846cd0366275cc5c82eef2d4e">
<node TEXT="Simple parser from a context free grammar. GitHub Gist: instantly share code notes and snippets.  * This code could be written exactly like the grammer by recursively calling rest() over and over * but rewriting the logic to use an infinite loop will make it less likely to overflow the stack." ID="ID_284081631" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="context free - Simplification of CFG - Computer Science " FOLDED="true" ID="ID_1844938500" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://cs.stackexchange.com/questions/21913/simplification-of-cfg">
<node TEXT="$\begingroup$ Finding a minimal grammar is a completely different task than finding a reduced grammar. In particuar iirc the former is not computable while there are efficient algorithms for the latter. (I assume that reduced grammars are the topic here.) $\endgroup$ &#xe2;&#x20ac;&#x201c; Raphael &#xe2;&#x2122;&#xa6; Feb 22 14 at 13:28" ID="ID_215468331" CREATED="1566553719159" MODIFIED="1566553719159"/>
</node>
<node TEXT="GitHub - mahdavipanah/pyCFG: Context Free Grammar(CFG " FOLDED="true" ID="ID_1347581282" CREATED="1566553719159" MODIFIED="1566553719159" LINK="https://github.com/mahdavipanah/pyCFG">
<node TEXT="Context Free Grammar(CFG) parser library and application written in Python - mahdavipanah/pyCFG. Context Free Grammar(CFG) parser library and application written in Python - mahdavipanah/pyCFG  Code. Issues 0. Pull requests 0. Projects 0 Security Insights Dismiss Join GitHub today." ID="ID_1049293454" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Newest context-free-grammar Questions - Stack Overflow" FOLDED="true" ID="ID_1725730123" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://stackoverflow.com/questions/tagged/context-free-grammar">
<node TEXT="In formal language theory a context-free grammar (CFG) is a grammar subject to a special constraint: that the left-hand side (LHS) consist of a single non-terminal symbol. CFGs are capable of representing the set of context-free languages (CFLs)." ID="ID_1585980724" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Context-Free Grammars (CFG) - univ-orleans.fr" FOLDED="true" ID="ID_1786295145" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://www.univ-orleans.fr/lifo/Members/Mirian.Halfeld/Cours/TLComp/l3-CFG.pdf">
<node TEXT="De&#xef;&#xac;&#xfffd;nition of Context-Free Grammar A GFG (or just a grammar) G is a tuple G = (VTPS) where 1. V is the (&#xef;&#xac;&#xfffd;nite) set of variables (or nonterminals or syntactic categories). Each variable represents a language i.e. a set of strings 2. T is a &#xef;&#xac;&#xfffd;nite set of terminals i.e. the symbols that form the strings of the language being de&#xef;&#xac;&#xfffd;ned 3." ID="ID_871775631" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="CFG Simplification - tutorialspoint.com" FOLDED="true" ID="ID_1123412509" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://www.tutorialspoint.com/automata_theory/cfg_simplification">
<node TEXT="In a CFG it may happen that all the production rules and symbols are not needed for the derivation of strings. Besides there may be some null productions and unit productions. Elimination of these productions and symbols is called simplification of CFGs. Simplification essentially comprises of the " ID="ID_1650067044" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Simplification of CFG (Removal of Null Productions) - YouTube" FOLDED="true" ID="ID_1945407018" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://www.youtube.com/watch?v=mlXYQ8ug2v4">
<node TEXT="TOC: Simplification of CFG (Removal of Null Productions) This Lecture shows how to Simplify a given CFG by removing the Null Productions Contribute: http://w" ID="ID_350912603" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="theory - Simplification of a context free grammar - Stack " FOLDED="true" ID="ID_1230598395" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://stackoverflow.com/questions/36696412/simplification-of-a-context-free-grammar">
<node TEXT="How can I check that the language of one context-free grammar is a subset of a second context-free grammar? 0 Is a context-free grammar that can be transformed into a LR parsing table unambiguous?" ID="ID_683567676" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="CSC 4170 Simplifying Context-Free Grammars" FOLDED="true" ID="ID_698783621" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://www.seas.upenn.edu/~cit596/notes/dave/npda-cfg1.html">
<node TEXT="Simplifying Context-Free Grammars The productions of context-free grammars can be coerced into a variety of forms without affecting the expressive power of the grammar. Empty production removal If the empty string does not belong to a language then there is a way to eliminate productions of the form A from the grammar." ID="ID_1344134554" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
</node>
<node TEXT="Parenthesis Match Context Free Grammar Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1059178493" CREATED="1566553719172" MODIFIED="1566553719172">
<icon BUILTIN="stop-sign"/>
<node TEXT="Context-Free Grammars - cs.rochester.edu" FOLDED="true" ID="ID_69425486" CREATED="1566553719172" MODIFIED="1566553719172" LINK="https://www.cs.rochester.edu/~nelson/courses/csc_173/grammars/cfg.html">
<node TEXT="Context-Free Grammars. A context-free grammar (CFG) is a set of recursive rewriting rules (or productions) used to generate patterns of strings. A CFG consists of the following components: a set of terminal symbols which are the characters of the alphabet that appear in the strings generated by the grammar." ID="ID_813698976" CREATED="1566553719172" MODIFIED="1566553719172"/>
</node>
<node TEXT="Context-free grammar - Wikipedia" FOLDED="true" ID="ID_1028527287" CREATED="1566553719172" MODIFIED="1566553719172" LINK="https://en.wikipedia.org/wiki/Context-free_grammars">
<node TEXT="are added a context-free grammar for the set of all palindromes over the alphabet { a b} is obtained. Well-formed parentheses. The canonical example of a context-free grammar is parenthesis matching which is representative of the general case. There are two terminal symbols ( and ) and one nonterminal symbol S. The production rules are" ID="ID_1301120032" CREATED="1566553719172" MODIFIED="1566553719172"/>
</node>
<node TEXT="Context-free grammar - Infogalactic: the planetary " FOLDED="true" ID="ID_788805667" CREATED="1566553719172" MODIFIED="1566553719172" LINK="https://infogalactic.com/info/Context-free_grammar">
<node TEXT="In formal language theory a context-free grammar (CFG) is a formal grammar in which every production rule is of the form. where is a single nonterminal symbol and is a string of terminals and/or nonterminals (can be empty). A formal grammar is considered context free when its production rules can be applied regardless of the context of a " ID="ID_1154245646" CREATED="1566553719172" MODIFIED="1566553719172"/>
</node>
<node TEXT="Context free grammars - SlideShare" FOLDED="true" ID="ID_1414356104" CREATED="1566553719172" MODIFIED="1566553719172" LINK="https://www.slideshare.net/ronakvthakkar/context-free-grammars">
<node TEXT="Context free grammars 1. Context Free Grammars Ronak Thakkar Roll no 32 M.Sc. Computer Science 2. What are Context Free Grammars? In Formal Language Theory  a Context free Grammar(CFG) is a formal grammar in which every production rule is of the form V wWhere V is a single nonterminal symbol and w is a string of terminals and/or nonterminals (w can be empty) The languages generated by context " ID="ID_1237827171" CREATED="1566553719172" MODIFIED="1566553719172"/>
</node>
<node TEXT="match nested parenthesis - Python - Byte" FOLDED="true" ID="ID_1878499452" CREATED="1566553719172" MODIFIED="1566553719172" LINK="https://bytes.com/topic/python/answers/591632-match-nested-parenthesis">
<node TEXT="match nested parenthesis. Python Forums on Bytes.  i wish to find an reg exp for matching nested parenthesis of varying level like string = somewords1(words(somewords2)-(some(some)words3)somestuff)somestuff  Write a context free grammar and a recognizer for that grammar" ID="ID_916051897" CREATED="1566553719172" MODIFIED="1566553719172"/>
</node>
<node TEXT="AN INTERACTIVE PARSER GENERATOR FOR CONTEXT-FREE GRAMMARS " FOLDED="true" ID="ID_1975063249" CREATED="1566553719172" MODIFIED="1566553719172" LINK="http://ozark.hendrix.edu/~ferrer/research/papers/InteractiveParser.pdf">
<node TEXT="AN INTERACTIVE PARSER GENERATOR FOR CONTEXT-FREE GRAMMARS Gabriel J. Ferrer Department of Mathematics and Computer Science  arbitrary context-free grammar and it will generate a Java class that corresponds to that  contains a list of every possible match between a production and the input string at that position." ID="ID_799241390" CREATED="1566553719172" MODIFIED="1566553719172"/>
</node>
<node TEXT="Beyond regular expressions: An introduction to parsing " FOLDED="true" ID="ID_1617196035" CREATED="1566553719172" MODIFIED="1566553719172" LINK="https://www.freecodecamp.org/news/beyond-regular-expressions-an-introduction-to-parsing-context-free-grammars-ee77bdab5a92/">
<node TEXT="Beyond regular expressions: An introduction to parsing context-free grammars Photo by Johannes Plenio on Unsplash. An important and useful tool that is already a part of most programmers&#xe2;&#x20ac;&#x2122; arsenals is the trusty regular expression. But beyond that lie context-free grammars. This is a simple concept with a fancy name." ID="ID_384230712" CREATED="1566553719172" MODIFIED="1566553719172"/>
</node>
<node TEXT="grammar - Is there an Extended Backus&#xe2;&#x20ac;&#x201c;Naur form (EBNF " FOLDED="true" ID="ID_1483614221" CREATED="1566553719172" MODIFIED="1566553719172" LINK="https://english.stackexchange.com/questions/32447/is-there-an-extended-backus-naur-form-ebnf-that-covers-all-of-english">
<node TEXT="There are also other classes which I will completely ignore because the context free class is the closest one to linguistics. The prototypical example of a nontrivial context free grammar is parentheses matching of two different kinds of parentheses: SENTENCE: S S: ( S ) | [ S ]" ID="ID_1493036421" CREATED="1566553719173" MODIFIED="1566553719173"/>
</node>
<node TEXT="Pushdown Automata | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1371090661" CREATED="1566553719173" MODIFIED="1566553719173" LINK="https://brilliant.org/wiki/pushdown-automata/">
<node TEXT="Pushdown automata are computational models&#xe2;&#x20ac;&#x201d;theoretical computer-like machines&#xe2;&#x20ac;&#x201d;that can do more than a finite state machine but less than a Turing machine. Pushdown automata accept context-free languages which include the set of regular languages. The language that describes strings that have matching parentheses is a context-free language " ID="ID_121083287" CREATED="1566553719173" MODIFIED="1566553719173"/>
</node>
<node TEXT="Context Free Grammars CFG - girdhargopalbansal.blogspot.com" FOLDED="true" ID="ID_1505726972" CREATED="1566553719173" MODIFIED="1566553719173" LINK="https://girdhargopalbansal.blogspot.com/2013/06/context-free-grammars-cfg.html">
<node TEXT="The goal here is to take an arbitrary Context Free Grammar G = (V T P S) and perform transformations on the grammar that preserve the language generated by the grammar but reach a specific format for the productions." ID="ID_1365177400" CREATED="1566553719173" MODIFIED="1566553719173"/>
</node>
<node TEXT="4. Syntax - Florida State University" FOLDED="true" ID="ID_126411554" CREATED="1566553719173" MODIFIED="1566553719173" LINK="https://www.cs.fsu.edu/~engelen/courses/COP402003/notes3.html">
<node TEXT="A parser is a recognizer of a context-free language; a string can be parsed into a parse tree only if the string is in the language; For any arbitrary context-free grammar parsing can be done in O(n 3) time where n is the size of the input; There are large classes of grammars for which we can construct parsers that run in linear time:" ID="ID_1876018196" CREATED="1566553719173" MODIFIED="1566553719173"/>
</node>
<node TEXT="AN INTERACTIVE PARSER GENERATOR FOR CONTEXT-FREE GRAMMARS" FOLDED="true" ID="ID_1735865836" CREATED="1566553719173" MODIFIED="1566553719173" LINK="https://www.researchgate.net/publication/261363980_AN_INTERACTIVE_PARSER_GENERATOR_FOR_CONTEXT-FREE_GRAMMARS">
<node TEXT="Grammar Editor [8] is an interactive editor for context-free grammars employing the CYK algorithm. As with Grambler a user enters a grammar and text to be parsed and the program" ID="ID_904805931" CREATED="1566553719173" MODIFIED="1566553719173"/>
</node>
</node>
<node TEXT="Parenthesis Match Context Free Grammar Code#$D$#" FOLDED="true" ID="ID_580900503" CREATED="1566553719173" MODIFIED="1566553719173">
<icon BUILTIN="stop-sign"/>
<node TEXT="context free grammar - Pyparsing: Parsing unique longest " FOLDED="true" ID="ID_78711274" CREATED="1566553719173" MODIFIED="1566553719173" LINK="https://stackoverflow.com/questions/46004457/pyparsing-parsing-unique-longest-match-in-parentheses">
<node TEXT="Pyparsing: Parsing unique longest match in parentheses. Ask Question 1. I am trying to parse the following lines:  ( + pp.OneOrMore(pp.Word(pp.printables)) + ) but since pp.printables also contains (and should contain) the closing parenthesis ) pyparsing cannot parse the commands.  Browse other questions tagged context-free-grammar " ID="ID_1285336022" CREATED="1566553719173" MODIFIED="1566553719173"/>
</node>
<node TEXT="Context-free grammar - Wikipedia" FOLDED="true" ID="ID_290623681" CREATED="1566553719173" MODIFIED="1566553719173" LINK="https://en.wikipedia.org/wiki/Context-free_grammar">
<node TEXT="are added a context-free grammar for the set of all palindromes over the alphabet { a b} is obtained. Well-formed parentheses. The canonical example of a context-free grammar is parenthesis matching which is representative of the general case. There are two terminal symbols ( and ) and one nonterminal symbol S. The production rules are" ID="ID_576089479" CREATED="1566553719173" MODIFIED="1566553719173"/>
</node>
<node TEXT="CFG and PDA for the grammar that has perfectly nested " FOLDED="true" ID="ID_900696947" CREATED="1566553719173" MODIFIED="1566553719173" LINK="https://cs.stackexchange.com/questions/6719/cfg-and-pda-for-the-grammar-that-has-perfectly-nested-parentheses-and-brackets">
<node TEXT="The language you study is a classic the one-sided Dyck language (on two pairs of brackets). You can directly make a PDA by considering the following property of nested strings: every symbol closing bracket you read should match the last unmatched opening bracket." ID="ID_1672048896" CREATED="1566553719173" MODIFIED="1566553719173"/>
</node>
<node TEXT="Context-Free Grammars - cs.rochester.edu" FOLDED="true" ID="ID_508828559" CREATED="1566553719173" MODIFIED="1566553719173" LINK="https://www.cs.rochester.edu/~nelson/courses/csc_173/grammars/cfg.html">
<node TEXT="Context-Free Grammars. A context-free grammar (CFG) is a set of recursive rewriting rules (or productions) used to generate patterns of strings. A CFG consists of the following components: a set of terminal symbols which are the characters of the alphabet that appear in the strings generated by the grammar." ID="ID_1475345483" CREATED="1566553719173" MODIFIED="1566553719173"/>
</node>
<node TEXT="Python: How to match nested parentheses with regex " FOLDED="true" ID="ID_1479065559" CREATED="1566553719173" MODIFIED="1566553719173" LINK="https://stackoverflow.com/questions/5454322/python-how-to-match-nested-parentheses-with-regex">
<node TEXT="You are correct but also wrong ;) Modern programming languages include regex facilities that can match stuff like L = { ww | w \in {01}* } which is neither regular nor context-free. It is true that they cannot match arbitrarily nested matching parentheses but not for the reason you mentioned. &#xe2;&#x20ac;&#x201c; phooji Mar 28 11 at 4:15" ID="ID_438275382" CREATED="1566553719173" MODIFIED="1566553719173"/>
</node>
<node TEXT="Context-Free Grammars - web.stanford.edu" FOLDED="true" ID="ID_1563841436" CREATED="1566553719173" MODIFIED="1566553719173" LINK="https://web.stanford.edu/class/archive/cs/cs103/cs103.1142/lectures/17/Small17.pdf">
<node TEXT="Context-Free Grammars A context-free grammar (or CFG) is an entirely different formalism for defining a class of languages. Goal: Give a procedure for listing off all strings in the language. CFGs are best explained by example" ID="ID_1094949600" CREATED="1566553719174" MODIFIED="1566553719174"/>
</node>
<node TEXT="Context-Free Grammar | Daniel Shiffman" FOLDED="true" ID="ID_1434116421" CREATED="1566553719174" MODIFIED="1566553719174" LINK="https://shiffman.net/a2z/cfg/">
<node TEXT="Here I will demontrate how to use libraries to generate text with a Context Free Grammar as well as program your own from scratch. want to learn how to define our own context free grammars and generate text from them. I&#xe2;&#x20ac;&#x2122;m going to give a short explanations followed by code examples." ID="ID_359400390" CREATED="1566553719174" MODIFIED="1566553719174"/>
</node>
<node TEXT="context free - Language of balanced parentheses " FOLDED="true" ID="ID_1971803305" CREATED="1566553719174" MODIFIED="1566553719174" LINK="https://cs.stackexchange.com/questions/14557/language-of-balanced-parentheses-biconditional-proof-about-parentheses">
<node TEXT="Let L be language of balanced parentheses. (a) Prove If there are equal number of (s and )s and every prefix of w contains at least as many (s as )s then w is in L. (b) Prove If w is in L t" ID="ID_531164676" CREATED="1566553719174" MODIFIED="1566553719174"/>
</node>
<node TEXT="Regular Expression Vs Context Free Grammar - geeksforgeeks.org" FOLDED="true" ID="ID_1489327811" CREATED="1566553719174" MODIFIED="1566553719174" LINK="https://www.geeksforgeeks.org/regular-expression-vs-context-free-grammar/">
<node TEXT="The Context-free grammar form NFA for the Regular Expression using the following construction rules: For each state there is a Non-Terminal symbol. If state A has a transition to state B on a symbol a IF state A goes to state B input symbol is e If A is accepting state. Make the start symbol of the " ID="ID_1078798163" CREATED="1566553719174" MODIFIED="1566553719174"/>
</node>
<node TEXT="Beyond regular expressions: An introduction to parsing " FOLDED="true" ID="ID_1682107824" CREATED="1566553719174" MODIFIED="1566553719174" LINK="https://www.freecodecamp.org/news/beyond-regular-expressions-an-introduction-to-parsing-context-free-grammars-ee77bdab5a92/">
<node TEXT="Beyond regular expressions: An introduction to parsing context-free grammars Photo by Johannes Plenio on Unsplash. An important and useful tool that is already a part of most programmers&#xe2;&#x20ac;&#x2122; arsenals is the trusty regular expression. But beyond that lie context-free grammars. This is a simple concept with a fancy name." ID="ID_519840331" CREATED="1566553719174" MODIFIED="1566553719174"/>
</node>
<node TEXT="java - Parenthesis/Brackets Matching using Stack algorithm " FOLDED="true" ID="ID_82826347" CREATED="1566553719174" MODIFIED="1566553719174" LINK="https://stackoverflow.com/questions/16874176/parenthesis-brackets-matching-using-stack-algorithm">
<node TEXT="Parenthesis/Brackets Matching using Stack algorithm. Ask Question Asked 6 years 2 months ago.  Are they a context free language? They definitely arent regular due to the parentheses alone. Are they context-sensitive? Turing-complete?" ID="ID_1948892958" CREATED="1566553719174" MODIFIED="1566553719174"/>
</node>
<node TEXT="regex regular What is a Context Free Grammar? : Code Examples" FOLDED="true" ID="ID_1034238205" CREATED="1566553719174" MODIFIED="1566553719174" LINK="https://code-examples.net/en/q/666f98">
<node TEXT="Code Examples. Tags;  A context-free grammar is simply a grammar where the thing that youre replacing (left of the arrow) is a single non-terminal symbol.  The language of matching parenthesis is not regular for example because the machine needs to remember if it has opened a parenthesis to know if it has to close one." ID="ID_1846637994" CREATED="1566553719174" MODIFIED="1566553719174"/>
</node>
</node>
<node TEXT="Push Down Automata  Context Free Language Interactive Visualisation#$D$#" FOLDED="true" ID="ID_491418877" CREATED="1566553719193" MODIFIED="1566553719193">
<icon BUILTIN="stop-sign"/>
<node TEXT="Pushdown Automata | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_497797406" CREATED="1566553719193" MODIFIED="1566553719193" LINK="https://brilliant.org/wiki/pushdown-automata/">
<node TEXT="Pushdown automata can be useful when thinking about parser design and any area where context-free grammars are used such as in computer language design. Since pushdown automata are equal in power to context-free languages there are two ways of proving that a language is context-free: provide the context-free grammar or provide a pushdown " ID="ID_110671035" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
<node TEXT="Context Free Grammar (CFG) to Push Down Automata (PDA " FOLDED="true" ID="ID_814173440" CREATED="1566553719193" MODIFIED="1566553719193" LINK="https://www.youtube.com/watch?v=74DryktkBLA">
<node TEXT="Context Free Grammar (CFG) to Push Down Automata (PDA) Watch more videos at https://www.tutorialspoint.com/videotutorials/index.htm Lecture By: Mr. Arnab Cha" ID="ID_1932025809" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
<node TEXT="CFG to PDA Conversion - YouTube" FOLDED="true" ID="ID_199983706" CREATED="1566553719193" MODIFIED="1566553719193" LINK="https://www.youtube.com/watch?v=xWWRoiPRAi4">
<node TEXT="The interactive transcript could not be loaded.  34-Context free grammar to push down automata by Deeba Kannan  22:49. Convert Cfg to Pda | Conversion | Theory of Computation(TOC " ID="ID_1820138695" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
<node TEXT="Visualization of Pushdown Automata - asethome.org" FOLDED="true" ID="ID_1160699097" CREATED="1566553719193" MODIFIED="1566553719193" LINK="http://www.asethome.org/pda/">
<node TEXT="Visualization of Pushdown Automata Pradip Peter Dey et al National University Pushdown Automata (PDA) are acceptors of context-free languages which include programming languages such as C++ and Java. A Pushdown Automaton for a non-regular Context-Free Language L m = { {n c} n: where n =0 " ID="ID_1065503075" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
<node TEXT="Automaton Simulator" FOLDED="true" ID="ID_1312543978" CREATED="1566553719193" MODIFIED="1566553719193" LINK="http://automatonsimulator.com/">
<node TEXT="Finite State Machine simulator for Deterministic Finite Automata Non-Deterministic Finite Automata and Push-Down Automata." ID="ID_598752919" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
<node TEXT="(PDF) Teaching push-down automata and turing machines" FOLDED="true" ID="ID_460750370" CREATED="1566553719193" MODIFIED="1566553719193" LINK="https://www.researchgate.net/publication/220808146_Teaching_push-down_automata_and_turing_machines">
<node TEXT="PDF | In this paper we present the new version of a tool to assist in teaching formal languages and automata theory. In the previous version the tool provided algorithms for regular expressions " ID="ID_1263996279" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
<node TEXT="How to design a finite automata to accept a palindrome no?" FOLDED="true" ID="ID_1557164446" CREATED="1566553719193" MODIFIED="1566553719193" LINK="https://www.answers.com/Q/How_to_design_a_finite_automata_to_accept_a_palindrome_no">
<node TEXT="Push Down Automata (PDA) are a way to represent the language class called Context Free Languages(CFLs).  allowing engineers to analyze design conditions in a highly interactive and visual " ID="ID_1725580476" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
<node TEXT="Pushdown Automata - University of Alaska Anchorage" FOLDED="true" ID="ID_971539599" CREATED="1566553719193" MODIFIED="1566553719193" LINK="http://www.math.uaa.alaska.edu/~afkjm/csce351/handouts/pda.pdf">
<node TEXT="Pushdown Automata Pushdown Automata (PDA) &#xe2;&#x20ac;&#xa2; Just as a DFA is a way to implement a regular expression a pushdown automata is a way to implement a context free grammar &#xe2;&#x20ac;&#x201c; PDA equivalent in power to a CFG &#xe2;&#x20ac;&#x201c; Can choose the representation most useful to our particular problem &#xe2;&#x20ac;&#xa2; Essentially identical to a regular automata except" ID="ID_101413973" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
<node TEXT="GitHub - coq-contribs/automata: Beginning of formal " FOLDED="true" ID="ID_1330325958" CREATED="1566553719193" MODIFIED="1566553719193" LINK="https://github.com/coq-contribs/automata">
<node TEXT="The main results are : - every rational language is regular i.e. for all rationnal language L there exists a finite automata wich recognizes L (Lemma rat_is_reg in RatReg.v) - for all context-free language L there exists a push-down automata wich recognizes L (Lemma equiv_APD_Gram in gram_aut.v) - an example of classical result : if two " ID="ID_741410764" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
<node TEXT="Automata theory - Wikipedia" FOLDED="true" ID="ID_26039686" CREATED="1566553719193" MODIFIED="1566553719193" LINK="https://en.wikipedia.org/wiki/Automata_theory">
<node TEXT="Automata theory is the study of abstract machines and automata as well as the computational problems that can be solved using them. It is a theory in theoretical computer science and discrete mathematics (a subject of study in both mathematics and computer science).The word automata (the plural of automaton) comes from the Greek word &#xce;&#xb1;&#xe1;&#xbd;&#xfffd;&#xcf;&#x201e;&#xcf;&#x152;&#xce;&#xbc;&#xce;&#xb1;&#xcf;&#x201e;&#xce;&#xb1; which means self-acting." ID="ID_121014575" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
<node TEXT="Syllabus | Theory of Computation | Mathematics | MIT " FOLDED="true" ID="ID_532138230" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://ocw.mit.edu/courses/mathematics/18-404j-theory-of-computation-fall-2006/syllabus/">
<node TEXT="Automata and Language Theory (2 weeks) Finite automata regular expressions push-down automata context free grammars pumping lemmas. Computability Theory (3 weeks) Turing machines Church-Turing thesis decidability halting problem reducibility recursion theorem. Complexity Theory (7 weeks)" ID="ID_1443325001" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="Why do pushdown automata use a stack? - Computer Science " FOLDED="true" ID="ID_1878296982" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://cs.stackexchange.com/questions/98972/why-do-pushdown-automata-use-a-stack">
<node TEXT="However context-free languages and pushdown automata are mathematically very simple and elegant devices and the Chomsky hierarchy is a simple and elegant result so they are very useful in education to explain the basics of computer-based language description and recognition (formal language theory). For this reason they have continued to be " ID="ID_1567437041" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
</node>
<node TEXT="Push Down Automata  Context Free Language Code#$D$#" FOLDED="true" ID="ID_429718118" CREATED="1566553719194" MODIFIED="1566553719194">
<icon BUILTIN="stop-sign"/>
<node TEXT="Pushdown automaton - Wikipedia" FOLDED="true" ID="ID_1638404235" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://en.wikipedia.org/wiki/Pushdown_automaton">
<node TEXT="In the theory of computation a branch of theoretical computer science a pushdown automaton (PDA) is a type of automaton that employs a stack.. Pushdown automata are used in theories about what can be computed by machines. They are more capable than finite-state machines but less capable than Turing machines. Deterministic pushdown automata can recognize all deterministic context-free " ID="ID_247188158" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="Context free languages and Push-down automata - GeeksforGeeks" FOLDED="true" ID="ID_909294097" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://www.geeksforgeeks.org/context-free-languages-and-push-down-automata-gq/">
<node TEXT="P &#xe2;&#x2c6;&#x2019; Q = P &#xe2;&#x2c6;&#xa9; Q might not even be a context free language due to the closure properties of context free languages. 3. &#xce;&#xa3;&#xe2;&#x2c6;&#x2014; &#xe2;&#x2c6;&#x2019; P is equivalently complement of P hence regular.  Context free languages and Push-down automata GATE-CS-2007  Writing code in comment? Please use ide.geeksforgeeks.org " ID="ID_412185313" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="Pushdown Automata | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_183462889" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://brilliant.org/wiki/pushdown-automata/">
<node TEXT="Pushdown automata are computational models&#xe2;&#x20ac;&#x201d;theoretical computer-like machines&#xe2;&#x20ac;&#x201d;that can do more than a finite state machine but less than a Turing machine. Pushdown automata accept context-free languages which include the set of regular languages. The language that describes strings that have " ID="ID_296938988" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="Definition of Pushdown Automata" FOLDED="true" ID="ID_636195029" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://www.theoryofcomputation.co/definition-pushdown-automata/">
<node TEXT="Pushdown automata can be useful when thinking about parser design and any area where context-free grammars are used such as in computer language design. Since pushdown automata are equal in power to context-free languages there are two ways of proving that a language is context-free: provide the context-free grammar or provide a pushdown " ID="ID_1689070729" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="Context-free language - Wikipedia" FOLDED="true" ID="ID_795432064" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://en.wikipedia.org/wiki/Context_free_language">
<node TEXT="The context-free nature of the language makes it simple to parse with a pushdown automaton. Determining an instance of the membership problem; i.e. given a string  determine whether &#xe2;&#x2c6;&#x2c6; where is the language generated by a given grammar ; is also known as recognition.Context-free recognition for Chomsky normal form grammars was shown by Leslie G. Valiant to be reducible to boolean matrix " ID="ID_300393517" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="Program to convert context free language to push down " FOLDED="true" ID="ID_1546776271" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://stackoverflow.com/questions/4330460/program-to-convert-context-free-language-to-push-down-automata">
<node TEXT="I cant find any applet or program online to convert a context free language into a push down automata any help would be greatly appreciated. Stack Overflow.  Program to convert context free language to push down automata? Ask Question  It contains code not only for converting CFG into PDA but also for other similar tasks." ID="ID_159581133" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="Push Down Automata for a context free language2 - YouTube" FOLDED="true" ID="ID_1208383084" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://www.youtube.com/watch?v=TKST75k2h88">
<node TEXT="Here Definition of Push Down Automata is given it is cleared here how PDA is helpful for context free languages. In finite automata the memory was finite and if one variable was dependent on " ID="ID_1011083639" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="Theory of Computation | Pushdown Automata - GeeksforGeeks" FOLDED="true" ID="ID_1678327609" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://www.geeksforgeeks.org/theory-of-computation-pushdown-automata/">
<node TEXT="But finite automata can be used to accept only regular languages. Pushdown Automata is a finite automata with extra memory called stack which helps Pushdown automata to recognize Context Free Languages. A Pushdown Automata (PDA) can be defined as : Q is the set of states &#xe2;&#x2c6;&#x2018;is the set of input symbols" ID="ID_993356290" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="35-Push Down Automata to Context Free Grammar by Deeba " FOLDED="true" ID="ID_1535977051" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://www.youtube.com/watch?v=0zHlKKWGFmU">
<node TEXT="35-Push Down Automata to Context Free Grammar by Deeba Kannan.  34-Context free grammar to push down automata by Deeba Kannan - Duration:  GENERATING GRAMMAR FROM LANGUAGE " ID="ID_1549829554" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="PDA  Context-Free Grammar - tutorialspoint.com" FOLDED="true" ID="ID_1476786609" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://www.tutorialspoint.com/automata_theory/pda_context_free_grammar">
<node TEXT="If a grammar G is context-free we can build an equivalent nondeterministic PDA which accepts the language that is produced by the context-free grammar G.A parser can be built for the grammar G.. Also if P is a pushdown automaton an equivalent context-free grammar G can be constructed where. L(G) = L(P) In the next two topics we will discuss how to convert from PDA to CFG and vice versa." ID="ID_813746579" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="14 Push-down Automata and Context-free Grammars" FOLDED="true" ID="ID_715396195" CREATED="1566553719194" MODIFIED="1566553719194" LINK="http://www.eng.utah.edu/~cs3100/lectures/l18/pda-notes.pdf">
<node TEXT="Push-down Automata and Context-free Grammars This chapter details the design of push-down automata (PDA) for vari-ous languages the conversion of CFGs to PDAs and vice versa. In par-ticular after formally introducing push-down automata in Section 14.1 we introduce two notions of acceptance - by &#xef;&#xac;&#xfffd;nal state and by empty" ID="ID_1046302133" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="Context-free grammar to a pushdown automaton - Computer " FOLDED="true" ID="ID_207450114" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://cs.stackexchange.com/questions/2735/context-free-grammar-to-a-pushdown-automaton">
<node TEXT="Im trying to convert a context free grammar to a pushdown automaton (PDA); Im not sure how Im gonna get an answer or show you my progress as its a diagram Anyway this is the last problem I h" ID="ID_988358735" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
</node>
</node>
<node TEXT="Derivation" ID="ID_210911993" CREATED="1566881027640" MODIFIED="1566881027640" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="Language of grammar" ID="ID_1750466605" CREATED="1566881027640" MODIFIED="1566881027640" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="sentential form" ID="ID_292731676" CREATED="1566881027640" MODIFIED="1566881027640" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="sentential form Interactive Visualisation#$D$#" FOLDED="true" ID="ID_683250815" CREATED="1566553719153" MODIFIED="1566553719153">
<icon BUILTIN="stop-sign"/>
<node TEXT="Two Tools for Creating and Visualizing Sub-sentential " FOLDED="true" ID="ID_941665354" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://www.aclweb.org/anthology/W07-1520">
<node TEXT="Sub-sentential Alignments of Parallel Text Ulrich Germann Universityof Toronto germann@cs.toronto.edu Abstract We present two web-based interactive tools for creating and visualizing sub-sentential alignments of parallel text. Yawat is a tool to support distributed manual word- and phrase-alignment of parallel text through an intuitive web " ID="ID_429261040" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Two tools for creating and visualizing sub-sentential " FOLDED="true" ID="ID_572913537" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://www.academia.edu/2770787/Two_tools_for_creating_and_visualizing_sub-sentential_alignments_of_parallel_text">
<node TEXT="Because of its central role in building machine translation systems and because of the complexity We present two web-based interactive tools of the task sub-sentential alignment of parallel cor- for creating and visualizing sub-sentential pora continues to be an active area of research (e.g. alignments of parallel text." ID="ID_1813588923" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Two tools for creating and visualizing sub-sentential " FOLDED="true" ID="ID_1119727783" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://www.researchgate.net/publication/234815723_Two_tools_for_creating_and_visualizing_sub-sentential_alignments_of_parallel_text">
<node TEXT="PDF | We present two web-based interactive tools for creating and visualizing sub-sentential alignments of parallel text. Yawat is a tool to support distributed manual word- and phrase-alignment " ID="ID_259400767" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="uVis Studio: An Integrated Development Environment for " FOLDED="true" ID="ID_991229702" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://www.researchgate.net/publication/237081673_uVis_Studio_An_Integrated_Development_Environment_for_Visualization">
<node TEXT="uVis Studio: An Integrated Development Environment for Visualization Conference Paper in Proceedings of SPIE - The International Society for Optical Engineering 8654 &#xc2;&#xb7; February 2013 with 38 Reads" ID="ID_1662440585" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Interactive Text Mining Suite: Data Visualization for " FOLDED="true" ID="ID_407890758" CREATED="1566553719154" MODIFIED="1566553719154" LINK="http://ceur-ws.org/Vol-1786/scrivner.pdf">
<node TEXT="Interactive Text Mining Suite: Data Visualization for Literary Studies Olga Scrivner and Jefferson Davis Indiana University Abstract In recent years there has been growing interest in visualization methods for literary text analysis. While text mining and visualization tools have evolved into mainstream research methods in many &#xef;&#xac;&#xfffd;elds (e.g " ID="ID_1820928883" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Create an Interactive Form with Power Query - YouTube" FOLDED="true" ID="ID_1548752414" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://www.youtube.com/watch?v=KVqprz4Rd3I">
<node TEXT="This involves creating two queries in Power Query - (1) a function query and then (2) a plain query from a form (basically a table) where someone enters information. See the video to check out the " ID="ID_164288046" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="11 Javascript Data Visualization Libraries for 2019" FOLDED="true" ID="ID_652083743" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://blog.bitsrc.io/11-javascript-charts-and-data-visualization-libraries-for-2018-f01a283a5727">
<node TEXT="Instead we can use neat data visualization methods that leverage the brain&#xe2;&#x20ac;&#x2122;s ability to identify and process data in a visual way. To help you get started and easily add beautiful data visualization to your favorite application here are some of the best Javascript data visualization libraries around in 2019 (unranked)." ID="ID_1173350760" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Stop filtering of one visualisation - Power BI" FOLDED="true" ID="ID_1293806089" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://community.powerbi.com/t5/Desktop/Stop-filtering-of-one-visualisation/td-p/10866">
<node TEXT="I have created a dashboard with several cards bar charts and two scatter charts. The data ranges over ten years so all the cards and bar charts show the latest year values when no year is chosen and the correct values for the corresponding year when a year is chosen. Ive done this using measure " ID="ID_957101850" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="(DOC) Visualisation as a design research method for rich " FOLDED="true" ID="ID_1634885461" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://www.academia.edu/858285/Visualisation_as_a_design_research_method_for_rich-media_prototyping">
<node TEXT="These perceptions and conceptions form a fundamental part the design of a visualisation method to help accurately analyse research outcomes. Studies by Zhou and Feiner (1998) indicate two &#xe2;&#x20ac;&#x2dc;intents&#xe2;&#x20ac;&#x2122; that may help designers with the creation of visualisation graphics. The authors describe this as &#xe2;&#x20ac;&#x2dc;inform&#xe2;&#x20ac;&#x2122; and &#xe2;&#x20ac;&#x2dc;enable&#xe2;&#x20ac;&#x2122;." ID="ID_1553934498" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Propositional Logic | Internet Encyclopedia of Philosophy" FOLDED="true" ID="ID_931130085" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://www.iep.utm.edu/prop-log/">
<node TEXT="Propositional Logic. Propositional logic also known as sentential logic and statement logic is the branch of logic that studies ways of joining and/or modifying entire propositions statements or sentences to form more complicated propositions statements or sentences as well as the logical relationships and properties that are derived from these methods of combining or altering statements." ID="ID_1602755966" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Interactive Solutions for E-Commerce Product customizers " FOLDED="true" ID="ID_1096491817" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://www.indeforminteractive.com/">
<node TEXT="We deliver Interactive Solutions - Interactive product customizers for for E-Commerce and Interactive 3D Web Visualizations. We create Immersive Virtual reality Augmented reality and 360 visual experiences virtual avatars and media installations. We add an interactive touch to visual ideas products or stories letting them to enjoy great experiences that are accessible anywhere on the Web or " ID="ID_554303039" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Data Visualisation for Online Banking - Blog - ZoomCharts " FOLDED="true" ID="ID_123992625" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://zoomcharts.com/en/blog/data-visualisation-for-online-banking">
<node TEXT="data visualization interactive charts javascript charts html5 charts data visualisation online banking data visualisation for online banking. Back to blog. Tweet. How do you feel when you are presented with a large volume of unexciting data which can actually take hours to extract any meaningful insight? To be more precise how do you feel when " ID="ID_1323800763" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
</node>
<node TEXT="sentential form Code#$D$#" FOLDED="true" ID="ID_1604130323" CREATED="1566553719154" MODIFIED="1566553719154">
<icon BUILTIN="stop-sign"/>
<node TEXT="formal grammars - What is rightmost sentential forms " FOLDED="true" ID="ID_211928590" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://cs.stackexchange.com/questions/62342/what-is-rightmost-sentential-forms">
<node TEXT="A sentential form is any string derivable from the start symbol. Note that this includes the forms with non-terminals at intermediate steps as well. A right-sentential form is a sentential form that occurs in a step of rightmost derivation (RMD). A sentence is a sentential form consisting only of terminals . The examples in your question are " ID="ID_104822294" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Sentential Forms - Undergraduate Courses" FOLDED="true" ID="ID_735800132" CREATED="1566553719154" MODIFIED="1566553719154" LINK="http://courses.cs.vt.edu/~cs3304/Spring00/notes/Chapter-3a/tsld012.htm">
<node TEXT="Sentential Forms. Every string of symbols in the derivation is a sentential form. A sentence is a sentential form that has only terminal symbols . A leftmost derivation is one in which the leftmost nonterminal in each sentential form is the one that is expanded next in the derivation . A rightmost derivation works right to left instead . Some derivations are neither leftmost nor rightmost" ID="ID_1552390614" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="compilers - What is a sentential form? - Computer " FOLDED="true" ID="ID_771816059" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://cs.stackexchange.com/questions/82292/what-is-a-sentential-form">
<node TEXT="Is the concept sentential form so different from the concept derivation Yes these are different concepts. A derivation is a sequence of replacements of nonterminals using derivation rules given as a part of grammar while a sentential form is a string over terminals and nonterminals. You generate/derive/obtain sentential form using " ID="ID_405341436" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Sentential Form - WPI" FOLDED="true" ID="ID_1063657859" CREATED="1566553719154" MODIFIED="1566553719154" LINK="http://web.cs.wpi.edu/~kal/PLT/PLT2.1.2e.html">
<node TEXT="Sentential Form and Sentence Sentential Form . A sentential form is any string derivable from the start symbol. Thus in the derivation of a + a * a  E + T * F and E + F * a and F + a * a are all sentential forms as are E and a + a * a themselves.. Sentence . A sentence is a sentential form consisting only of terminals such as a + a * a. A sentence can be derived using the following algorithm:" ID="ID_218988315" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Code-switching - Wikipedia" FOLDED="true" ID="ID_254313503" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://en.wikipedia.org/wiki/Code-switching">
<node TEXT="Code mixing is a thematically related term but the usage of the terms code-switching and code-mixing varies. Some scholars use either term to denote the same practice while others apply code-mixing to denote the formal linguistic properties of language-contact phenomena and code-switching to denote the actual spoken usages by multilingual " ID="ID_38871117" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Propositional formula - Wikipedia" FOLDED="true" ID="ID_1610353158" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://en.wikipedia.org/wiki/Propositional_form">
<node TEXT="In propositional logic a propositional formula is a type of syntactic formula which is well formed and has a truth value. If the values of all variables in a propositional formula are given it determines a unique truth value. A propositional formula may also be called a propositional expression a sentence or a sentential formula." ID="ID_493383671" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Sentential Logic samples forms and truth tables Flashcards " FOLDED="true" ID="ID_692527724" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://quizlet.com/20457615/sentential-logic-samples-forms-and-truth-tables-flash-cards/">
<node TEXT="Start studying Sentential Logic samples forms and truth tables. Learn vocabulary terms and more with flashcards games and other study tools." ID="ID_462396297" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Intersentential codeswitching - Glottopedia" FOLDED="true" ID="ID_1426328014" CREATED="1566553719154" MODIFIED="1566553719154" LINK="http://www.glottopedia.org/index.php/Intersentential_codeswitching">
<node TEXT="Intersentential (or inter-sentential) codeswitching refers to a type of codeswitching: the alternation in a single discourse between two languages where the switching occurs after a sentence in the first language has been completed and the next sentence starts with a new language (e.g. Appel  Muysken 1987:118). Example" ID="ID_1909093271" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Sentential Logic Flashcards | Quizlet" FOLDED="true" ID="ID_777084046" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://quizlet.com/3627591/sentential-logic-flash-cards/">
<node TEXT="Sentential Logic Logic that depends on connectives between sentence fragments Use symbols to make truth tables to asses not if an argument is valid but if its form is valid" ID="ID_1014464218" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Code Switching Definition and Examples in Language" FOLDED="true" ID="ID_1841229029" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://www.thoughtco.com/code-switching-language-1689858">
<node TEXT="Code switching (also code-switching CS) is the practice of moving back and forth between two languages or between two dialects or registers of the same language at one time. Code switching occurs far more often in conversation than in writing. It is also called code-mixing and style-shifting." ID="ID_1603274626" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="TYPES AND FUNCTIONS OF CODE-SWITCHING IN THE ENGLISH " FOLDED="true" ID="ID_279953893" CREATED="1566553719154" MODIFIED="1566553719154" LINK="https://www.researchgate.net/publication/306031490_TYPES_AND_FUNCTIONS_OF_CODE-SWITCHING_IN_THE_ENGLISH_LANGUAGE_USED_BY_IRAQI_DOCTORS_IN_FORMAL_SETTINGS">
<node TEXT="TYPES AND FUNCTIONS OF CODE-SWITCHING IN THE ENGLISH LANGUAGE USED BY IRAQI DOCTORS IN FORMAL SETTINGS.  Inter-sentential code switching is characterized by a switch from one language " ID="ID_1210600735" CREATED="1566553719154" MODIFIED="1566553719154"/>
</node>
<node TEXT="Propositional Logic | Internet Encyclopedia of Philosophy" FOLDED="true" ID="ID_1153097334" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://www.iep.utm.edu/prop-log/">
<node TEXT="Propositional Logic. Propositional logic also known as sentential logic and statement logic is the branch of logic that studies ways of joining and/or modifying entire propositions statements or sentences to form more complicated propositions statements or sentences as well as the logical relationships and properties that are derived from these methods of combining or altering statements." ID="ID_17360534" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
</node>
</node>
<node TEXT="parse tree" ID="ID_97141588" CREATED="1566881027641" MODIFIED="1566881027641" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="inference" ID="ID_822884625" CREATED="1566881027641" MODIFIED="1566881027641" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="derivation" ID="ID_444253980" CREATED="1566881027641" MODIFIED="1566881027641" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="parse trees" ID="ID_626246233" CREATED="1566881027642" MODIFIED="1566881027642" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="parse trees Interactive Visualisation#$D$#" FOLDED="true" ID="ID_524713171" CREATED="1566553719155" MODIFIED="1566553719155">
<icon BUILTIN="stop-sign"/>
<node TEXT="javascript - Visualizing a parse tree with d3.js - Stack " FOLDED="true" ID="ID_1471932380" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://stackoverflow.com/questions/38222685/visualizing-a-parse-tree-with-d3-js">
<node TEXT="Browse other questions tagged javascript html d3.js parse-tree or ask your own question. Blog Making Sense of the Metadata: Clustering 4000 Stack Overflow tags with&#xe2;&#x20ac;&#xa6;" ID="ID_136054949" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="B+ Tree Visualization" FOLDED="true" ID="ID_1308525934" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://www.cs.usfca.edu/~galles/visualization/BPlusTree.html">
<node TEXT="Animation Speed: w: h: Algorithm Visualizations" ID="ID_1972093985" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="html5 - Dependency parsing tree visualization on web page " FOLDED="true" ID="ID_229556481" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://stackoverflow.com/questions/12543911/dependency-parsing-tree-visualization-on-web-page">
<node TEXT="Below is an example of dependency parsing tree. I want to visualize it on html web page can any one show me some examples or directions? Im familiar with C/C++ Python but not familiar with html/" ID="ID_1847392598" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="GitHub - sobhe/dependency-parse-tree: Dependency parse " FOLDED="true" ID="ID_175245973" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://github.com/sobhe/dependency-parse-tree">
<node TEXT="Dependency parse tree visualization with D3 library. - sobhe/dependency-parse-tree. Dependency parse tree visualization with D3 library. - sobhe/dependency-parse-tree. Skip to content. Why GitHub? Features &#xe2;&#x2020;&#x2019; Code review " ID="ID_1277201969" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="VISL - Tree structure" FOLDED="true" ID="ID_394098652" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://visl.sdu.dk/visl/en/parsing/automatic/trees.php">
<node TEXT="Visualization: Notational convention In order to continue using the Java applets see Verify Java Version and Download Java . We are actively working on replacing all our Java with portable HTML5." ID="ID_1901603039" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="PARSE TREE VISUALIZATION FOR MALAY SENTENCE (BMTutor)" FOLDED="true" ID="ID_904288560" CREATED="1566553719155" MODIFIED="1566553719155" LINK="http://www.arpnjournals.com/jeas/research_papers/rp_2015/jeas_0215_1588.pdf">
<node TEXT="BMTutor is a parse tree visualization package combined with sentence checker sentence correction parse tree visualization word attribute components and parse tree visualization for sentence examples. The sentence checker needs to be included to produce a parse tree only for grammatical sentence. After the checking" ID="ID_1792649103" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="Interactive Visualizations for Deep Learning - GitHub Pages" FOLDED="true" ID="ID_1807691238" CREATED="1566553719155" MODIFIED="1566553719155" LINK="http://predictive-workshop.github.io/papers/vpa2014_1.pdf">
<node TEXT="Interactive Visualizations for Deep Learning Jason Chuang and Richard Socher  the corpus of parse trees. As our visualization is implemented in javascript we leverage the functional nature of the language and per-mit users to pass in functions that can be recursively applied to all" ID="ID_1906782055" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="15 Data Visualizations That Will Blow Your Mind | Udacity" FOLDED="true" ID="ID_1599801249" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://blog.udacity.com/2015/01/15-data-visualizations-will-blow-mind.html">
<node TEXT="If a picture is worth a thousand words a data visualization is worth at least a million. As inspiration for your own work with data check out these 15 data visualizations that will wow you. Taken together this roundup is an at-a-glance representation of the range of uses data analysis has from " ID="ID_1842836625" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="NLP Parse Visualization" FOLDED="true" ID="ID_329341381" CREATED="1566553719155" MODIFIED="1566553719155" LINK="http://nlpviz.bpodgursky.com/">
<node TEXT="Person Date Organization Location Ordinal Number. By Ben Podgursky Source code here NLP by CoreNLP visualized by dagre-d3 and d3 English Spanish Spanish" ID="ID_400877522" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="AVL Tree Visualzation" FOLDED="true" ID="ID_1842631296" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://www.cs.usfca.edu/~galles/visualization/AVLtree.html">
<node TEXT="Animation Speed: w: h: Algorithm Visualizations" ID="ID_1941867629" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="Interactive Visualization for Linguistic Structure" FOLDED="true" ID="ID_1794144373" CREATED="1566553719155" MODIFIED="1566553719155" LINK="http://ai2-website.s3.amazonaws.com/publications/InteractiveVisualizationOfLinguisticStructure.pdf">
<node TEXT="Interactive Visualization for Linguistic Structure Aaron Sarnat Vidur Joshi Cristian Petrescu-Prahova Alvaro Herrasti Brandon Stilson and Mark Hopkins Allen Institute for Arti&#xef;&#xac;&#xfffd;cial Intelligence Seattle WA Abstract We provide a visualization library and web interface for interactively exploring a parse tree or a forest of parses. The li-" ID="ID_338379611" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="Add a way to collapse/expand all parse tree nodes with one " FOLDED="true" ID="ID_1803591237" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://github.com/mike-lischke/vscode-antlr4/issues/62">
<node TEXT="I think the parse tree visualization is an amazing work! One thing I noticed is that it is not interactive now? The parse tree is not reflecting the grammar change instantly.Also I cannot detach the parse tree from vscode into a separate screen for easier visualization." ID="ID_305929268" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
</node>
<node TEXT="parse trees Code#$D$#" FOLDED="true" ID="ID_1441458823" CREATED="1566553719155" MODIFIED="1566553719155">
<icon BUILTIN="stop-sign"/>
<node TEXT="Abstract syntax tree - Wikipedia" FOLDED="true" ID="ID_1334798948" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://en.wikipedia.org/wiki/Abstract_syntax_tree">
<node TEXT="This distinguishes abstract syntax trees from concrete syntax trees traditionally designated parse trees which are typically built by a parser during the source code translation and compiling process. Once built additional information is added to the AST by means of subsequent processing e.g. contextual analysis." ID="ID_935717651" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="Compiler Parse Trees and Syntax Trees - javatpoint" FOLDED="true" ID="ID_800568711" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://www.javatpoint.com/parse-tree-and-syntax-tree">
<node TEXT="Take the following parse tree as an example: In the parse tree most of the leaf nodes are single child to their parent nodes. In the syntax tree we can eliminate this extra information. Syntax tree is a variant of parse tree. In the syntax tree interior nodes are operators and leaves are operands. Syntax tree is usually used when represent a " ID="ID_1176345679" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="Parse tree - Wikipedia" FOLDED="true" ID="ID_1779683743" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://en.wikipedia.org/wiki/Parse_tree">
<node TEXT="A parse tree or parsing tree or derivation tree or concrete syntax tree is an ordered rooted tree that represents the syntactic structure of a string according to some context-free grammar.The term parse tree itself is used primarily in computational linguistics; in theoretical syntax the term syntax tree is more common.. Parse trees concretely [clarification needed] reflect the syntax of " ID="ID_1972992021" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="DERIVATION TREE OR PARSE TREE IN TOC - YouTube" FOLDED="true" ID="ID_699386636" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://www.youtube.com/watch?v=42nqWoHacxg">
<node TEXT="22-Introduction to Context free grammar Derivation Parse tree Ambiguity - Duration: 10:08.  Derivation Tree Types (Left/Right Derivation) with Difference and Examples - Duration: 7:32." ID="ID_986962017" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="c++ - Generate Parse Tree in c - Stack Overflow" FOLDED="true" ID="ID_1735735162" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://stackoverflow.com/questions/17353877/generate-parse-tree-in-c">
<node TEXT="The following code is supposed to generate a parse tree of the input expression but the problem is that the output ETFS (functions used in the code). I want it to be something like: a+b*c =" ID="ID_283216926" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="Parsing in Java (Part 1): Structures Trees and Rules - DZone" FOLDED="true" ID="ID_662890866" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://dzone.com/articles/parsing-in-java-part-1-structures-trees-and-rules">
<node TEXT="Things like comments are superfluous for a program and grouping symbols are implicitly defined by the structure of the tree. A parse tree is a representation of the code closer to the concrete syntax." ID="ID_464484274" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="6.6. Parse Tree &#xe2;&#x20ac;&#x201d; Problem Solving with Algorithms and Data " FOLDED="true" ID="ID_398609493" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://runestone.academy/runestone/books/published/pythonds/Trees/ParseTree.html">
<node TEXT="The code for our parse tree builder is presented in ActiveCode 1. The four rules for building a parse tree are coded as the first four clauses of the if statement on lines 12 17 23 and 26 of ActiveCode 1. In each case you can see that the code implements the " ID="ID_1491440874" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="Parse Trees - Stanford University" FOLDED="true" ID="ID_1123689087" CREATED="1566553719155" MODIFIED="1566553719155" LINK="http://infolab.stanford.edu/~ullman/ialc/spr10/slides/cfl2.pdf">
<node TEXT="Parse Trees Left- and Rightmost Derivations For every parse tree there is a unique leftmost and a unique rightmost derivation. We&#xe2;&#x20ac;&#x2122;ll prove: 1. If there is a parse tree with root labeled A and yield w then A =* lm w. 2. If A =* lm w then there is a parse tree with root A and yield w." ID="ID_1673826146" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="GRAMMARS PARSING TREE TRAVERSALS - cs.cornell.edu" FOLDED="true" ID="ID_1500250455" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://www.cs.cornell.edu/courses/cs2110/2014fa/L21-ParsingTrees/cs2110fa14Parsing.pdf">
<node TEXT="parse a sentence (thus checking if a string is asentence is in the language) To parse a sentence is to build a parse tree: much like diagramming a sentence  Example: Show that ((4+23) + 89) is a valid expression E by building a parse tree E ( E + E ) 89 ( E + E ) 4 23 E &#xe2;&#x2020;&#x2019; integer E &#xe2;&#x2020;&#x2019; ( E + E )" ID="ID_1064257652" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="Getting Started C# Syntax Analysis &#xc2;&#xb7; dotnet/roslyn Wiki " FOLDED="true" ID="ID_112412821" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://github.com/dotnet/roslyn/wiki/Getting-Started-C%23-Syntax-Analysis">
<node TEXT="By navigating this tree structure you can find any statement expression token or bit of whitespace in a code file! Traversing Trees Manual Traversal. The following steps use Edit and Continue to demonstrate how to parse C# source text and find a parameter declaration contained in the source. Example - Manually traversing the tree " ID="ID_1317980469" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="10. Parse Trees - cs.wcupa.edu" FOLDED="true" ID="ID_168746636" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://www.cs.wcupa.edu/rkline/fcs/parse-trees.html">
<node TEXT="Parse Trees A parse tree is an entity which represents the structure of the derivation of a terminal string from some non-terminal (not necessarily the start symbol). The definition is as in the book. Key features to define are the root &#xe2;&#x2c6;&#x2c6; V and yield &#xe2;&#x2c6;&#x2c6; &#xce;&#xa3; * of each tree." ID="ID_80060351" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="Parse Trees - cs.rochester.edu" FOLDED="true" ID="ID_239767626" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://www.cs.rochester.edu/~nelson/courses/csc_173/grammars/parsetrees.html">
<node TEXT="Parse Trees. A parse tree for a grammar G is a tree where the root is the start symbol for G the interior nodes are the nonterminals of G the leaf nodes are the terminal symbols of G. the children of a node T (from left to right) correspond to the symbols on the right hand side of some production for T in G." ID="ID_1807794037" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
</node>
</node>
<node TEXT="ambiguity in grammar and Language- ambiguous Grammar" ID="ID_1320597716" CREATED="1566881027643" MODIFIED="1566881027643" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="ambiguity in grammar and Language Context Free Grammar Interactive Visualisation#$D$#" FOLDED="true" ID="ID_377142307" CREATED="1566553719155" MODIFIED="1566553719155">
<icon BUILTIN="stop-sign"/>
<node TEXT="Compiler Design Lecture 3 -- Ambiguous grammars and making " FOLDED="true" ID="ID_219970435" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://www.youtube.com/watch?v=9vmhcBpZDcE">
<node TEXT="The interactive transcript could not be loaded.  CONTEXT FREE GRAMMAR- AMBIGUITY - Duration:  22-Introduction to Context free grammar Derivation " ID="ID_1800659240" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="Ambiguous Grammar - YouTube" FOLDED="true" ID="ID_458909863" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://www.youtube.com/watch?v=wQjppolFdas">
<node TEXT="TOC: Ambiguous Grammar This Lecture shows what are Ambiguous Grammars and shows an example of an Ambiguous Grammar Contribute: http://www.nesoacademy.org/don" ID="ID_1198692188" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="Context Free Grammars | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_990768094" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://brilliant.org/wiki/context-free-grammars/">
<node TEXT="Context-free grammars (CFGs) are used to describe context-free languages. A context-free grammar is a set of recursive rules used to generate patterns of strings. A context-free grammar can describe all regular languages and more but they cannot describe all possible languages. Context-free grammars are studied in fields of theoretical computer science compiler design and linguistics." ID="ID_1291923486" CREATED="1566553719155" MODIFIED="1566553719155"/>
</node>
<node TEXT="Context Free Grammar Visualization Using SVG - svgopen.org" FOLDED="true" ID="ID_482086555" CREATED="1566553719155" MODIFIED="1566553719155" LINK="https://www.svgopen.org/2009/papers/58-Interactive_Documentation_using_JavaScript_and_SVG/">
<node TEXT="Context free grammars are used to describe formal languages in computer science. The most common format for Context Free Grammar representation is the Backus-Naur Form or BNF for short. A BNF consists of a set of production rules - each rule describes a single part of the language." ID="ID_763212319" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Ambiguity Functions of Context-Free Grammars and Languages" FOLDED="true" ID="ID_478889685" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://pdfs.semanticscholar.org/a0e0/0184da8126bfa1c56a474543d3a50cc2967b.pdf">
<node TEXT="word can have. A context-free grammar is k-ambiguous if k is the least upper bound for the ambiguity of the generated words. A context-free language is k-ambiguous if it is generated by a k-ambiguous context-free grammar but by no k 1-ambiguous grammar. For each k 2N there are examples of k-ambiguous languages [23]." ID="ID_1815711324" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="AN INTERACTIVE PARSER GENERATOR FOR CONTEXT-FREE GRAMMARS" FOLDED="true" ID="ID_46705517" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://www.researchgate.net/publication/261363980_AN_INTERACTIVE_PARSER_GENERATOR_FOR_CONTEXT-FREE_GRAMMARS">
<node TEXT="Grammar Editor [8] is an interactive editor for context-free grammars employing the CYK algorithm. As with Grambler a user enters a grammar and text to be parsed and the program" ID="ID_1149181662" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="context free - Finding a unambiguous grammar - Computer " FOLDED="true" ID="ID_458822119" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://cs.stackexchange.com/questions/74467/finding-a-unambiguous-grammar">
<node TEXT="$\begingroup$ There are ways of proving that a context-free language is inherently ambiguous but your language is not inherently ambiguous. You just have to think of a different grammar. $\endgroup$ &#xe2;&#x20ac;&#x201c; Yuval Filmus Apr 24 17 at 19:23" ID="ID_1905533382" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Understanding Context-free Grammars through Data Visualization" FOLDED="true" ID="ID_1279357078" CREATED="1566553719156" MODIFIED="1566553719156" LINK="http://su.diva-portal.org/smash/get/diva2:934721/FULLTEXT01.pdf">
<node TEXT="For a context-free grammar describing a natural language words are terminals whereas lexical cate-gories and constituents are non-terminals. A grammatical sequence of words is realized if a set of rules in R can be put together to reach S the start symbol. In this model the way of describing a grammar is" ID="ID_1900539506" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="AN INTERACTIVE PARSER GENERATOR FOR CONTEXT-FREE GRAMMARS " FOLDED="true" ID="ID_103947713" CREATED="1566553719156" MODIFIED="1566553719156" LINK="http://ozark.hendrix.edu/~ferrer/research/papers/InteractiveParser.pdf">
<node TEXT="To demonstrate the input language for context-free grammars Figure 1 gives as an example the grammar for that input language. Grambler is self-hosting; it generated its own parser. Figure 1: Grammar for grammars Each production is structured as follows. The left-hand side symbol is followed by a" ID="ID_702418142" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Context free grammars - SlideShare" FOLDED="true" ID="ID_1788988558" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://www.slideshare.net/Shiraz316/context-free-grammars-69977780">
<node TEXT="Costas Busch - LSU 3 Context-Free Languages Pushdown Automata Context-Free Grammars stack automaton 4. Costas Busch - LSU 4 Context-Free Grammars 5. Costas Busch - LSU 5 Grammars Grammars express languages Example: the English language grammar verbpredicate nounarticlephrasenoun predicatephrasenounsentence _ _ 6." ID="ID_416329627" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Regular vs Context Free Grammars - Stack Overflow" FOLDED="true" ID="ID_154135107" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://stackoverflow.com/a/6537242">
<node TEXT="Regular grammar is either right or left linear whereas context free grammar is basically any combination of terminals and non-terminals. Hence you can see that regular grammar is a subset of context-free grammar. So for a palindrome for instance is of the form S-ABA A-something B-something" ID="ID_575890165" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Is the language of Roman numerals ambiguous? - Stack Exchange" FOLDED="true" ID="ID_585784548" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://cs.stackexchange.com/questions/7777/is-the-language-of-roman-numerals-ambiguous/7806">
<node TEXT="You fell into the trap of thinking that formal language theory deals with meaning. It doesnt. In formal language theory a context-free language is ambiguous if some context-free grammar generates exactly that language but no such grammar does so in such a way that each string in the language only has a single parse tree." ID="ID_1059646424" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
</node>
<node TEXT="ambiguity in grammar and Language Context Free Grammar Code#$D$#" FOLDED="true" ID="ID_22756032" CREATED="1566553719156" MODIFIED="1566553719156">
<icon BUILTIN="stop-sign"/>
<node TEXT="Context-free grammar - Wikipedia" FOLDED="true" ID="ID_908358497" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://en.wikipedia.org/wiki/Context-free_grammar">
<node TEXT="Usually ambiguity is a feature of the grammar not the language and an unambiguous grammar can be found that generates the same context-free language. However there are certain languages that can only be generated by ambiguous grammars; such languages are called inherently ambiguous languages ." ID="ID_438943809" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Ambiguity in Context free Grammar and Context free " FOLDED="true" ID="ID_1914504382" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://www.geeksforgeeks.org/ambiguity-in-context-free-grammar-and-context-free-languages/">
<node TEXT="Ambiguous Context Free Languages : A context free language is called ambiguous if there is no unambiguous grammar to define that language and it is also called inherently ambiguous Context Free Languages. eg- L={a n b n c m} U {a n b m c m} Note : If a context free grammar G is ambiguous language generated by grammar L(G) may or may not be " ID="ID_586860965" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="terminology - what is an ambiguous context free grammar " FOLDED="true" ID="ID_1736411663" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://stackoverflow.com/questions/6035451/what-is-an-ambiguous-context-free-grammar">
<node TEXT="Consider an input string recognized by context-free grammar. The string is derived ambiguously if it has two or more different leftmost derivations or parse trees of you wish. A grammar is ambiguous if it generates strings ambiguously." ID="ID_496270877" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Ambiguity in Context Free Grammar - tutorialspoint.com" FOLDED="true" ID="ID_1616338643" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://www.tutorialspoint.com/compiler_design/ambiguity_in_context_free_grammar.asp">
<node TEXT="Ambiguity in Context Free Grammar - Ambiguity in Context Free Grammar - Compiler Design Video Tutorial for Engineering MCA and GATE exams - Learn Compiler Design in simple and easy steps starting from basic to advanced concepts with examples including Overview Lexical Analyzer Syntax Analysis Semantic Analysis Run-Time Environment Symbol Tables Intermediate Code Generation Code " ID="ID_1398248006" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="computer science - What makes a context free grammar " FOLDED="true" ID="ID_614765673" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://math.stackexchange.com/questions/17735/what-makes-a-context-free-grammar-ambiguous">
<node TEXT="What makes a context free grammar ambiguous? A grammar is ambiguous if theres a word which has two different derivation trees. Youll have to look up derivation tree in your textbook since drawing them is awkward but the idea that it doesnt matter in which order youre doing the derivations as long as its basically the same derivation.. For example consider the grammar \begin{align} S " ID="ID_1468330763" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Ambiguity in Context Free Grammars - YouTube" FOLDED="true" ID="ID_967966381" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://www.youtube.com/watch?v=bNR0io9jyWQ">
<node TEXT="Ambiguity in Context Free Grammars Watch more videos at https://www.tutorialspoint.com/videotutorials/index.htm Lecture By: Mr. Arnab Chakraborty Tutorials " ID="ID_1508464119" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="What is ambiguous grammar with examples? - Quora" FOLDED="true" ID="ID_1463626903" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://www.quora.com/What-is-ambiguous-grammar-with-examples">
<node TEXT="* In computer science an ambiguous grammar is a CFG (context-free grammar) for which there exists a string that can have more than one leftmost derivation or parse tree while an unambiguous grammar is a context-free grammar for which every vali" ID="ID_1080226323" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Ambiguity in Context-Free Grammars - tutorialspoint.com" FOLDED="true" ID="ID_1681248054" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://www.tutorialspoint.com/automata_theory/ambiguity_in_grammar">
<node TEXT="Ambiguity in Context-Free Grammars - Learn Automata concepts in simple and easy steps starting from Introduction Deterministic Finite Automata Non-Deterministic Finite Automata NDFA to DFA Conversion DFA Minimization Moore and Mealy Machines Introduction to Grammars Language Generated by Grammars Chomsky Grammar Classification Regular Expressions Regular Sets Ardens Theorem " ID="ID_1050692092" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Ambiguous Grammar - YouTube" FOLDED="true" ID="ID_21162355" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://www.youtube.com/watch?v=wQjppolFdas">
<node TEXT="TOC: Ambiguous Grammar This Lecture shows what are Ambiguous Grammars and shows an example of an Ambiguous Grammar Contribute: http://www.nesoacademy.org/don" ID="ID_1555789554" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Ambiguous Grammar definition and solved examples " FOLDED="true" ID="ID_1130729243" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://er.yuvayana.org/ambiguous-grammars-definition-and-solved-examples/">
<node TEXT="Learn Ambiguous Grammar definition and solved examples. Ambiguous Grammar also know as Ambiguous Languages in Automata of Theory of Computation. A CFG is said to be ambiguous if and only if it contains more than one derivation trees for same string." ID="ID_1764997934" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Ambiguous grammar - Wikipedia" FOLDED="true" ID="ID_1868088326" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://en.wikipedia.org/wiki/Ambiguous_grammar">
<node TEXT="In computer science an ambiguous grammar is a context-free grammar for which there exists a string that can have more than one leftmost derivation or parse tree while an unambiguous grammar is a context-free grammar for which every valid string has a unique leftmost derivation or parse tree. Many languages admit both ambiguous and unambiguous " ID="ID_1001538521" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Regular vs Context Free Grammars - Stack Overflow" FOLDED="true" ID="ID_1784375461" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://stackoverflow.com/questions/559763/regular-vs-context-free-grammars">
<node TEXT="Regular grammar is either right or left linear whereas context free grammar is basically any combination of terminals and non-terminals. Hence you can see that regular grammar is a subset of context-free grammar. So for a palindrome for instance is of the form S-ABA A-something B-something" ID="ID_1575260134" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
</node>
<node TEXT="Equivalence of Push Down Automata and Context Free Grammar Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1455198849" CREATED="1566553719194" MODIFIED="1566553719194">
<icon BUILTIN="stop-sign"/>
<node TEXT="Equivalence of CFG and PDA (Part 1) - YouTube" FOLDED="true" ID="ID_1400155745" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://www.youtube.com/watch?v=FjGrU7vczyg">
<node TEXT="TOC: Equivalence of CFG and PDA (Part 1) Topics Discussed: 1. Equivalence of CFG and PDA 2. Construction of PDA for a given CFG 3. Leftmost derivations 4. Storage of Left Sentential forms in PDA " ID="ID_1312955742" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="CFG to PDA Conversion - YouTube" FOLDED="true" ID="ID_116276283" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://www.youtube.com/watch?v=xWWRoiPRAi4">
<node TEXT="Please like  subscribe for more CS based tuts! :)  70+ channels more of your favorite shows  unlimited DVR storage space all in one great price." ID="ID_364039103" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="Pushdown Automata - University of Alaska Anchorage" FOLDED="true" ID="ID_556960306" CREATED="1566553719194" MODIFIED="1566553719194" LINK="http://www.math.uaa.alaska.edu/~afkjm/csce351/handouts/pda.pdf">
<node TEXT="Equivalence of PDA and CFG &#xe2;&#x20ac;&#xa2; A context-free grammar and pushdown automata are equivalent in power. &#xe2;&#x20ac;&#xa2; Theorem: Given a CFG grammar G then some pushdown automata P recognizes L(G). &#xe2;&#x20ac;&#x201c; To prove this we must show that we can take any CFG and express it as a PDA. Then we must take a PDA and show we can construct an equivalent CFG." ID="ID_1820461696" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="Automata Theory Tutorial - tutorialspoint.com" FOLDED="true" ID="ID_16664675" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://www.tutorialspoint.com/automata_theory/">
<node TEXT="Automata Theory is a branch of computer science that deals with designing abstract selfpropelled computing devices that follow a predetermined sequence of operations automatically. An automaton with a finite number of states is called a Finite Automaton. This is a brief and concise tutorial that " ID="ID_319416259" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="Increasing Visualization and Interaction in the Automata " FOLDED="true" ID="ID_94007455" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://users.cs.duke.edu/~rodger/papers/cse00/cse00fin.html">
<node TEXT="The proofs include construction type proofs where one representation of a language is converted to another representation such as proving that context-free grammars (CFG) and pushdown automata (PDA) both represent context-free languages. Visualization provides students with an alternative view in addition to the theoretical representation that " ID="ID_758970849" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="push-down automata | NP-Incompleteness - kunigami.blog" FOLDED="true" ID="ID_1293408020" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://kunigami.blog/tag/push-down-automata/">
<node TEXT="This type of automaton can be shown to be equivalent to a context-free grammar (CFG) which is out of the scope of this post as well but it&#xe2;&#x20ac;&#x2122;s very common for describing programming languages. The set of languages for which there is a push-down automata that define them is called context-free languages which contains the regular languages." ID="ID_104303625" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="Increasing visualization and interaction in the automata " FOLDED="true" ID="ID_403980501" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://www.researchgate.net/publication/221537777_Increasing_visualization_and_interaction_in_the_automata_theory_course">
<node TEXT="In this paper we describe how to increase the visualization and interaction in the automata theory course through the use of the tools JFLAP and Pate." ID="ID_1214039183" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="FORMAL LANGUAGES AND AUTOMATA THEORY BY A.PUNTAMBEKAR PDF" FOLDED="true" ID="ID_1134366667" CREATED="1566553719194" MODIFIED="1566553719194" LINK="https://soundcity.mobi/formal-languages-and-automata-theory-by-apuntambekar-53/">
<node TEXT="Chapter 5 Properties of Context Free Languages 5 1 to 5. Formal Languages  Automata Theory. Chapter7 Automata and their Languages 71 to Monday to Saturday 9. Finite push down 2-push down Automata and Turing machines The equivalence of the Automata and the appropriate grammars The Dyck language Syntax Analysis: Hello World this is a test." ID="ID_1119310215" CREATED="1566553719194" MODIFIED="1566553719194"/>
</node>
<node TEXT="Automata and formal language theory - aplicaciones.uc3m.es" FOLDED="true" ID="ID_596436421" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://aplicaciones.uc3m.es/cpa/cpa/generaFichaPDF?ano=2018plan=256asignatura=13877idioma=2">
<node TEXT="Equivalence of PDA by Empty Stack and PDA by Final State. 6.5. From Context-Free Grammar to Push-Down Automata. 6.6. From Pushdown Automata to Context-Free Grammar. 7.Turing Machine. 5.1. Definition if Turing Machine. 5.2. Variations of Turing Machine. 5.3. Universal Turing Machine. 8. Compilers 8.1. Syntactic Analysis 8.2. Code generation" ID="ID_128609631" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="Pushdown automaton accepting $\\{ab\\}^*$ with twice as " FOLDED="true" ID="ID_1316441036" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://cs.stackexchange.com/questions/67665/pushdown-automaton-accepting-a-b-with-twice-as-many-as-as-bs/67678">
<node TEXT="Equivalent DPDA that always halts for every DPDA with empty stack language. 1. Push two symbols to stack at once in a push down automata. 1. Understanding definitions of Deterministic Context Free Grammar and Deterministic Pushdown Automaata. 3." ID="ID_146465937" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="Converting a Context-Free Grammar to a Nondeterministic " FOLDED="true" ID="ID_691230846" CREATED="1566553719195" MODIFIED="1566553719195" LINK="http://www.jflap.org/modules/JFLAPWorkshop2014/Upload%20Exercises%20and%20Modules%20here/JayBagga/Modules/CFG2NPDA/Context-Free%20Grammar%20to%20NPDA.pdf">
<node TEXT="Converting a Context-Free Grammar to a Nondeterministic Pushdown Automaton Jay Bagga 1 Introduction By now you are familiar with context-free grammars and nondeterministic pushdown au-tomata. They are equivalent in the sense that both generate the class of context-free lan-guages." ID="ID_1416518905" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="A visual and interactive automata theory course with JFLAP " FOLDED="true" ID="ID_423668643" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://www.researchgate.net/publication/221536681_A_visual_and_interactive_automata_theory_course_with_JFLAP_40">
<node TEXT="A visual and interactive automata theory course with JFLAP 4.0.  push-down automata and Turing Machines.  grammars displaying parse trees and parsing any context-free grammar with " ID="ID_362578099" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
</node>
<node TEXT="Equivalence of Push Down Automata and Context Free Grammar Code#$D$#" FOLDED="true" ID="ID_377752774" CREATED="1566553719195" MODIFIED="1566553719195">
<icon BUILTIN="stop-sign"/>
<node TEXT="34-Context free grammar to push down automata by Deeba " FOLDED="true" ID="ID_1549401795" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://www.youtube.com/watch?v=QRnUm4LzzDU">
<node TEXT="34-Context free grammar to push down automata by Deeba Kannan. 34-Context free grammar to push down automata by Deeba Kannan.  35-Push Down Automata to Context Free Grammar by Deeba Kannan " ID="ID_725397104" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="CFG to PDA Conversion - YouTube" FOLDED="true" ID="ID_879947959" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://www.youtube.com/watch?v=xWWRoiPRAi4">
<node TEXT="34-Context free grammar to push down automata by Deeba Kannan - Duration:  22:49. Convert Cfg to Pda | Conversion | Theory of  Context-Free Grammar to Pushdown Automaton (and Equivalence " ID="ID_258859839" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="PDA  Context-Free Grammar - tutorialspoint.com" FOLDED="true" ID="ID_1767642778" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://www.tutorialspoint.com/automata_theory/pda_context_free_grammar">
<node TEXT="If a grammar G is context-free we can build an equivalent nondeterministic PDA which accepts the language that is produced by the context-free grammar G.A parser can be built for the grammar G.. Also if P is a pushdown automaton an equivalent context-free grammar G can be constructed where. L(G) = L(P) In the next two topics we will discuss how to convert from PDA to CFG and vice versa." ID="ID_1975883856" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="Equivalence of Pushdown Automata with Context-Free Grammar" FOLDED="true" ID="ID_227324811" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://www3.cs.stonybrook.edu/~cse350/slides/pda2.pdf">
<node TEXT="Automata with Context-Free Grammar Equivalence of Pushdown Automata with Context-Free Grammar &#xe2;&#x20ac;&#x201c; p.1/45. Motivation CFG and PDA are equivalent in power: a  Equivalence of Pushdown Automata with Context-Free Grammar &#xe2;&#x20ac;&#x201c; p.29/45. Note In case (a) the stack is empty only at the" ID="ID_1545270846" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="Pushdown automaton - Wikipedia" FOLDED="true" ID="ID_169544634" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://en.wikipedia.org/wiki/Pushdown_automaton">
<node TEXT="For a context-free grammar in Greibach normal form defining (1&#xce;&#xb3;) &#xe2;&#x2c6;&#x2c6; &#xce;&#xb4;(1aA) for each grammar rule A &#xe2;&#x2020;&#x2019; a&#xce;&#xb3; also yields an equivalent nondeterministic pushdown automaton. [2] : 115 The converse finding a grammar for a given PDA is not that easy." ID="ID_1297937199" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="Equivalence of Pushdown Automata with Context-Free Grammar" FOLDED="true" ID="ID_1244876876" CREATED="1566553719195" MODIFIED="1566553719195" LINK="http://www.cs.wichita.edu/~sinha/teaching/fall17/cs720/slide/pda2.pdf">
<node TEXT="Motivation I CFG and PDA are equivalent in power: a CFG generates a context-free language and a PDA recognizes a context-free language. I We show here how to convert a CFG into a PDA that recognizes the language speci ed by the CFG and vice versa I Application: this equivalence allows a CFG to be used to specify a programming language and the equivalent PDA to" ID="ID_1000552175" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="Definition of Pushdown Automata" FOLDED="true" ID="ID_1720454507" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://www.theoryofcomputation.co/definition-pushdown-automata/">
<node TEXT="One way to do this would be to feed the code (as strings) into a pushdown automaton programmed with transition functions that implement the context-free grammar for the language of balanced parentheses. If the code is valid and all parentheses are matched the pushdown automata will &#xe2;&#x20ac;&#x153;accept&#xe2;&#x20ac;&#xfffd; the code." ID="ID_148677326" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="NPTEL :: Computer Science and Engineering - Theory of " FOLDED="true" ID="ID_714707619" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://nptel.ac.in/courses/106103070/13">
<node TEXT="We will now show that pushdown automata and context-free grammars are equivalent in expressive power that is the language accepted by PDAs are exactly the context-free languages. To show this we have to prove each of the following: i) Given any arbitrary CFG G there exists some PDA M that accepts exactly the same language generated by G." ID="ID_1581790676" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="For a context free grammar how do i convert it to an " FOLDED="true" ID="ID_221405723" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://stackoverflow.com/questions/43161722/for-a-context-free-grammar-how-do-i-convert-it-to-an-equivalent-push-down-autom">
<node TEXT="A pushdown automaton can push symbols on top of a stack and pop them off. It can also base its transitions on the topmost stack symbol. We need to think of a mechanism that will allow us accept the right language by manipulating our stack." ID="ID_423385486" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="Equivalence of CFG and Pushdown Automata Properties " FOLDED="true" ID="ID_629523895" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://www.coursehero.com/file/p4ueu4d/Equivalence-of-CFG-and-Pushdown-Automata-Properties-Properites-Deterministic/">
<node TEXT="Equivalence of CFG and Pushdown Automata Properties Properites Deterministic from CSE 105 at Shanghai Jiao Tong University" ID="ID_738842432" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="for Bachelor of Technology - Veer Surendra Sai University " FOLDED="true" ID="ID_1384242347" CREATED="1566553719195" MODIFIED="1566553719195" LINK="http://vssut.ac.in/lecture_notes/lecture1428551440.pdf">
<node TEXT="Equivalence of PDA&#xe2;&#x20ac;&#x2122;s and CFG&#xe2;&#x20ac;&#x2122;s: From Grammars to Pushdown Automata From PDA&#xe2;&#x20ac;&#x2122;s to Grammars Deterministic Pushdown Automata : Definition of a Deterministic PDA Regular Languages and Deterministic PDA&#xe2;&#x20ac;&#x2122;s DPDA&#xe2;&#x20ac;&#x2122;s and Context-Free Languages DPDA&#xe2;&#x20ac;&#x2122;s and Ambiguous Grammars Properties of Context-Free Languages: Normal Forms for Context " ID="ID_427300095" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="14 Push-down Automata and Context-free Grammars" FOLDED="true" ID="ID_1759273455" CREATED="1566553719195" MODIFIED="1566553719195" LINK="http://www.eng.utah.edu/~cs3100/lectures/l18/pda-notes.pdf">
<node TEXT="246 14 Push-down Automata and Context-free Grammars. move a PDA may or may not read an input symbol (note the &#xce;&#xb5; in the signature) but must read the top of the stack in every move (note the absence of a &#xce;&#xb5; associated with &#xce;&#x201c;). We must point out that many variations on the above signature are possible." ID="ID_870731308" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
</node>
</node>
<node TEXT="Simplification of CFG" ID="ID_6672242" CREATED="1566881027645" MODIFIED="1566881027645" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Eliminating unit productions" ID="ID_1565542875" CREATED="1566881027645" MODIFIED="1566881027645" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Simplification of Context Free Grammar Eliminating unit productions Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1983037485" CREATED="1566553719156" MODIFIED="1566553719156">
<icon BUILTIN="stop-sign"/>
<node TEXT="Simplification of CFG (Removal of Unit Productions) - YouTube" FOLDED="true" ID="ID_502488769" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://www.youtube.com/watch?v=B2o75KpzfU4">
<node TEXT="TOC: Simplification of CFG (Removal of Unit Productions) This Lecture shows how to Simplify a given CFG by removing the Unit Productions. Contribute: http://" ID="ID_627433225" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Simplification of CFG (Reduction of CFG) - YouTube" FOLDED="true" ID="ID_1371087302" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://www.youtube.com/watch?v=EF09zxzpVbk">
<node TEXT="TOC: Simplification of CFG (Reduction of CFG) This Lecture shows how to Simplify a given CFG and explains the Phases involved in the Reduction step. Contribu" ID="ID_271446817" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Increasing Visualization and Interaction in the Automata " FOLDED="true" ID="ID_1237600152" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://users.cs.duke.edu/~rodger/papers/cse00/cse00fin.html">
<node TEXT="Pate is a parser for restricted and unrestricted grammars and a grammar transformer from a context-free grammar to Chomsky Normal Form (CNF). Given a grammar and an input string the parser is an exhaustive search parser that builds a derivation tree (not displayed) of all possible derivations in a breadth-first manner." ID="ID_1908511255" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="May 2016 &#xe2;&#x20ac;&#x201c; Bill Yu" FOLDED="true" ID="ID_1719310535" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://billyu.me/2016/05/">
<node TEXT="Regular language is a subset of context-free language. Further I learned about parsing and ambiguity in 5.2 and how to use derivation trees to check ambiguity. Chapter 6 is simplification of context-free grammars and normal forms of them. To simplify a context-free grammar there are three goals: no unit productions no useless variables and " ID="ID_177126597" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Theory of Computation (310241) | myVuniversity" FOLDED="true" ID="ID_815122429" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://www.myvuniversity.com/p/theory-of-computation-310241">
<node TEXT="Unit III Context Free Grammars (CFG) and Languages  Session 17 : Context Free Grammar- Definition Derivation Language of grammar sentential form parse tree inference derivation parse trees ambiguity in grammar and Language- ambiguous Grammar  Start Session 18 : Simplification of CFG: Eliminating unit productions useless " ID="ID_889211776" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="(PDF) JFLAP Activities for Formal Languages and Automata " FOLDED="true" ID="ID_179469430" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://www.academia.edu/2792488/JFLAP_Activities_for_Formal_Languages_and_Automata">
<node TEXT="This JFLAP material is intended for students taking a first course in formal languages and automata theory and are using JFLAP in their work. It includes material that will help you to get started with JFLAP gives hints how to use it and suggests" ID="ID_1552693035" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="JFLAP &#xe2;&#x20ac;&#x201c; Page 5 &#xe2;&#x20ac;&#x201c; Bill Yu" FOLDED="true" ID="ID_1126755603" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://billyu.me/category/tech/jflap/page/5/">
<node TEXT="NPDA is proved to be equivalent to context-free grammars and context-free languages. There is a part in JFLAP that lets you transfrom from one to another. Today is a day to celebrate: my office is finally ready! I have a big monitor in there. I spent most of my day implementing a Finite State Machine tester." ID="ID_1913113263" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Queue GRAPHS Data Structures Data Structures " FOLDED="true" ID="ID_1607187123" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://quizlet.com/264081502/queue-graphs-data-structures-data-structures-algorithms-data-s-flash-cards/">
<node TEXT="Start studying Queue GRAPHS Data Structures Data Structures Algorithms  Data S. Learn vocabulary terms and more with flashcards games and other study tools." ID="ID_257211175" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Home &#xc2;&#xb7; rbvermaa/strategoxt-manual-markdown Wiki &#xc2;&#xb7; GitHub" FOLDED="true" ID="ID_883367170" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://github.com/rbvermaa/strategoxt-manual-markdown/wiki">
<node TEXT="Since lexical and context-free syntax are both defined by productions there is actually no difference in the expressive power of the lexical and context-free grammar. Hence lexical syntax can be a context-free language instead of being restricted to a regular grammar which is the case when using conventional lexical analysis tools based on " ID="ID_1236590821" CREATED="1566553719156" MODIFIED="1566553719156"/>
</node>
<node TEXT="Mansoor Al-Aali | PhD | Ahlia University | Department of " FOLDED="true" ID="ID_1313992414" CREATED="1566553719156" MODIFIED="1566553719156" LINK="https://www.researchgate.net/profile/Mansoor_Al-Aali">
<node TEXT="The object of this paper is to exploit a PN model to simplify a context-free grammar (CFG). This is done first by representing the CFG by a PN. Then algorithms to eliminate &#xce;&#xbb;- and unit " ID="ID_261061970" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="Extracting data from semi-structured information utilizing " FOLDED="true" ID="ID_789920691" CREATED="1566553719157" MODIFIED="1566553719157" LINK="http://www.freepatentsonline.com/y2006/0245641.html">
<node TEXT="Extracting data from semi-structured information utilizing a discriminative context free grammar . United States Patent Application 20060245641  One possible way to encode the long-range dependence required for the above example might be to use a grammar which contains different productions for business contacts and personal contacts." ID="ID_93012293" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="Site Map - ZeePedia.com" FOLDED="true" ID="ID_728810551" CREATED="1566553719157" MODIFIED="1566553719157" LINK="http://www.zeepedia.com/sitemap.php">
<node TEXT="Control Unit 2-Bus Implementation of the SRC Data Path  Simplification of Boolean Expression Standard POS form Minterms and Maxterms KARNAUGH MAP Mapping a non-standard SOP Expression Converting between POS and SOP using the K-map  Context Free Grammar (CFG) CFG terminologies Trees Polish Notation (o-o-o) " ID="ID_737337550" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
</node>
<node TEXT="Simplification of Context Free Grammar Eliminating unit productions Code#$D$#" FOLDED="true" ID="ID_863498019" CREATED="1566553719157" MODIFIED="1566553719157">
<icon BUILTIN="stop-sign"/>
<node TEXT="Simplification of CFG (Removal of Unit Productions) - YouTube" FOLDED="true" ID="ID_690855324" CREATED="1566553719157" MODIFIED="1566553719157" LINK="https://www.youtube.com/watch?v=B2o75KpzfU4">
<node TEXT="TOC: Simplification of CFG (Removal of Unit Productions) This Lecture shows how to Simplify a given CFG by removing the Unit Productions. Contribute: http://" ID="ID_1928008497" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="Simplification of CFG (Reduction of CFG) - YouTube" FOLDED="true" ID="ID_1149312105" CREATED="1566553719157" MODIFIED="1566553719157" LINK="https://www.youtube.com/watch?v=EF09zxzpVbk">
<node TEXT="TOC: Simplification of CFG (Reduction of CFG) This Lecture shows how to Simplify a given CFG and explains the Phases involved in the Reduction step. Contribu" ID="ID_1398588128" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="Simplifying Context Free Grammars - GeeksforGeeks" FOLDED="true" ID="ID_1179577804" CREATED="1566553719157" MODIFIED="1566553719157" LINK="https://www.geeksforgeeks.org/simplifying-context-free-grammars/">
<node TEXT="The definition of context free grammars (CFGs) allows us to develop a wide variety of grammars. Most of the time some of the productions of CFGs are not useful and are redundant. This happens because the definition of CFGs does not restrict us from making these redundant productions. By simplifying " ID="ID_1266817150" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="CFG Simplification - tutorialspoint.com" FOLDED="true" ID="ID_1756617775" CREATED="1566553719157" MODIFIED="1566553719157" LINK="https://www.tutorialspoint.com/automata_theory/cfg_simplification">
<node TEXT="In a CFG it may happen that all the production rules and symbols are not needed for the derivation of strings. Besides there may be some null productions and unit productions. Elimination of these productions and symbols is called simplification of CFGs. Simplification essentially comprises of the " ID="ID_15084996" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="Elimination of Unit production from context free grammar" FOLDED="true" ID="ID_1541152627" CREATED="1566553719157" MODIFIED="1566553719157" LINK="http://scanftree.com/automata/elimination-of-unit-production-from-context-free-grammar">
<node TEXT="Elimination of Unit production from context free grammar. A Unit production is like below : S - B We will apply below steps to remove Unit production: Write production without Unit production; Check what we are missing because of Step 1" ID="ID_1682276916" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="Simplification of Context Free Grammars - Theory of " FOLDED="true" ID="ID_480125198" CREATED="1566553719157" MODIFIED="1566553719157" LINK="https://edurev.in/studytube/Simplification-of-Context-Free-Grammars-Theory-of-/aa9f1cb1-acd2-42b7-9e9c-bdb1a07a2698_t">
<node TEXT="Simplification of Context Free Grammars  Eliminate unit productions from this grammar. From the above CFG it is seen that B &#xe2;&#x2020;&#x2019; C C &#xe2;&#x2020;&#x2019; D D &#xe2;&#x2020;&#x2019; E are unit productions. To remove the production B &#xe2;&#x2020;&#x2019; C check whether there exists a production whose LHS is C and RHS is a terminal." ID="ID_1127866531" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="Lecture 12 Simplification of Context-Free Grammars and " FOLDED="true" ID="ID_370070366" CREATED="1566553719157" MODIFIED="1566553719157" LINK="http://www.cs.fsu.edu/~sudhir/courses/2019scot4420/Sup12.pdf">
<node TEXT="Cleaning up the grammar 1. Eliminate &#xce;&#xbb;-productions 2. Eliminate unit productions 3. Eliminate useless variables Theorem: Let L be a CFL that does not contain &#xce;&#xbb;. Then there exist a context-free grammar that generates L and does not have any useless productions &#xce;&#xbb;-productions or unit-productions." ID="ID_1455305655" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="Simplifications Context-Free Grammars - Academics | WPI" FOLDED="true" ID="ID_1360958657" CREATED="1566553719157" MODIFIED="1566553719157" LINK="http://web.cs.wpi.edu/~kal/courses/fcs/module7/grahneclass9.pdf">
<node TEXT="Unit-Productions Unit Production: A  form for any context-free grammar . Fall 2004 COMP 335 39 Greibach Normal Form All productions have form: A " ID="ID_1330438690" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="CSC 4170 Simplifying Context-Free Grammars" FOLDED="true" ID="ID_1538007075" CREATED="1566553719157" MODIFIED="1566553719157" LINK="https://www.seas.upenn.edu/~cit596/notes/dave/npda-cfg1.html">
<node TEXT="Simplifying Context-Free Grammars The productions of context-free grammars can be coerced into a variety of forms without affecting the expressive power of the grammar. Empty production removal If the empty string does not belong to a language then there is a way to eliminate productions of the form A from the grammar." ID="ID_1960508489" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="CFG: Removal of Unit Productions - GATE Overflow" FOLDED="true" ID="ID_561858847" CREATED="1566553719157" MODIFIED="1566553719157" LINK="https://gateoverflow.in/150005/cfg-removal-of-unit-productions">
<node TEXT="Removal of Null production S - AB A - aBB | epsilon B - bAA | epsilon What will be the CFG after removal of NULL production My doubt is in this grammer epsilon is also accepted So we cant remove it right else the equivalent grammer will not be same as this grammer so What should be the answer of such problem if said to get rid of null productions?" ID="ID_1110358195" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="context free - Chomsky Normal Form-remove unit production " FOLDED="true" ID="ID_210791768" CREATED="1566553719157" MODIFIED="1566553719157" LINK="https://cs.stackexchange.com/questions/43678/chomsky-normal-form-remove-unit-production">
<node TEXT="In the step of removing unit productions when converting a grammar to Chomsky normal form I sometimes found that the variables may end up having the same production bodies.  Chomsky Normal Form-remove unit production. Ask Question Asked 4 years 1 month ago.  Converting context-free grammar to Chomsky/Greibach Normal Form. 0." ID="ID_785080515" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
<node TEXT="Simplification of context-free grammar through Petri net " FOLDED="true" ID="ID_191608780" CREATED="1566553719157" MODIFIED="1566553719157" LINK="https://www.sciencedirect.com/science/article/pii/004579499500422X">
<node TEXT="Simplification of a context-free grammar through Petri net Before developing the algorithms to simplify a given CFG through PN some notations that require explanation and clear exposition are given below: (1) P is the set of places corresponding to the variables and terminals." ID="ID_1106036505" CREATED="1566553719157" MODIFIED="1566553719157"/>
</node>
</node>
</node>
</node>
<node TEXT="useless production" ID="ID_269672768" CREATED="1566881027646" MODIFIED="1566881027646" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="useless symbols" ID="ID_183051317" CREATED="1566881027646" MODIFIED="1566881027646" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="and Epsilon-productions" ID="ID_1588377721" CREATED="1566881027647" MODIFIED="1566881027647" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="Normal Forms- Chomsky normal form" ID="ID_289166704" CREATED="1566881027647" MODIFIED="1566881027647" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Chomsky normal form Interactive Visualisation#$D$#" FOLDED="true" ID="ID_414643269" CREATED="1566553719160" MODIFIED="1566553719160">
<icon BUILTIN="stop-sign"/>
<node TEXT="Conversion of CFG to Chomsky Normal Form - YouTube" FOLDED="true" ID="ID_334869551" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://www.youtube.com/watch?v=FNPSlnj3Vt0">
<node TEXT="TOC: Conversion of CFG to Chomsky Normal Form This Lecture shows how to convert a Context Free Grammar to Chomsky Normal Form. Contribute: http://www.nesoaca" ID="ID_1706822442" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Relating Chomsky Normal Form and Greibach Normal Form by " FOLDED="true" ID="ID_1489899102" CREATED="1566553719160" MODIFIED="1566553719160" LINK="http://www.mat.uc.pt/~ct2011/talks/Koslowski.pdf">
<node TEXT="visualization not as an object of study in their own right. Note the distinction between leaves and (capitalized) inner nodes. J urgen Koslowski (TU-BS) Chomsky and Greibach normal form CT 2011 Vancouver July 22 3 / 25" ID="ID_127003626" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Chomsky Normal Form  CFG to CNF Conversion - YouTube" FOLDED="true" ID="ID_1479910439" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://www.youtube.com/watch?v=Mh-UQVmAxnw">
<node TEXT="TOC: Chomsky Normal Form  CFG to CNF Conversion Topics discussed: 1. Chomsky Normal Form 2. Steps to convert CFG to CNF Contribute: http://www.nesoacademy.o" ID="ID_951473732" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Transform Grammar - JFLAP" FOLDED="true" ID="ID_1217097753" CREATED="1566553719160" MODIFIED="1566553719160" LINK="http://www.jflap.org/tutorial/grammar/transform/index.html">
<node TEXT="The Chomsky Normal Form (CNF) for a context-free grammar has a restricted format in that the right-side of a production has either two variables or one terminal. CNFs restrictions result in many efficient algorithms such as improving speed in Brute Force parsing. How to Transform a Context-Free Grammar into CNF" ID="ID_974832868" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Converting a CFG to Chomsky Normal FormJP - jflap.org" FOLDED="true" ID="ID_79290646" CREATED="1566553719160" MODIFIED="1566553719160" LINK="http://www.jflap.org/modules/ConvertedFiles/CFG%20to%20Chomsky%20Normal%20Form%20Transformation%20Module.pdf">
<node TEXT="We will now consider another CFG normal form namely Chomsky Normal Form. Description of Chomsky Normal Form (CNF) A CFG is said to be in Chomsky Normal Form (established by Noam Chomsky) if all production rules have the form A &#xe2;&#x2020;&#x2019; BC A &#xe2;&#x2020;&#x2019; a or S &#xe2;&#x2020;&#x2019; &#xce;&#xb5; where A B C Variables (nonterminals) a Terminals and S is the start symbol." ID="ID_1630518667" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="The CYK Algorithm - web.cs.ucdavis.edu" FOLDED="true" ID="ID_1943016445" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://web.cs.ucdavis.edu/~rogaway/classes/120/winter12/CYK.pdf">
<node TEXT="Chomsky Normal Form &#xe2;&#x20ac;&#xa2;Normal Form is described by a set of conditions that each rule in the grammar must satisfy &#xe2;&#x20ac;&#xa2;Context-free grammar is in CNF if each rule has one of the following forms: &#xe2;&#x20ac;&#x201c;A BC at most 2 symbols on right side &#xe2;&#x20ac;&#x201c;A a or terminal symbol &#xe2;&#x20ac;&#x201c;S &#xce;&#xbb; null string where B C &#xd0;&#x201e; V &#xe2;&#x20ac;&#x201c; {S}" ID="ID_586020594" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Increasing Visualization and Interaction - Duke University" FOLDED="true" ID="ID_759643235" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://users.cs.duke.edu/~rodger/papers/cse00/cse00fin.html">
<node TEXT="In this paper we describe how to increase the visualization and interaction in the automata theory course through the use of the tools JFLAP and Pate.  grammars and a grammar transformer from a context-free grammar to Chomsky Normal Form (CNF).  theory course CPS 140 at Duke University to increase the visualization and interaction in this " ID="ID_1225173332" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="(PDF) CGM: A context-free grammar manipulator | Nelma " FOLDED="true" ID="ID_977860588" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://www.academia.edu/2757457/CGM_A_context-free_grammar_manipulator">
<node TEXT="We present an interactive graphical environment for the ma- nipulation of context-free languages. The graphical environment allows the editing of a context-free grammar the conversion to Chomsky normal form word parsing and the (interactive) construction of parse trees." ID="ID_1563342783" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="CGM: A context-free grammar manipulator" FOLDED="true" ID="ID_1293618140" CREATED="1566553719160" MODIFIED="1566553719160" LINK="http://www.dcc.fc.up.pt/~nam/publica/cgm.pdf">
<node TEXT="Abstract. We present an interactive graphical environment for the ma-nipulation of context-free languages. The graphical environment allows the editing of a context-free grammar the conversion to Chomsky normal form word parsing and the (interactive) construction of parse trees. It is" ID="ID_11307214" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="nltk.tree &#xe2;&#x20ac;&#x201d; NLTK 3.4.4 documentation" FOLDED="true" ID="ID_25322850" CREATED="1566553719160" MODIFIED="1566553719160" LINK="http://www.nltk.org/_modules/nltk/tree.html">
<node TEXT="def collapse_unary (self collapsePOS = False collapseRoot = False joinChar = +):  Collapse subtrees with a single child (ie. unary productions) into a new non-terminal (Tree node) joined by joinChar. This is useful when working with algorithms that do not allow unary productions and completely removing the unary productions would require loss of useful information." ID="ID_588542299" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Increasing Visualization and Interaction in the Automata " FOLDED="true" ID="ID_1054077738" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://www.researchgate.net/publication/2369575_Increasing_Visualization_and_Interaction_in_the_Automata_Theory_Course">
<node TEXT="P&#xc3;&#xa2;t&#xc3;&#xa9; (Hung and Rodger 2000) is a tool for parsing restricted and unrestricted grammars and a grammar transformer from a context-free grammar to Chomsky Normal Form. Given a grammar and an input " ID="ID_1095154295" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Computational linguistics - Wikipedia" FOLDED="true" ID="ID_1061224046" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://en.wikipedia.org/wiki/Computational_linguistics">
<node TEXT="Computational linguistics is an interdisciplinary field concerned with the statistical or rule-based modeling of natural language from a computational perspective as well as the study of appropriate computational approaches to linguistic questions.. Traditionally computational linguistics was performed by computer scientists who had specialized in the application of computers to the " ID="ID_28798153" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
</node>
<node TEXT="Chomsky normal form Code#$D$#" FOLDED="true" ID="ID_1206614140" CREATED="1566553719160" MODIFIED="1566553719160">
<icon BUILTIN="stop-sign"/>
<node TEXT="GitHub - nikos912000/chomsky-normal-form: Convert a " FOLDED="true" ID="ID_796220250" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://github.com/nikos912000/chomsky-normal-form">
<node TEXT="Chomsky Normal Form (CNF) Converter. This script can be used to convert a Context Free Grammar (CFG) to Chomsky Normal Form (CNF). The implementation is based on the theory provided in the book Elements of the Theory of Computation (2nd Edition) by Harry Lewis and Christos H. Papadimitriou. ###Theory According to the book the right hand side of the rule in a CFG in Chomsky Normal Form " ID="ID_1187066155" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="ChomskyNormalForm - people.cs.clemson.edu" FOLDED="true" ID="ID_765411722" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://people.cs.clemson.edu/~goddard/texts/theoryOfComputation/9a.pdf">
<node TEXT="Chomsky Normal Form Chomsky Normal Form. A grammar where every production is either of the form A!BC or A!c (where A B Care arbitrary variables and c an arbitrary symbol). Example: S!ASja A!SAjb (If language contains  then we allow S ! where Sis start symbol and forbid Son RHS.) Goddard 9a: 2" ID="ID_1646461210" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Chomsky Normal Form - tutorialspoint.com" FOLDED="true" ID="ID_1471798352" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://www.tutorialspoint.com/automata_theory/chomsky_normal_form">
<node TEXT="Chomsky Normal Form - Learn Automata concepts in simple and easy steps starting from Introduction Deterministic Finite Automata Non-Deterministic Finite Automata NDFA to DFA Conversion DFA Minimization Moore and Mealy Machines Introduction to Grammars Language Generated by Grammars Chomsky Grammar Classification Regular Expressions Regular Sets Ardens Theorem Constructing FA from " ID="ID_600463986" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Anatomy of a Compiler and The Tokenizer - cs.man.ac.uk" FOLDED="true" ID="ID_650611645" CREATED="1566553719160" MODIFIED="1566553719160" LINK="http://www.cs.man.ac.uk/~pjj/farrell/comp2.html">
<node TEXT="Chomsky Normal Form. Language theory owes a great deal to Noam Chomsky. In the 1950s Chomsky studied many spoken languages and attempted to develop a formal method of describing language. Among other achievements it was Chomsky who first divided language study into syntax and semantics." ID="ID_1607030346" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Converting grammar to Chomsky Normal Form? - Stack Overflow" FOLDED="true" ID="ID_1418205419" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://stackoverflow.com/questions/7465342/converting-grammar-to-chomsky-normal-form">
<node TEXT="Without getting into too much theory and proofs(you could look at this in Wikipedia) there are a few things you must do when converting a Context Free Grammar to Chomsky Normal Form you generally have to perform four Normal-Form Transformations." ID="ID_925271475" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Converting a CFG to Chomsky Normal FormJP - jflap.org" FOLDED="true" ID="ID_1788573072" CREATED="1566553719160" MODIFIED="1566553719160" LINK="http://www.jflap.org/modules/ConvertedFiles/CFG%20to%20Chomsky%20Normal%20Form%20Transformation%20Module.pdf">
<node TEXT="We will now consider another CFG normal form namely Chomsky Normal Form. Description of Chomsky Normal Form (CNF) A CFG is said to be in Chomsky Normal Form (established by Noam Chomsky) if all production rules have the form A &#xe2;&#x2020;&#x2019; BC A &#xe2;&#x2020;&#x2019; a or S &#xe2;&#x2020;&#x2019; &#xce;&#xb5; where A B C Variables (nonterminals) a Terminals and S is the start symbol." ID="ID_929056729" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="nikos912000/chomsky-normal-form - GitHub" FOLDED="true" ID="ID_1172892739" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://github.com/nikos912000/chomsky-normal-form/blob/master/normal%20chomsky.py">
<node TEXT="All your code in one place. GitHub makes it easy to scale back on context switching. Read rendered documentation see the history of any file and collaborate with contributors on projects across GitHub." ID="ID_1629090172" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Converting Context Free Grammar to Chomsky Normal Form " FOLDED="true" ID="ID_1710389274" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://www.geeksforgeeks.org/converting-context-free-grammar-chomsky-normal-form/">
<node TEXT="Converting Context Free Grammar to Chomsky Normal Form. Prerequisite &#xe2;&#x20ac;&#x201c; Simplifying Context Free Grammars. A context free grammar (CFG) is in Chomsky Normal Form (CNF) if all production rules satisfy one of the following conditions:  Writing code in comment? Please use ide.geeksforgeeks.org " ID="ID_1675753046" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Java Implementation of an algorithm for CFG in Chomsky form" FOLDED="true" ID="ID_1945010618" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://stackoverflow.com/questions/15825411/java-implementation-of-an-algorithm-for-cfg-in-chomsky-form">
<node TEXT="The goal is to convert pseudo code into actual working code. I thought I had it mostly figured out but theres something not quite right.  Java Implementation of an algorithm for CFG in Chomsky form.  Browse other questions tagged java context-free-grammar chomsky-normal-form or ask your own question. asked. 6 years 3 months ago. viewed " ID="ID_305853990" CREATED="1566553719160" MODIFIED="1566553719160"/>
</node>
<node TEXT="Converting to Chomsky Normal Form - Stack Exchange" FOLDED="true" ID="ID_1835287226" CREATED="1566553719160" MODIFIED="1566553719160" LINK="https://math.stackexchange.com/questions/296243/converting-to-chomsky-normal-form">
<node TEXT="I am trying to learn how to convert any context free grammar to Chomsky Normal Form. In the example below I tried to apply Chomsky Normal Form logic to result in a grammar where every symbol either produces two symbols or every symbol produces a terminal." ID="ID_1256330480" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Automata Theory : Context Free Grammar (CFG) to Chomsky " FOLDED="true" ID="ID_1466751892" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://www.youtube.com/watch?v=q0HAqPeqwvs">
<node TEXT="A context-free grammar G is in Chomsky normal form if every rule is of the form: A &#xe2;&#x2c6;&#x2019;&#xe2;&#x2020;&#x2019; BC A &#xe2;&#x2c6;&#x2019;&#xe2;&#x2020;&#x2019; a where a is a terminal A B C are nonterminals and B C may not be the start variable (the " ID="ID_994010055" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Simplification of CFG (Removal of Null Productions) - YouTube" FOLDED="true" ID="ID_120404147" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://www.youtube.com/watch?v=mlXYQ8ug2v4">
<node TEXT="Conversion of CFG to Chomsky Normal Form - Duration: 12:58. Neso Academy 309446 views. 12:58. Simplification of CFG (Removal of Unit Productions) - Duration: 8:36." ID="ID_1712229327" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
</node>
<node TEXT="Greibach normal form Interactive Visualisation#$D$#" FOLDED="true" ID="ID_190676687" CREATED="1566553719161" MODIFIED="1566553719161">
<icon BUILTIN="stop-sign"/>
<node TEXT="CFG to GNF Conversion (Removal of Left Recursion) - YouTube" FOLDED="true" ID="ID_740670787" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://www.youtube.com/watch?v=rauqqM0nfuI">
<node TEXT="TOC: CFG to GNF Conversion (Removal of Left Recursion) This lecture shows how to remove Left recursions in CFG to GNF conversion and how to obtain the completely converted GNF from the given CFG " ID="ID_1260141631" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Greibach Normal Form  CFG to GNF Conversion - YouTube" FOLDED="true" ID="ID_1404342955" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://www.youtube.com/watch?v=ZCbJan6CGNM">
<node TEXT="TOC: Greibach Normal Form  CFG to GNF Conversion Topics discussed: 1) Greibach Normal Form 2) Steps to convert CFG to GNF Contribute: http://www.nesoacademy" ID="ID_810094556" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Relating Chomsky Normal Form and Greibach Normal Form by " FOLDED="true" ID="ID_837076580" CREATED="1566553719161" MODIFIED="1566553719161" LINK="http://www.mat.uc.pt/~ct2011/talks/Koslowski.pdf">
<node TEXT="visualization not as an object of study in their own right. Note the distinction between leaves and (capitalized) inner nodes. J urgen Koslowski (TU-BS) Chomsky and Greibach normal form CT 2011 Vancouver July 22 3 / 25" ID="ID_1761958500" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Converting a CFG to Chomsky Normal FormJP - jflap.org" FOLDED="true" ID="ID_1939724375" CREATED="1566553719161" MODIFIED="1566553719161" LINK="http://www.jflap.org/modules/ConvertedFiles/CFG%20to%20Chomsky%20Normal%20Form%20Transformation%20Module.pdf">
<node TEXT="a useful CFG normal form is Greibach Normal Form (GNF) established by Sheila Greibach. A CFG is in GNF if the right-hand sides of all production rules start with a terminal symbol optionally followed by some variables and the only permissible &#xce;&#xb5;-production is from the start symbol. That is all rules have the" ID="ID_1956980985" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Automata Theory - Apps on Google Play" FOLDED="true" ID="ID_554804956" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://play.google.com/store/apps/details?id=com.faadooengineers.free_automatahl=en_US">
<node TEXT="The app is classroom notes  handbook on Automata theory subject for Information technology (IT) Computer Science engineering discrete mathematics  Mathematics students. It is part of engineering education which brings important topics notes news  blog on the subject. Automata Theory plays a major role in the theory of computation compiler construction artificial intelligence parsing " ID="ID_1660904858" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="GitHub - stassa/THELEMA: My MSc thesis: a grammar " FOLDED="true" ID="ID_1408679602" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://github.com/stassa/THELEMA">
<node TEXT="For now TheLeMa has rules for a few types of normal form grammars. The simplest of these is a determinstic Context-Free Grammar in a restricted Greibach Normal Form where all rules are of the form: A &#xe2;&#x2020;&#x2019; aA S &#xe2;&#x2020;&#x2019; A In other words a single terminal followed by a single nonterminal." ID="ID_625731411" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Highest Voted normal-forms Questions - Computer Science " FOLDED="true" ID="ID_1458013159" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://cs.stackexchange.com/questions/tagged/normal-forms?sort=votes">
<node TEXT="Questions about normal forms in various contexts for example normal forms of context-free grammars (Chomsky normal form Greibach normal form) of formulas (conjunctive normal form disjunctive normal form) and others." ID="ID_594909121" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="(PDF) JFLAP Activities for Formal Languages and Automata " FOLDED="true" ID="ID_173988986" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://www.academia.edu/2792488/JFLAP_Activities_for_Formal_Languages_and_Automata">
<node TEXT="It includes material that will help you to get started with JFLAP gives hints how to use it and suggests exercises that show the power and convenience of JFLAP. 1.1 About JFLAP JFLAP is an interactive visualization and teaching tool for students in a course on formal languages and automata." ID="ID_784022505" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Prototyping Framework for SDL with Evolving Semantics" FOLDED="true" ID="ID_4732057" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://link.springer.com/content/pdf/10.1007%2F978-0-387-35578-8_5.pdf">
<node TEXT="Prototyping Framework for SDL with Evolving Semantics Peter Csurgay  for (4) and finally a portable open interpretation platform for visualisation control and evaluation of systems specified in SDL with extended semantics  Greibach Normal Form) and construct a parser of linear complexity (e.g." ID="ID_615762706" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Let this Graph Be Your Witness!: 30th International " FOLDED="true" ID="ID_1518158824" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://www.researchgate.net/publication/326526525_Let_this_Graph_Be_Your_Witness_30th_International_Conference_CAV_2018_Held_as_Part_of_the_Federated_Logic_Conference_FloC_2018_Oxford_UK_July_14-17_2018_Proceedings_Part_II">
<node TEXT="Let this Graph Be Your Witness!: 30th International Conference CAV 2018 Held as Part of the Federated Logic Conference FloC 2018 Oxford UK July 14-17 2018 Proceedings Part II" ID="ID_1071406444" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Appendix of CS and IT in Cyber Programming Tutorial" FOLDED="true" ID="ID_1224518177" CREATED="1566553719161" MODIFIED="1566553719161" LINK="http://cyberpoint9.com/appendix-of-cs-and-it-in-cyber-programming-tutorial/">
<node TEXT="Appendix of CS and IT in Cyber Programming Tutorial Famous Scientists and their Discoveries Wil Vander Aalst Business process management process mining Hal Abelson Intersection of computing and teaching Serge Abiteboul Database theory Samson Abramsky Game semantics Leonard Adleman RSA DNA&#xe2;&#x20ac;&#xa6;Read more &#xe2;&#x20ac;&#xba;" ID="ID_528433294" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Some Preservation Properties of Normal Form Grammars " FOLDED="true" ID="ID_1607959360" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://epubs.siam.org/doi/10.1137/0206027">
<node TEXT="The normal form grammars such as those developed by Chomsky and Greibach preserve certain properties of the original grammar. Ordinarily attention is only directed to weak equivalence that is that the original grammar and its normal form version both generate the same language." ID="ID_1434615346" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
</node>
<node TEXT="Greibach normal form Code#$D$#" FOLDED="true" ID="ID_778798791" CREATED="1566553719161" MODIFIED="1566553719161">
<icon BUILTIN="stop-sign"/>
<node TEXT="TOC Lecture 41: Greibach Normal Form Definition(GNF) with " FOLDED="true" ID="ID_55953813" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://www.youtube.com/watch?v=ircFkz8du4g">
<node TEXT="TOC Lecture 41: Greibach Normal Form Definition(GNF) with Solved Examples in Hindi TOC for GATE TOC for UGC Net TOC for GGSIPU TOC for Engineering Courses TOC Lectures in Hindi TOC Classes in " ID="ID_924238634" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Converting Context Free Grammar to Greibach Normal Form " FOLDED="true" ID="ID_1029901862" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://www.geeksforgeeks.org/converting-context-free-grammar-greibach-normal-form/">
<node TEXT="Converting Context Free Grammar to Greibach Normal Form. Prerequisite &#xe2;&#x20ac;&#x201c; Context Free Grammars Simplifying Context Free Grammars. A context free grammar (CGF) is in Greibach Normal Form (GNF) if all production rules satisfy one of the following conditions:  Writing code in comment? Please use ide.geeksforgeeks.org generate link and share " ID="ID_371978382" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Automata Greibach Normal Form (GNF) - Javatpoint" FOLDED="true" ID="ID_1691114577" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://www.javatpoint.com/automata-greibach-normal-form">
<node TEXT="Greibach Normal Form (GNF) GNF stands for Greibach normal form. A CFG(context free grammar) is in GNF(Greibach normal form) if all the production rules satisfy one of the following conditions: A start symbol generating &#xce;&#xb5;. For example S &#xe2;&#x2020;&#x2019; &#xce;&#xb5;. A non-terminal generating a terminal. For example A &#xe2;&#x2020;&#x2019; a." ID="ID_1487804003" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Greibach Normal Form - uobabylon.edu.iq" FOLDED="true" ID="ID_1345869884" CREATED="1566553719161" MODIFIED="1566553719161" LINK="http://www.uobabylon.edu.iq/eprints/publication_12_10393_49.pdf">
<node TEXT="Greibach Normal Form Definition Greibach Normal Form (GNF) A CFG is in Greibach Normal Form if all productions are of the form A &#xe2;&#x2020;&#x2019; a X with a T and X V*. This means all productions start with a terminal on the PRODUCTION and have only variables following. Theorem: For every CFG G with &#xce;&#xbb;&#xe2;&#x2c6;&#x2030;L(G) exists an equivalent grammar G in Greibach NF " ID="ID_1362891160" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Greibach normal form - Wikipedia" FOLDED="true" ID="ID_681470974" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://en.wikipedia.org/wiki/Greibach_normal_form">
<node TEXT="A non-strict form allows one exception to this format restriction for allowing the empty word (epsilon &#xce;&#xb5;) to be a member of the described language. The normal form was established by Sheila Greibach and it bears her name. More precisely a context-free grammar is in Greibach normal form if all production rules are of the form:" ID="ID_461678491" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="GREIBACH NORMAL FORM (GNF)- Basic concept GNF  - YouTube" FOLDED="true" ID="ID_795108107" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://www.youtube.com/watch?v=fbd7gfO3I4g">
<node TEXT="New Topic Greibach Normal Form. Important Topic for exams. Do like share the video and subscribe to the channel." ID="ID_1370780930" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="How to Convert a Context-Free Grammar to Greibach Normal Form" FOLDED="true" ID="ID_46279409" CREATED="1566553719161" MODIFIED="1566553719161" LINK="http://xfront.com/formal-languages/How-to-Convert-a-Grammar-to-Griebach-Normal-Form.pptx">
<node TEXT="Here&#xe2;&#x20ac;&#x2122;s the algorithm to convert a grammar to Greibach Normal Form. First convert the grammar rules to Chomsky Normal Form. After doing so all the rules are in one of these forms: A i &#xe2;&#x2020;&#x2019; a where &#xe2;&#x20ac;&#x153;a&#xe2;&#x20ac;&#xfffd; is a terminal symbolA i &#xe2;&#x2020;&#x2019; A j A. k The first form is in Greibach Normal Form the second isn&#xe2;&#x20ac;&#x2122;t." ID="ID_1549649659" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Chomsky and Greibach Normal Forms - cs.stonybrook.edu" FOLDED="true" ID="ID_479506860" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://www3.cs.stonybrook.edu/~cse350/slides/cfg3.pdf">
<node TEXT="Construct the Greibach normal form from Chomsky normal form Chomsky and Greibach Normal Forms &#xe2;&#x20ac;&#x201c; p.18/24. Greibach Theorem Every CFL where can be generated by a CFG in Greibach normal form. Proof idea: Let be a CFG generating . Assume that is in Chomsky normal form Let be an ordering of nonterminals." ID="ID_1312532044" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="1 Greibach Normal Form (GNF) - iitg.ac.in" FOLDED="true" ID="ID_671669652" CREATED="1566553719161" MODIFIED="1566553719161" LINK="http://www.iitg.ac.in/gkd/ma513/oct/oct18/note.pdf">
<node TEXT="1 Greibach Normal Form (GNF) A CFG G = (VTRS) is said to be in GNF if every production is of the form A &#xe2;&#x2020;&#x2019; a&#xce;&#xb1; where a &#xe2;&#x2c6;&#x2c6; T and &#xce;&#xb1; &#xe2;&#x2c6;&#x2c6; V&#xe2;&#x2c6;&#x2014; i.e. &#xce;&#xb1; is a string of zero or more variables. De&#xef;&#xac;&#xfffd;nition: A production U &#xe2;&#x2c6;&#x2c6; R is said to be in the form left recursion if U : A &#xe2;&#x2020;&#x2019; A&#xce;&#xb1; for some A &#xe2;&#x2c6;&#x2c6; V." ID="ID_230611542" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Greibach (u/Greibach) - Reddit" FOLDED="true" ID="ID_1911780413" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://www.reddit.com/user/Greibach">
<node TEXT="Yeah. Once youve gotten a handle on the Souls formula DS1 is actually very easy. I dont mean this in an oh ho silly casuals this is easy kind of way just that most of the pain people felt in the first DS was simply lack of familiarity with the systems and best methods to tackle content." ID="ID_1481257991" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Greibach Normal Form - tutorialspoint.com" FOLDED="true" ID="ID_886212500" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://www.tutorialspoint.com/automata_theory/greibach_normal_form">
<node TEXT="Greibach Normal Form - Learn Automata concepts in simple and easy steps starting from Introduction Deterministic Finite Automata Non-Deterministic Finite Automata NDFA to DFA Conversion DFA Minimization Moore and Mealy Machines Introduction to Grammars Language Generated by Grammars Chomsky Grammar Classification Regular Expressions Regular Sets Ardens Theorem Constructing FA from " ID="ID_936067063" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
<node TEXT="Sheila Greibach - Wikipedia" FOLDED="true" ID="ID_830334185" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://en.wikipedia.org/wiki/Sheila_Greibach">
<node TEXT="Sheila Adele Greibach (born 6 October 1939 in New York City) is a researcher in formal languages in computing automata compiler theory and computer science.She is an Emeritus Professor of Computer Science at the University of California Los Angeles and notable work include working with Seymour Ginsburg and Michael A. Harrison in context-sensitive parsing using the stack automaton model." ID="ID_1591917765" CREATED="1566553719161" MODIFIED="1566553719161"/>
</node>
</node>
</node>
<node TEXT="Greibach normal form" ID="ID_1355151671" CREATED="1566881027649" MODIFIED="1566881027649" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="Closure properties of CFL" ID="ID_83022711" CREATED="1566881027649" MODIFIED="1566881027649" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Closure properties of Context Free Language Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1011865290" CREATED="1566553719161" MODIFIED="1566553719161">
<icon BUILTIN="stop-sign"/>
<node TEXT="Closure property of Context Free Language(with  - YouTube" FOLDED="true" ID="ID_1774357317" CREATED="1566553719161" MODIFIED="1566553719161" LINK="https://www.youtube.com/watch?v=f5lIp_BMooM">
<node TEXT="Closure property of Context Free Language(with Proof)  The interactive transcript could not be loaded.  6.1 CFG Context free grammer of all palindromes in urdu and hindi by www.shamil.pk " ID="ID_1224627940" CREATED="1566553719162" MODIFIED="1566553719162"/>
</node>
<node TEXT="Pumping Lemma (For Context Free Languages) - YouTube" FOLDED="true" ID="ID_1837638609" CREATED="1566553719162" MODIFIED="1566553719162" LINK="https://www.youtube.com/watch?v=jRhqx1_KcCk">
<node TEXT="TOC: Pumping Lemma (For Context Free Languages) This lecture discusses the concept of Pumping Lemma (for CFL) which is used to prove that a Language is not C" ID="ID_1636846189" CREATED="1566553719162" MODIFIED="1566553719162"/>
</node>
<node TEXT="Context Free Languages | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1083628475" CREATED="1566553719162" MODIFIED="1566553719162" LINK="https://brilliant.org/wiki/context-free-languages/">
<node TEXT="Context-free languages (CFLs) are generated by context-free grammars. The set of all context-free languages is identical to the set of languages accepted by pushdown automata and the set of regular languages is a subset of context-free languages. An inputed language is accepted by a computational model if it runs through the model and ends in an accepting final state." ID="ID_929250412" CREATED="1566553719162" MODIFIED="1566553719162"/>
</node>
<node TEXT="Formalization of closure properties for context-free " FOLDED="true" ID="ID_1081867219" CREATED="1566553719162" MODIFIED="1566553719162" LINK="https://arxiv.org/pdf/1506.03428.pdf">
<node TEXT="Keywords: Context-free language theory context-free grammars closure properties formalization formal mathematics calculus of inductive constructions proof assistant interactive proof systems program veri&#xef;&#xac;&#xfffd;cation Coq. 1 Introduction The fundamental mathematical activity of stating and proving theorems has been" ID="ID_816081779" CREATED="1566553719162" MODIFIED="1566553719162"/>
</node>
<node TEXT="Automata theory - Wikipedia" FOLDED="true" ID="ID_748266281" CREATED="1566553719162" MODIFIED="1566553719162" LINK="https://en.wikipedia.org/wiki/Automata_theory">
<node TEXT="Automata theory is the study of abstract machines and automata as well as the computational problems that can be solved using them. It is a theory in theoretical computer science and discrete mathematics (a subject of study in both mathematics and computer science).The word automata (the plural of automaton) comes from the Greek word &#xce;&#xb1;&#xe1;&#xbd;&#xfffd;&#xcf;&#x201e;&#xcf;&#x152;&#xce;&#xbc;&#xce;&#xb1;&#xcf;&#x201e;&#xce;&#xb1; which means self-acting." ID="ID_1516452480" CREATED="1566553719162" MODIFIED="1566553719162"/>
</node>
<node TEXT="Complexity class - Wikipedia" FOLDED="true" ID="ID_520870756" CREATED="1566553719162" MODIFIED="1566553719162" LINK="https://en.wikipedia.org/wiki/Complexity_classes">
<node TEXT="In computational complexity theory a complexity class is a set of problems of related resource-based complexity. A typical complexity class has a definition of the form: the set of problems that can be solved by an abstract machine M using O(f(n)) of resource R where n is the size of the input." ID="ID_528469225" CREATED="1566553719162" MODIFIED="1566553719162"/>
</node>
<node TEXT="How to Use Data Visualization to Make Your Report Design " FOLDED="true" ID="ID_554104111" CREATED="1566553719162" MODIFIED="1566553719162" LINK="https://www.columnfivemedia.com/how-to-data-visualization-report-design">
<node TEXT="Provide context for the data. Create a logical flow. Highlight notable findings/insights in the data. Example: The interactive 2016 Girls Who Code Annual Report includes plenty of data that highlights the company&#xe2;&#x20ac;&#x2122;s mission to educate girls and close the gender gap in technology. As such it uses data visualization as well as photos and " ID="ID_1132682757" CREATED="1566553719162" MODIFIED="1566553719162"/>
</node>
<node TEXT="Course Notes - CS 162 - Formal Languages and Automata Theory" FOLDED="true" ID="ID_614062703" CREATED="1566553719162" MODIFIED="1566553719162" LINK="http://www.ics.uci.edu/~goodrich/teach/cs162/notes/">
<node TEXT="Course Notes - CS 162 - Formal Languages and Automata Theory. The following documents outline the notes for the course CS 162 Formal Languages and Automata Theory. Much of this material is taken from notes for Jeffrey Ullmans course Introduction to Automata and Complexity Theory at Stanford University. Note: Some of the notes are in PDF format." ID="ID_1960380360" CREATED="1566553719162" MODIFIED="1566553719162"/>
</node>
<node TEXT="Regular Languages | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1230079021" CREATED="1566553719162" MODIFIED="1566553719162" LINK="https://brilliant.org/wiki/regular-languages/">
<node TEXT="A regular language is a language that can be expressed with a regular expression or a deterministic or non-deterministic finite automata or state machine. A language is a set of strings which are made up of characters from a specified alphabet or set of symbols. Regular languages are a subset of the set of all strings. Regular languages are used in parsing and designing programming languages " ID="ID_806716624" CREATED="1566553719162" MODIFIED="1566553719162"/>
</node>
<node TEXT="Automata Theory - Apps on Google Play" FOLDED="true" ID="ID_1792073229" CREATED="1566553719162" MODIFIED="1566553719162" LINK="https://play.google.com/store/apps/details?id=com.faadooengineers.free_automatahl=en_US">
<node TEXT="The app is classroom notes  handbook on Automata theory subject for Information technology (IT) Computer Science engineering discrete mathematics  Mathematics students. It is part of engineering education which brings important topics notes news  blog on the subject. Automata Theory plays a major role in the theory of computation compiler construction artificial intelligence parsing " ID="ID_1376721144" CREATED="1566553719162" MODIFIED="1566553719162"/>
</node>
<node TEXT="Attribute exploration algorithm - Interactive algorithms " FOLDED="true" ID="ID_816191743" CREATED="1566553719162" MODIFIED="1566553719162" LINK="https://www.coursera.org/lecture/formal-concept-analysis/attribute-exploration-algorithm-IVQMY">
<node TEXT="This course is an introduction into formal concept analysis (FCA) a mathematical theory oriented at applications in knowledge representation knowledge acquisition data analysis and visualization. It provides tools for understanding the data by representing it as a hierarchy of concepts or more exactly a concept lattice." ID="ID_1458537483" CREATED="1566553719162" MODIFIED="1566553719162"/>
</node>
<node TEXT="Computer Science (GrDip) - concordia.ca" FOLDED="true" ID="ID_1808841330" CREATED="1566553719162" MODIFIED="1566553719162" LINK="https://www.concordia.ca/academics/graduate/computer-science-diploma.html">
<node TEXT="The Diploma in Computer Science is offered to qualified university graduates from diverse backgrounds who wish to obtain expertise in computer science fundamentals. Graduates of the Diploma program will obtain qualifications similar to those of graduates of the Bachelor of/Baccalaureate in Computer " ID="ID_855742322" CREATED="1566553719162" MODIFIED="1566553719162"/>
</node>
</node>
<node TEXT="Closure properties of Context Free Language Code#$D$#" FOLDED="true" ID="ID_1738505192" CREATED="1566553719162" MODIFIED="1566553719162">
<icon BUILTIN="stop-sign"/>
<node TEXT="Theory of Computation | Closure Properties of Context Free " FOLDED="true" ID="ID_242052785" CREATED="1566553719162" MODIFIED="1566553719162" LINK="https://www.geeksforgeeks.org/theory-of-computation-closure-properties-of-context-free-languages/">
<node TEXT="Context free languages can be generated by context free grammar which has the form : A - &#xcf;&#xfffd; (where A &#xe2;&#x2c6;&#x2c6; N and &#xcf;&#xfffd; &#xe2;&#x2c6;&#x2c6; (T &#xe2;&#x2c6;&#xaa; N)* and N is a non-terminal and T is a terminal) Properties of Context Free Languages Union : If L1 and If L2 are two context free languages their union L1 &#xe2;&#x2c6;&#xaa; L2 will also be context free. For example" ID="ID_1256872026" CREATED="1566553719162" MODIFIED="1566553719162"/>
</node>
<node TEXT="Context-free language - Wikipedia" FOLDED="true" ID="ID_300286304" CREATED="1566553719162" MODIFIED="1566553719162" LINK="https://en.wikipedia.org/wiki/Context-free_language">
<node TEXT="Background Context-free grammar. Different context-free grammars can generate the same context-free language. Intrinsic properties of the language can be distinguished from extrinsic properties of a particular grammar by comparing multiple grammars that describe the language." ID="ID_711146042" CREATED="1566553719162" MODIFIED="1566553719162"/>
</node>
<node TEXT="Closure property of Context Free Language(with  - YouTube" FOLDED="true" ID="ID_1898816873" CREATED="1566553719162" MODIFIED="1566553719162" LINK="https://www.youtube.com/watch?v=f5lIp_BMooM">
<node TEXT="Closure property of Context Free Language(with Proof) University Academy- Formerly-IP University CSE/IT.  Pumping lemma for context free languages by Divya - Duration: 4:14." ID="ID_1388036286" CREATED="1566553719162" MODIFIED="1566553719162"/>
</node>
<node TEXT="Closure Properties of Context-Free Languages - cs.rit.edu" FOLDED="true" ID="ID_81812125" CREATED="1566553719162" MODIFIED="1566553719162" LINK="https://www.cs.rit.edu/~rlc/Courses/Theory/ClassNotes/ClosurePropertiesContextFree.pdf">
<node TEXT="&#xe2;&#x20ac;&#xa2; The intersection of two context-free languages may or may not be context-free &#xe2;&#x20ac;&#x201c; Closure means the result is guaranteed to be context-free &#xe2;&#x20ac;&#xa2; But the intersection of a CFL with a regular language is always context-free &#xe2;&#x20ac;&#xa2; The proof involves running an NFA in parallel with a PDA and noting that the combination is" ID="ID_400756961" CREATED="1566553719162" MODIFIED="1566553719162"/>
</node>
<node TEXT="Properties of Context-Free Languages - Stanford University" FOLDED="true" ID="ID_1248268885" CREATED="1566553719163" MODIFIED="1566553719163" LINK="http://infolab.stanford.edu/~ullman/ialc/spr10/slides/cfl5.pdf">
<node TEXT="Properties of Context-Free Languages Decision Properties Closure Properties. 2 Summary of Decision Properties As usual when we talk about &#xe2;&#x20ac;&#x153;a CFL&#xe2;&#x20ac;&#xfffd; we really mean &#xe2;&#x20ac;&#x153;a representation for the CFL e.g. a CFG or a PDA accepting by final state or empty stack. There are algorithms to decide if: 1. String w is in CFL L." ID="ID_1431030928" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="Closure Properties of Context Free languages - YouTube" FOLDED="true" ID="ID_1392938829" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://www.youtube.com/watch?v=xSYWfK_tAj8">
<node TEXT="This feature is not available right now. Please try again later." ID="ID_513463979" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="Closure Properties Context-Free languages - WPI" FOLDED="true" ID="ID_1584251175" CREATED="1566553719163" MODIFIED="1566553719163" LINK="http://web.cs.wpi.edu/~kal/courses/fcs/module7/grahneclass12.pdf">
<node TEXT="Closure Properties of Context-Free languages. Summer 2004 COMP 335 2 Context-free languages are closed under: Union L1 is context free  For context-free languages with context-free grammars and start variables L1 L2 G1 G2 S1 S2 L1L2 S. Summer 2004 COMP 335 8 Context-free languages" ID="ID_905420063" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="CFL Closure Property - tutorialspoint.com" FOLDED="true" ID="ID_865764806" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://www.tutorialspoint.com/automata_theory/cfl_closure_properties">
<node TEXT="Context-free languages are not closed under &#xe2;&#x2c6;&#x2019; Intersection &#xe2;&#x2c6;&#x2019; If L1 and L2 are context free languages then L1 &#xe2;&#x2c6;&#xa9; L2 is not necessarily context free. Intersection with Regular Language &#xe2;&#x2c6;&#x2019; If L1 is a regular language and L2 is a context free language then L1 &#xe2;&#x2c6;&#xa9; L2 is a context free language. Complement &#xe2;&#x2c6;&#x2019; If L1 is a context free language " ID="ID_357617860" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="context free grammar - CFG and closure properties - Stack " FOLDED="true" ID="ID_1215447008" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://stackoverflow.com/questions/16273989/cfg-and-closure-properties">
<node TEXT="If we have a language L and a language S and both are context-free we know that the union of the languages is also context free. L &#xe2;&#x2c6;&#xaa; S = A Context-free Language. See this for more closure properties of CFLs and you can find proofs of this on the web if you are interested (or you can try to make your own proof)." ID="ID_1269590871" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="Pumping Lemma (For Context Free Languages) - YouTube" FOLDED="true" ID="ID_496547660" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://www.youtube.com/watch?v=jRhqx1_KcCk">
<node TEXT="TOC: Pumping Lemma (For Context Free Languages) This lecture discusses the concept of Pumping Lemma (for CFL) which is used to prove that a Language is not C" ID="ID_1127495024" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="1 Closure Properties of Context-Free Languages" FOLDED="true" ID="ID_174850107" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://www.cs.unc.edu/~plaisted/comp455/slides/cfl3.5.pdf">
<node TEXT="IfLisacontext-free languagethenthereisanintegerN such that anystringw&#xe2;&#x2c6;&#x2c6;LoflengthlargerthanN canbewrittenasuvxyzsuch that(v=eory=e)anduvixyiz&#xe2;&#x2c6;&#x2c6;Lforalli&#xe2;&#x2030;&#xa5;0. 2.3 Using this general property to show languages are not context-free Thus to show that a language is not context-free it is necessary to show" ID="ID_948408264" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="Basic Properties of Turing-recognizable Languages" FOLDED="true" ID="ID_1484005968" CREATED="1566553719163" MODIFIED="1566553719163" LINK="http://www.cs.tut.fi/~elomaa/teach/iTCS-11-7.pdf">
<node TEXT="context-free languages are decidable &#xe2;&#x20ac;&#xa2; Hence regular languages are a proper subset of context-free languages which are decidable &#xe2;&#x20ac;&#xa2; Furthermore decidable languages are a proper subset of Turing-recognizable languages Department of Software Systems 171 OHJ-2306 Introduction to Theoretical Computer Science Fall 2011 13.10.2011" ID="ID_340796867" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
</node>
</node>
<node TEXT="Decision properties of CFL" ID="ID_495947370" CREATED="1566881027650" MODIFIED="1566881027650" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Decision properties of Context Free Language Interactive Visualisation#$D$#" FOLDED="true" ID="ID_626001980" CREATED="1566553719163" MODIFIED="1566553719163">
<icon BUILTIN="stop-sign"/>
<node TEXT="Closure property of Context Free Language(with  - YouTube" FOLDED="true" ID="ID_739300477" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://www.youtube.com/watch?v=f5lIp_BMooM">
<node TEXT="Closure property of Context Free Language(with Proof)  The interactive transcript could not be loaded.  6.1 CFG Context free grammer of all palindromes in urdu and hindi by www.shamil.pk " ID="ID_623052533" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="15 Data Visualizations That Will Blow Your Mind | Udacity" FOLDED="true" ID="ID_855174333" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://blog.udacity.com/2015/01/15-data-visualizations-will-blow-mind.html">
<node TEXT="If a picture is worth a thousand words a data visualization is worth at least a million. As inspiration for your own work with data check out these 15 data visualizations that will wow you. Taken together this roundup is an at-a-glance representation of the range of uses data analysis has from " ID="ID_1854156373" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="Language/m - Learning tools  flashcards for free | Quizlet" FOLDED="true" ID="ID_1155301787" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://quizlet.com/19020905/languagem-flash-cards/">
<node TEXT="Was proposed by anthropologist Edward Sapir and linguist Benjamin Whorf the nature of a cultures language can affect the way people think. Although there was little evidence to support this when Whorf made his proposal recent experiments have provided evidence that favors the idea that language can influence cognition." ID="ID_1684763078" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="7 Perception and Cognitive Aspects - vismaster.eu" FOLDED="true" ID="ID_790224777" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://vismaster.eu/wp-content/uploads/2010/11/chapter-7.pdf">
<node TEXT="static visualisation (e.g. abilities to compare sizes) yet there is little on even simple interactive or dynamic visualisation let alone where this is combined with more complex processing. Again whilst there is a longstanding literature of technical aspects of collaborative visualisation social and organisational aspects are less well studied." ID="ID_1888362102" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="Data visualization - Wikipedia" FOLDED="true" ID="ID_1418729244" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://en.wikipedia.org/wiki/Data_visualization">
<node TEXT="Data visualization is viewed by many disciplines as a modern equivalent of visual communication.It involves the creation and study of the visual representation of data.. To communicate information clearly and efficiently data visualization uses statistical graphics plots information graphics and other tools. Numerical data may be encoded using dots lines or bars to visually communicate a " ID="ID_535831110" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="Contextual - definition of contextual by The Free Dictionary" FOLDED="true" ID="ID_1095509028" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://www.thefreedictionary.com/contextual">
<node TEXT="Guided by the idea that disease transmission is influenced not just by individual behavior but also by ones exposure to social economic and environmental factors researchers used data from Wave 3 of the National Longitudinal Study of Adolescent Health to examine the association between STDs sexual risk behaviors and 13 contextual risk factors." ID="ID_1878015104" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="Heat map - Wikipedia" FOLDED="true" ID="ID_551825728" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://en.wikipedia.org/wiki/Heat_map">
<node TEXT="A heat map (or heatmap) is a graphical representation of data where the individual values contained in a matrix are represented as colors. Heat map is a newer term but shading matrices have existed for over a century." ID="ID_863678622" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="www.facebook.com" FOLDED="true" ID="ID_695070881" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://www.facebook.com/%CC%B8%D2%B2%CC%B8%D2%B3%CC%B2%CC%85B%CC%B2%CC%B2%CC%85%CC%857%CC%B2%CC%B2%CC%85%CC%85B%CC%B2%CC%B2%CC%85%CC%85K%CC%B2%CC%85%D2%B3%CC%B8%D2%B2%CC%B8-262352983885391/">
<node TEXT="www.facebook.com" ID="ID_1997220904" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="PSY 320 Test 3 Flashcards | Quizlet" FOLDED="true" ID="ID_1932024451" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://quizlet.com/57122081/psy-320-test-3-flash-cards/">
<node TEXT="In Bransford and Johnsons experiment people could recall an average of 8.0 out of 14 possible ideas when given a proper context before the passage. However when the context was provided after the passage people could recall an average of _____ out of 14 ideas." ID="ID_708761148" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="D3.js - Data-Driven Documents" FOLDED="true" ID="ID_957907860" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://d3js.org/">
<node TEXT="See more examples.. D3.js is a JavaScript library for manipulating documents based on data.D3 helps you bring data to life using HTML SVG and CSS. D3&#xe2;&#x20ac;&#x2122;s emphasis on web standards gives you the full capabilities of modern browsers without tying yourself to a proprietary framework combining powerful visualization components and a data-driven approach to DOM manipulation." ID="ID_1795726362" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="Modern Analytic Apps for the Enterprise - Plotly" FOLDED="true" ID="ID_1035489230" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://plot.ly/">
<node TEXT="Plotlys team maintains the fastest growing open-source visualization libraries for R Python and JavaScript. These libraries seamlessly interface with our enterprise-ready Deployment servers for easy collaboration code-free editing and deploying of production-ready dashboards and apps." ID="ID_767900496" CREATED="1566553719163" MODIFIED="1566553719163"/>
</node>
<node TEXT="How to plot a SQL Server 2017 graph database using PowerBI" FOLDED="true" ID="ID_960069594" CREATED="1566553719163" MODIFIED="1566553719163" LINK="https://www.sqlshack.com/plot-sql-server-2017-graph-database-using-powerbi/">
<node TEXT="In the article How to plot a SQL Server 2017 graph database using SQL Server R I highlighted the lack of built-in graph data visualisation as one major limitation of the SQL Server 2017 graph database feature. In the same article I went on to suggest making use of SQL Server R as one workaround [&#xe2;&#x20ac;&#xa6;]" ID="ID_288363571" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
</node>
<node TEXT="Decision properties of Context Free Language Code#$D$#" FOLDED="true" ID="ID_327559605" CREATED="1566553719164" MODIFIED="1566553719164">
<icon BUILTIN="stop-sign"/>
<node TEXT="Algorithm To Decide Whether CFL Is Empty | Gate Vidyalay" FOLDED="true" ID="ID_1483520031" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://www.gatevidyalay.com/decision-properties-of-context-free-languages/">
<node TEXT="Decision Properties of Context Free Languages and Decision Algorithms for Context Free Languages- Algorithm to decide whether a Context Free Language is empty or not." ID="ID_1290623491" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Theory of Computation | Closure Properties of Context Free " FOLDED="true" ID="ID_388657983" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://www.geeksforgeeks.org/theory-of-computation-closure-properties-of-context-free-languages/">
<node TEXT="Context free languages can be generated by context free grammar which has the form : A - &#xcf;&#xfffd; (where A &#xe2;&#x2c6;&#x2c6; N and &#xcf;&#xfffd; &#xe2;&#x2c6;&#x2c6; (T &#xe2;&#x2c6;&#xaa; N)* and N is a non-terminal and T is a terminal) Properties of Context Free Languages Union : If L1 and If L2 are two context free languages their union L1 &#xe2;&#x2c6;&#xaa; L2 will also be context free. For example" ID="ID_1615465531" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Decision Properties of Context Free Grammar || CFL - YouTube" FOLDED="true" ID="ID_134424779" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://www.youtube.com/watch?v=wtKy0W0wwCw">
<node TEXT="Context Free Language in HINDI | context free Grammar and pushdown automata | CFL PDA CFG | part-59 - Duration: 7:41. KNOWLEDGE GATE 217453 views" ID="ID_839316740" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Closure property of Context Free Language(with  - YouTube" FOLDED="true" ID="ID_976353846" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://www.youtube.com/watch?v=f5lIp_BMooM">
<node TEXT="Closure property of Context Free Language(with Proof)  Pumping lemma for context free languages by Divya - Duration: 4:14. Dr.R.Deepa Lakshmi 31235 views. 4:14." ID="ID_1596730114" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Properties of Context-free Languages - eecs.wsu.edu" FOLDED="true" ID="ID_642826356" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://www.eecs.wsu.edu/~ananth/CptS317/Lectures/CFLProperties.pdf">
<node TEXT="Properties of Context-free Languages Reading: Chapter 7. 2 Topics 1) Simplifying CFGs Normal forms 2) Pumping lemma for CFLs 3) Closure and decision properties of CFLs. 3 How to &#xe2;&#x20ac;&#x153;simplify&#xe2;&#x20ac;&#xfffd; CFGs? 4 Three ways to simplify/clean a CFG (clean) 1. Eliminate useless symbols  is a CFG for a language L" ID="ID_886779750" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Properties of Context-Free Languages - Stanford University" FOLDED="true" ID="ID_82121519" CREATED="1566553719164" MODIFIED="1566553719164" LINK="http://infolab.stanford.edu/~ullman/ialc/spr10/slides/cfl5.pdf">
<node TEXT="Properties of Context-Free Languages Decision Properties Closure Properties. 2 Summary of Decision Properties As usual when we talk about &#xe2;&#x20ac;&#x153;a CFL&#xe2;&#x20ac;&#xfffd; we really mean &#xe2;&#x20ac;&#x153;a representation for the CFL e.g. a CFG or a PDA accepting by final state or empty stack. There are algorithms to decide if: 1. String w is in CFL L." ID="ID_1836574331" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Closure Properties Context-Free languages - WPI" FOLDED="true" ID="ID_1869695974" CREATED="1566553719164" MODIFIED="1566553719164" LINK="http://web.cs.wpi.edu/~kal/courses/fcsf05/module7/grahneclass12.pdf">
<node TEXT="Closure Properties of Context-Free languages. Summer 2004 COMP 335 2 Context-free languages are closed under: Union L1 is context free  For context-free languages with context-free grammars and start variables L1 L2 G1 G2 S1 S2 L1L2 S. Summer 2004 COMP 335 8 Context-free languages" ID="ID_789382808" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="CFL Closure Property - tutorialspoint.com" FOLDED="true" ID="ID_314954270" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://www.tutorialspoint.com/automata_theory/cfl_closure_properties">
<node TEXT="Context-free languages are not closed under &#xe2;&#x2c6;&#x2019; Intersection &#xe2;&#x2c6;&#x2019; If L1 and L2 are context free languages then L1 &#xe2;&#x2c6;&#xa9; L2 is not necessarily context free. Intersection with Regular Language &#xe2;&#x2c6;&#x2019; If L1 is a regular language and L2 is a context free language then L1 &#xe2;&#x2c6;&#xa9; L2 is a context free language. Complement &#xe2;&#x2c6;&#x2019; If L1 is a context free language " ID="ID_380328167" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="1 Closure Properties of Context-Free Languages" FOLDED="true" ID="ID_1782790463" CREATED="1566553719164" MODIFIED="1566553719164" LINK="http://www.cs.unc.edu/~plaisted/comp455/slides/cfl3.5.pdf">
<node TEXT="IfLisacontext-free languagethenthereisanintegerN such that anystringw&#xe2;&#x2c6;&#x2c6;LoflengthlargerthanN canbewrittenasuvxyzsuch that(v=eory=e)anduvixyiz&#xe2;&#x2c6;&#x2c6;Lforalli&#xe2;&#x2030;&#xa5;0. 2.3 Using this general property to show languages are not context-free Thus to show that a language is not context-free it is necessary to show" ID="ID_1087730338" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Context Free Grammars - University of Alaska Anchorage" FOLDED="true" ID="ID_1265600533" CREATED="1566553719164" MODIFIED="1566553719164" LINK="http://math.uaa.alaska.edu/~afkjm/cs351/handouts/cfg.pdf">
<node TEXT="&#xe2;&#x20ac;&#xa2; The pumping lemma showed there are languages that are not regular &#xe2;&#x20ac;&#x201c; There are many classes &#xe2;&#x20ac;&#x153;larger&#xe2;&#x20ac;&#xfffd; than that of regular languages &#xe2;&#x20ac;&#x201c; One of these classes are called &#xe2;&#x20ac;&#x153;Context Free&#xe2;&#x20ac;&#xfffd; languages &#xe2;&#x20ac;&#xa2; Described by Context-Free Grammars (CFG) &#xe2;&#x20ac;&#x201c; Why named context-free? &#xe2;&#x20ac;&#x201c; Property that we can substitute strings for variables regardless of" ID="ID_839366817" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Decision Properties of Regular Languages - Stanford University" FOLDED="true" ID="ID_623362923" CREATED="1566553719164" MODIFIED="1566553719164" LINK="http://infolab.stanford.edu/~ullman/ialc/spr10/slides/rs1.pdf">
<node TEXT="Closure Properties A closure property of a language class says that given languages in the class an operator (e.g. union) produces another language in the same class. Example: the regular languages are obviously closed under union concatenation and (Kleene) closure. Use the RE representation of languages." ID="ID_1486645265" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Context-free language - Wikipedia" FOLDED="true" ID="ID_442265168" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://en.wikipedia.org/wiki/Context-free_language">
<node TEXT="Background Context-free grammar. Different context-free grammars can generate the same context-free language. Intrinsic properties of the language can be distinguished from extrinsic properties of a particular grammar by comparing multiple grammars that describe the language." ID="ID_494142963" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
</node>
</node>
<node TEXT="Chomsky Hierarchy" ID="ID_635474353" CREATED="1566881027652" MODIFIED="1566881027652" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Chomsky Hierarchy Interactive Visualisation#$D$#" FOLDED="true" ID="ID_686049628" CREATED="1566553719164" MODIFIED="1566553719164">
<icon BUILTIN="stop-sign"/>
<node TEXT="Interactive Visualization Research Papers - Academia.edu" FOLDED="true" ID="ID_1733364798" CREATED="1566553719164" MODIFIED="1566553719164" LINK="http://www.academia.edu/Documents/in/Interactive_Visualization">
<node TEXT="interactive visualization as a way to make sense of longitudinal collected in a RtD project and to utilize their design skills for such creative ways of analysis and knowledge dissemination.  Interactive Visualization Chomsky Hierarchy; Towards Trusty Interaction in Visual Environments." ID="ID_1531732882" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Chomsky Hierarchy Research Papers - Academia.edu" FOLDED="true" ID="ID_1473768444" CREATED="1566553719164" MODIFIED="1566553719164" LINK="http://www.academia.edu/Documents/in/Chomsky_Hierarchy">
<node TEXT="Cognitive Science Computer Software Interactive Visualization Chomsky Hierarchy; What is a formal grammar (and why should I care)? An introductory summary of some aspects of formal language theory intended for an audience doing AGL experiments but without training on the formal side of things. Presented at the workshop Formal Grammars " ID="ID_1389646456" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Noam Chomsky Visualization on the Limits of Knowledge in " FOLDED="true" ID="ID_389084653" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://www.youtube.com/watch?v=Kwy_v2FT6no">
<node TEXT="This is a visualization of a lecture given by Professor Noam Chomsky at the University of Oslo on Newton the ghost in the machine: the limits of knowledge in Science. Dr. Chomsky has approved " ID="ID_1007120478" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="How to Show Hierarchical Data with Information Visualization" FOLDED="true" ID="ID_1435963828" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://www.interaction-design.org/literature/article/how-to-show-hierarchical-data-with-information-visualization">
<node TEXT="How to Show Hierarchical Data with Information Visualization 9 months ago  A hierarchy begins with a root entity. This might be the CEO of a company the name of a book the title of a folder etc. and then the root entity has at least one &#xe2;&#x20ac;&#x153;child node&#xe2;&#x20ac;&#xfffd; and every further child node has zero or more children.  This tree is interactive " ID="ID_699784229" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Hierarchy: The Data Visualisation Catalogue" FOLDED="true" ID="ID_1246202571" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://datavizcatalogue.com/search/hierarchy.html">
<node TEXT="Hierarchy: Visualization methods that show how data or objects are ranked and ordered together in an organisation or system. The Data Visualisation Catalogue About &#xe2;&#x20ac;&#xa2; Blog &#xe2;&#x20ac;&#xa2; Shop &#xe2;&#x20ac;&#xa2; Resources; Hierarchy. Visualization methods that show how data or objects are ranked and ordered together in an organisation or system. " ID="ID_1450334758" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Interactive Visualisation of Hierarchical Quantitative " FOLDED="true" ID="ID_874798478" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://arxiv.org/pdf/1908.01277">
<node TEXT="interactive visualisation of large quantitative hierarchies with more than 50000 nodes using standard internet browsing tools. &#xe2;&#x20ac;&#xa2; User evaluations of the visualisation designs. An initial pilot study with 6 participants compared all four visualisations. Feedback indicated that the sunburst chart was the least preferred. A second" ID="ID_1105431946" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Cone Trees: Animated 3D Visualizations of Hierarchical " FOLDED="true" ID="ID_972672796" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://www.researchgate.net/publication/221515543_Cone_Trees_Animated_3D_Visualizations_of_Hierarchical_Information">
<node TEXT="Ex- plicit hierarchy visualization techniques visualize the parent-child relations through explicit links be- tween the nodes as Tree Diagrams (Chomsky 1965) Cone Trees ( Robertson et al. 1991 " ID="ID_576767583" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Chomsky Hierarchy - Computerphile - YouTube" FOLDED="true" ID="ID_1803728816" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://www.youtube.com/watch?v=224plb3bCog">
<node TEXT="Noam Chomsky Obliterated Jordan Peterson on CEOHierarchy Labor Equality  Everything Else &#xf0;&#x178;&#x2dc;&#xb9;&#xf0;&#x178;&#x2dc;&#xb9; - Duration: 12:00. Weltschmerz von Gavagai 132038 views 12:00" ID="ID_666372132" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Noam Chomsky timeline | Timetoast timelines" FOLDED="true" ID="ID_38880474" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://media.timetoast.com/timelines/noam-chomsky-b603ef1f-f456-4ba6-9c05-ccbb20b9e7f9">
<node TEXT="From a young age Chomsky was destined for greatness beginning his collegiate studies at the age of 16. Chomsky attended and received his Bachelors Masters and PhD from the University of Pennsylvania in 1955 where he first presented his theory of transformational grammar and syntax." ID="ID_1951309120" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Five Interactive R Visualizations With D3 ggplot2  RStudio" FOLDED="true" ID="ID_133509996" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://moderndata.plot.ly/interactive-r-visualizations-with-d3-ggplot2-rstudio/">
<node TEXT="Plotly has a new R API and ggplot2 library for making beautiful graphs. The API lets you produce interactive D3.js graphs with R. This post has five examples. Head to our docs to get a key and you can start making embedding and sharing plots. The code below produces our first plot." ID="ID_1728643267" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Building interactive visualizations with React D3 and " FOLDED="true" ID="ID_1219873540" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://blog.lucify.com/building-interactive-visualizations-with-react-d3-and-typescript-206c7172b0d2">
<node TEXT="A major benefit of this approach is that you only have one mental model to keep in your head while building the DOM. There&#xe2;&#x20ac;&#x2122;s a real cognitive cost associated with jumping between React&#xe2;&#x20ac;&#x2122;s and D3&#xe2;&#x20ac;&#x2122;s ways of thinking and not having switch back and forth is a definite plus." ID="ID_668968500" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Basic Flowchart Symbols and Meaning | Applications | Venn " FOLDED="true" ID="ID_1868221828" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://www.conceptdraw.com/examples/a-well-structured-diagram-with-logically-flowing-work-activies-for-sound">
<node TEXT="Chomsky Hierarchy A Venn diagram sometimes referred to as a set diagram is a diagramming style used to show all the possible logical relations between a finite amount of sets. In mathematical terms a set is a collection of distinct objects gathered together into a group which can then itself be termed as a single object." ID="ID_1107262226" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
</node>
<node TEXT="Chomsky Hierarchy Code#$D$#" FOLDED="true" ID="ID_1486297347" CREATED="1566553719164" MODIFIED="1566553719164">
<icon BUILTIN="stop-sign"/>
<node TEXT="Theory of Computation | Chomsky Hierarchy - GeeksforGeeks" FOLDED="true" ID="ID_1158137403" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://www.geeksforgeeks.org/toc-chomsky-hierarchy/">
<node TEXT="According to Chomsky hierarchy grammars are divided of 4 types: Type 0 known as unrestricted grammar. Type 1 known as context sensitive grammar. Type 2 known as context free grammar. Type 3 Regular Grammar. Type 0: Unrestricted Grammar: In Type 0 Type-0 grammars include all formal grammars. Type 0 grammar language are recognized by turing machine." ID="ID_643670961" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Chomsky hierarchy - Wikipedia" FOLDED="true" ID="ID_1655976969" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://en.wikipedia.org/wiki/Chomsky_hierarchy">
<node TEXT="In the formal languages of computer science and linguistics the Chomsky hierarchy (occasionally referred to as the Chomsky-Sch&#xc3;&#xbc;tzenberger hierarchy) is a containment hierarchy of classes of formal grammars.. This hierarchy of grammars was described by Noam Chomsky in 1956. It is also named after Marcel-Paul Sch&#xc3;&#xbc;tzenberger who played a crucial role in the development of the theory of formal " ID="ID_1785865847" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="grammar tutorialspoint chomsky hierarchy in plain english " FOLDED="true" ID="ID_1386094311" CREATED="1566553719164" MODIFIED="1566553719164" LINK="https://code-examples.net/en/q/8024ce">
<node TEXT="Code Examples. Tags; Docs grammar tutorialspoint chomsky hierarchy in plain english . context sensitive grammar (3) Im trying to find a plain (i.e. non-formal) explanation of the 4 levels of formal grammars (unrestricted context-sensitive context-free regular) as set out by Chomsky. " ID="ID_1433267150" CREATED="1566553719164" MODIFIED="1566553719164"/>
</node>
<node TEXT="Chomsky-Hierarchy in Python - github.com" FOLDED="true" ID="ID_699811122" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://github.com/Iamshashvat/Chomsky-Hierarchy">
<node TEXT="Chomsky-Hierarchy in Python. According to Noam Chomosky there are four types of grammars &#xe2;&#x2c6;&#x2019; Type 0 Type 1 Type 2 and Type 3. differ as follows:" ID="ID_763887885" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="Chomsky hierarchy | Psychology Wiki | FANDOM powered by Wikia" FOLDED="true" ID="ID_1499844740" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://psychology.wikia.org/wiki/Chomsky_hierarchy">
<node TEXT="Within the field of computer science specifically in the area of programming languages the Chomsky hierarchy (occasionally referred to as Chomsky&#xe2;&#x20ac;&#x201c;Sch&#xc3;&#xbc;tzenberger hierarchy) is a containment hierarchy of classes of formal grammars that generate formal languages.. This hierarchy of these grammars (also called phrase structure grammars) was described by Noam Chomsky in 1956 (see )." ID="ID_1796317684" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="What are some real applications of the Chomsky hierarchy " FOLDED="true" ID="ID_484494023" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://www.reddit.com/r/compsci/comments/aqdlpy/what_are_some_real_applications_of_the_chomsky/">
<node TEXT="The Chomsky hierarchy identifies a few classes of languages that are easy to characterize by how their grammars are formulated OR by the kind of abstract machine that can recognize them. The fact that each type of grammar really does have the same expressive power as the associated machine is nontrivial and interesting.  A HTML code is a " ID="ID_1086671669" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="chomsky-hierarchy (1) - Solved - code.i-harness.com" FOLDED="true" ID="ID_943412598" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://code.i-harness.com/en/tagged/chomsky-hierarchy">
<node TEXT="CODE QA Solved. Tags; Docs chomsky-hierarchy (4) Sort By: New Votes. The difference between Chomsky type 3 and Chomsky type 2 grammar ; Chomsky Language Types ; chomsky hierarchy and programming languages ; Is there a standard C++ grammar? " ID="ID_1329176236" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="Noam Chomsky - Wikipedia" FOLDED="true" ID="ID_706826886" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://en.wikipedia.org/wiki/Noam_Chomsky">
<node TEXT="The Chomsky hierarchy sometimes called the Chomsky-Sch&#xc3;&#xbc;tzenberger hierarchy is a containment hierarchy of classes of formal grammars. It imposes a logical structure across different language classes and provides a basis for understanding the relationship between grammars (devices that determine the valid sentences within languages)." ID="ID_939892607" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="Exploring the Linguistics Behind Regular Expressions" FOLDED="true" ID="ID_460763640" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://medium.com/free-code-camp/exploring-the-linguistics-behind-regular-expressions-596fab41146">
<node TEXT="The Chomsky hierarchy transformed the code that computer scientists software engineers and hobbyists write today. Yes it was this hierarchy that brought regular expressions to computer science." ID="ID_293988969" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="Chomsky Hierarchy - Computerphile - YouTube" FOLDED="true" ID="ID_221999615" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://www.youtube.com/watch?v=224plb3bCog">
<node TEXT="Noam Chomsky Obliterated Jordan Peterson on CEOHierarchy Labor Equality  Everything Else &#xf0;&#x178;&#x2dc;&#xb9;&#xf0;&#x178;&#x2dc;&#xb9; - Duration: 12:00. Weltschmerz von Gavagai 132038 views 12:00" ID="ID_890239365" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="Chomsky Hierarchy Research Papers - Academia.edu" FOLDED="true" ID="ID_1592254931" CREATED="1566553719165" MODIFIED="1566553719165" LINK="http://www.academia.edu/Documents/in/Chomsky_Hierarchy">
<node TEXT="In this paper we investigate what other classes of the Chomsky Hierarchy are reflexive in this sense. To make this precise we require that the decoding function is itself specified by a member of the same class. Could it be that the regular languages are reflexive by using a different collection of codes?" ID="ID_258792144" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="Theory of Computation | Finite Automata Introduction " FOLDED="true" ID="ID_1701538146" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://www.geeksforgeeks.org/toc-finite-automata-introduction/">
<node TEXT="A Computer Science portal for geeks. It contains well written well thought and well explained computer science and programming articles quizzes and practice/competitive programming/company interview Questions." ID="ID_1121289076" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
</node>
</node>
<node TEXT="Application of CFG" ID="ID_631632249" CREATED="1566881027653" MODIFIED="1566881027653" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Parser" ID="ID_1342455939" CREATED="1566881027653" MODIFIED="1566881027653" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Application of Context Free Grammar Parser Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1403613567" CREATED="1566553719165" MODIFIED="1566553719165">
<icon BUILTIN="stop-sign"/>
<node TEXT="Context Free Grammar Visualization Using SVG - svgopen.org" FOLDED="true" ID="ID_1632177989" CREATED="1566553719165" MODIFIED="1566553719165" LINK="http://www.svgopen.org/2009/papers/58-Interactive_Documentation_using_JavaScript_and_SVG/">
<node TEXT="Context free grammars are used to describe formal languages in computer science. The most common format for Context Free Grammar representation is the Backus-Naur Form or BNF for short. A BNF consists of a set of production rules - each rule describes a single part of the language." ID="ID_573376872" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="AN INTERACTIVE PARSER GENERATOR FOR CONTEXT-FREE GRAMMARS" FOLDED="true" ID="ID_1413853047" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://www.researchgate.net/publication/261363980_AN_INTERACTIVE_PARSER_GENERATOR_FOR_CONTEXT-FREE_GRAMMARS">
<node TEXT="This paper describes a parser generator that accepts arbitrary context-free grammars. It generates a parser using the Earley algorithm [1]. It enables the user to develop edit and test a grammar " ID="ID_922962819" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="AN INTERACTIVE PARSER GENERATOR FOR CONTEXT-FREE GRAMMARS " FOLDED="true" ID="ID_1119145318" CREATED="1566553719165" MODIFIED="1566553719165" LINK="http://ozark.hendrix.edu/~ferrer/research/papers/InteractiveParser.pdf">
<node TEXT="This paper describes a parser generator that accepts arbitrary context-free grammars. It generates a parser using the Earley algorithm [1]. It enables the user to develop edit and test a grammar in an interactive graphical environment. This GUI visualizes both the operation of the Earley algorithm as well as the generated parse trees." ID="ID_1940142165" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="(PDF) Parser visualization for developing grammars with YACC" FOLDED="true" ID="ID_697960072" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://www.researchgate.net/publication/221538070_Parser_visualization_for_developing_grammars_with_YACC">
<node TEXT="A parsing algorithm visualizer is a tool that visualizes the construction of a parser for a given context-free grammar and then illustrates the use of that parser to parse a given string." ID="ID_358018714" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="Interactive Parsing | SpringerLink" FOLDED="true" ID="ID_1525466954" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://link.springer.com/chapter/10.1007/978-0-85729-479-1_9">
<node TEXT="Charniak E. (1997). Statistical parsing with a context-free grammar and word statistics. In Proceedings of the national conference on artificial intelligence (pp. 598&#xe2;&#x20ac;&#x201c;603) Providence Rhode Island USA. Google Scholar" ID="ID_113409684" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="[PDF] An interactive parser generator for context-free " FOLDED="true" ID="ID_165920917" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://www.semanticscholar.org/paper/An-interactive-parser-generator-for-context-free-Ferrer/3d492ea037b0664e1daff209434a0a96f5b2eb13">
<node TEXT="This paper describes a parser generator that accepts arbitrary context-free grammars. It generates a parser using the Earley algorithm [1]. It enables the user to develop edit and test a grammar in an interactive graphical environment. This GUI visualizes both the operation of the Earley algorithm as well as the generated parse trees. The generated parsers are saved as fully-functional Java " ID="ID_370380904" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="Understanding Context-free Grammars through Data Visualization" FOLDED="true" ID="ID_1936498369" CREATED="1566553719165" MODIFIED="1566553719165" LINK="http://su.diva-portal.org/smash/get/diva2:934721/FULLTEXT01">
<node TEXT="Understanding Context-free Grammars through Data Visualization Abstract Ever since the late 1950&#xe2;&#x20ac;&#x2122;s context-free grammars have played an important role within the &#xef;&#xac;&#xfffd;eld of linguistics been a part of introductory courses and expanded into other &#xef;&#xac;&#xfffd;elds of study. Meanwhile data" ID="ID_1561949715" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="(PDF) CGM: A context-free grammar manipulator | Nelma " FOLDED="true" ID="ID_112208766" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://www.academia.edu/2757457/CGM_A_context-free_grammar_manipulator">
<node TEXT="The context-free grammar manipulator now presented allows the editing of a context-free grammar the conversion to Chomsky normal form word parsing ? This work was partially funded by Funda&#xc2;&#xb8;ca &#xcb;&#x153;o para a Ci&#xcb;&#x2020;encia e Tecnologia (FCT) and Program POSI. and the (interactive) construction of parse trees." ID="ID_1484964772" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="Seeking an interactive utility for creating context free " FOLDED="true" ID="ID_1274919010" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://stackoverflow.com/questions/872124/seeking-an-interactive-utility-for-creating-context-free-parser-grammars">
<node TEXT="I would like a utility which I can give a piece of text (in a text box) and experiment with a parser grammar (through editing a BNF of similar) and token structure while I can see how the parse tree  Seeking an interactive utility for creating context free parser grammars.  is the best interactive grammar development environment Ive seen " ID="ID_187022393" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="Ambiguous Grammar - YouTube" FOLDED="true" ID="ID_1147947725" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://www.youtube.com/watch?v=wQjppolFdas">
<node TEXT="TOC: Ambiguous Grammar This Lecture shows what are Ambiguous Grammars and shows an example of an Ambiguous Grammar Contribute: http://www.nesoacademy.org/don" ID="ID_908533572" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="CYK Algorithm Made Easy (Parsing) - YouTube" FOLDED="true" ID="ID_442457961" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://www.youtube.com/watch?v=VTH1k-xiswM">
<node TEXT="70+ channels more of your favorite shows  unlimited DVR storage space all in one great price." ID="ID_634620650" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="javascript - How convert the context free grammar of json " FOLDED="true" ID="ID_1631579146" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://stackoverflow.com/questions/39435225/how-convert-the-context-free-grammar-of-json-to-state-machine">
<node TEXT="How convert the context free grammar of json to state machine?  it is easier to use an LALR parser generator which will take the grammar and build the PDA for you. You can also write your own recursive descent parser by compiling the grammar rules in a recognizer. For JSON this is a pretty reasonable thing to do; the langauge isnt that " ID="ID_953777511" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
</node>
<node TEXT="Application of Context Free Grammar Parser Code#$D$#" FOLDED="true" ID="ID_792720741" CREATED="1566553719165" MODIFIED="1566553719165">
<icon BUILTIN="stop-sign"/>
<node TEXT="Applications of Context Free Grammars CS351 Introduction " FOLDED="true" ID="ID_1507009736" CREATED="1566553719165" MODIFIED="1566553719165" LINK="http://math.uaa.alaska.edu/~afkjm/cs351/handouts/hop-chap5apps.pdf">
<node TEXT="Applications of Context Free Grammars CS351 Introduction to XML Example 1: Parsing Programming Languages &#xc5;&#xfffd; Consider an arbitrary expression &#xc5;&#x2019; Arbitrary nesting of operators &#xc5;&#x2019; Parenthesis balancing &#xc5;&#x2019; Requires CFG &#xc5;&#xfffd; YACC &#xc5;&#x2019; Yet Another Compiler Compiler &#xc5;&#x2019; Unix program often used to generate a parser for a compiler" ID="ID_1741542044" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="parsing - Efficient Context-Free Grammar parser " FOLDED="true" ID="ID_1976827901" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://stackoverflow.com/questions/4543008/efficient-context-free-grammar-parser-preferably-python-friendly">
<node TEXT="Efficient Context-Free Grammar parser preferably Python-friendly. Ask Question 18. 11. I am in need of parsing a small subset of English for one of my project described as a context-free grammar with (1-level) feature structures and I need to do it efficiently . Right now Im " ID="ID_1392069776" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="Context-free grammar - Wikipedia" FOLDED="true" ID="ID_658851736" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://en.wikipedia.org/wiki/Context-free_grammar">
<node TEXT="Context-free grammars are a special form of Semi-Thue systems that in their general form date back to the work of Axel Thue. The formalism of context-free grammars was developed in the mid-1950s by Noam Chomsky and also their classification as a special type of formal grammar (which he called phrase-structure grammars)." ID="ID_1859938390" CREATED="1566553719165" MODIFIED="1566553719165"/>
</node>
<node TEXT="GitHub - mahdavipanah/pyCFG: Context Free Grammar(CFG " FOLDED="true" ID="ID_1741443885" CREATED="1566553719165" MODIFIED="1566553719165" LINK="https://github.com/mahdavipanah/pyCFG">
<node TEXT="Context Free Grammar(CFG) parser library and application written in Python - mahdavipanah/pyCFG. Context Free Grammar(CFG) parser library and application written in Python - mahdavipanah/pyCFG  GitHub is home to over 36 million developers working together to host and review code manage projects and build software together. Sign up. Context " ID="ID_1171941264" CREATED="1566553719166" MODIFIED="1566553719166"/>
</node>
<node TEXT="GitHub - oliverjc/context-free-grammar-parser: An " FOLDED="true" ID="ID_635937076" CREATED="1566553719166" MODIFIED="1566553719166" LINK="https://github.com/oliverjc/context-free-grammar-parser">
<node TEXT="An application that parses an input of a context free grammar from a text file - oliverjc/context-free-grammar-parser.  GitHub is home to over 36 million developers working together to host and review code manage projects and build software together. Sign up." ID="ID_1917641868" CREATED="1566553719166" MODIFIED="1566553719166"/>
</node>
<node TEXT="dfa - Applications of context free grammars in real life " FOLDED="true" ID="ID_69447155" CREATED="1566553719166" MODIFIED="1566553719166" LINK="https://stackoverflow.com/questions/48037376/applications-of-context-free-grammars-in-real-life">
<node TEXT="Context-free grammars are used in compilers and in particular for parsing taking a string-based program and figuring out what it means.Typically CFGs are used to define the high-level structure of a programming language." ID="ID_305647125" CREATED="1566553719166" MODIFIED="1566553719166"/>
</node>
<node TEXT="Beyond regular expressions: An introduction to parsing " FOLDED="true" ID="ID_533177127" CREATED="1566553719166" MODIFIED="1566553719166" LINK="https://www.freecodecamp.org/news/beyond-regular-expressions-an-introduction-to-parsing-context-free-grammars-ee77bdab5a92/">
<node TEXT="Beyond regular expressions: An introduction to parsing context-free grammars Photo by Johannes Plenio on Unsplash. An important and useful tool that is already a part of most programmers&#xe2;&#x20ac;&#x2122; arsenals is the trusty regular expression. But beyond that lie context-free grammars. This is a simple concept with a fancy name." ID="ID_1849460188" CREATED="1566553719166" MODIFIED="1566553719166"/>
</node>
<node TEXT="Context Free Grammars - University of Alaska Anchorage" FOLDED="true" ID="ID_44825420" CREATED="1566553719166" MODIFIED="1566553719166" LINK="http://math.uaa.alaska.edu/~afkjm/cs351/handouts/cfg.pdf">
<node TEXT="&#xe2;&#x20ac;&#xa2; Described by Context-Free Grammars (CFG) &#xe2;&#x20ac;&#x201c; Why named context-free? &#xe2;&#x20ac;&#x201c; Property that we can substitute strings for variables regardless of context (implies context sensitive languages exist) &#xe2;&#x20ac;&#xa2; CFG&#xe2;&#x20ac;&#x2122;s are useful in many applications &#xe2;&#x20ac;&#x201c; Describing syntax of programming languages &#xe2;&#x20ac;&#x201c; Parsing &#xe2;&#x20ac;&#x201c; Structure of documents e.g.XML" ID="ID_891394737" CREATED="1566553719166" MODIFIED="1566553719166"/>
</node>
<node TEXT="Classification of Context Free Grammars - GeeksforGeeks" FOLDED="true" ID="ID_152172083" CREATED="1566553719166" MODIFIED="1566553719166" LINK="https://www.geeksforgeeks.org/classification-of-context-free-grammars/">
<node TEXT="Context Free Grammars (CFG) can be classified on the basis of following two properties: 1) Based on number of strings it generates. During Compilation the parser uses the grammar of the language to make a parse tree(or derivation tree) out of the source code. The grammar used must be unambiguous " ID="ID_1640663257" CREATED="1566553719166" MODIFIED="1566553719166"/>
</node>
<node TEXT="Context free Grammars - javatpoint" FOLDED="true" ID="ID_140177152" CREATED="1566553719166" MODIFIED="1566553719166" LINK="https://www.javatpoint.com/context-free-grammar">
<node TEXT="Context free grammar. Context free grammar is a formal grammar which is used to generate all possible strings in a given formal language. Context free grammar G can be defined by four tuples as:" ID="ID_1062642480" CREATED="1566553719166" MODIFIED="1566553719166"/>
</node>
<node TEXT="Parsing - Wikipedia" FOLDED="true" ID="ID_855031688" CREATED="1566553719166" MODIFIED="1566553719166" LINK="https://en.wikipedia.org/wiki/Parser">
<node TEXT="Parsing syntax analysis or syntactic analysis is the process of analysing a string of symbols either in natural language computer languages or data structures conforming to the rules of a formal grammar.The term parsing comes from Latin pars (orationis) meaning part (of speech).. The term has slightly different meanings in different branches of linguistics and computer science." ID="ID_636880526" CREATED="1566553719166" MODIFIED="1566553719166"/>
</node>
<node TEXT="Basic Parsing with Context- Free Grammars" FOLDED="true" ID="ID_1257089759" CREATED="1566553719166" MODIFIED="1566553719166" LINK="http://www.cs.columbia.edu/~kathy/NLP/ClassSlides/Class7-Parsing09/cfg-parsing.pdf">
<node TEXT="Basic Parsing with Context-Free Grammars. 1. Some slides adapted from Julia Hirschberg and Dan Jurafsky `  `Parsing algorithms specify how to recognize  Grammar must be in Normal Form The parse tree might not be consistent with linguistic theory `" ID="ID_1381519299" CREATED="1566553719167" MODIFIED="1566553719167"/>
</node>
</node>
</node>
</node>
<node TEXT="Markup languages" ID="ID_4813187" CREATED="1566881027654" MODIFIED="1566881027654" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Markup languages Interactive Visualisation#$D$#" FOLDED="true" ID="ID_861028242" CREATED="1566553719167" MODIFIED="1566553719167">
<icon BUILTIN="stop-sign"/>
<node TEXT="Idyll | A markup language for interactive and data-driven " FOLDED="true" ID="ID_1625866929" CREATED="1566553719167" MODIFIED="1566553719167" LINK="https://idyll-lang.org/">
<node TEXT="Idyll is a markup language and toolkit for writing interactive articles. Idylls reactive document model and standard component library decrease the amount of code needed to create high quality multimedia narratives. Idyll uses web standards to produce output that will load quickly in any web browser and is fully extensible." ID="ID_775238139" CREATED="1566553719167" MODIFIED="1566553719167"/>
</node>
<node TEXT="Open Data Visualization Markup Language (ODVML)" FOLDED="true" ID="ID_730560998" CREATED="1566553719167" MODIFIED="1566553719167" LINK="https://eightsquaredsoftware.com/odv/">
<node TEXT="Open Data Visualization Markup Language (ODVML) This document describes the goals and usage of ODVML a proposed markup language for describing scalable data visualizations via a text-based human-editable and machine-readable format." ID="ID_1712052168" CREATED="1566553719167" MODIFIED="1566553719167"/>
</node>
<node TEXT="VISUALIZATIONS - University Of Maryland" FOLDED="true" ID="ID_58335472" CREATED="1566553719167" MODIFIED="1566553719167" LINK="http://www.cs.umd.edu/hcil/pad++/papers/jvlc-96-pad/zoom-5.html">
<node TEXT="We are exploring several different types of interactive visualizations within Pad++ some of which are described briefly here.  Pad++ reads hypertext written in the Hypertext Markup Language (HTML) the language used to describe hypertext documents used by WWW browsers such as Mosaic and Netscape. Pad++ also can follow links across the internet." ID="ID_132870846" CREATED="1566553719167" MODIFIED="1566553719167"/>
</node>
<node TEXT="Idyll: A Markup Language for Authoring andPublishing " FOLDED="true" ID="ID_1016830507" CREATED="1566553719167" MODIFIED="1566553719167" LINK="http://idl.cs.washington.edu/files/2018-Idyll-UIST.pdf">
<node TEXT="were able to grasp language concepts and produce high quality interactive articles that leverage a broad range of Idyll features. Taken together the human readable markup reactive vari-able system access to page state  events library of built-in components and straightforward extensibility are intended to" ID="ID_1890881257" CREATED="1566553719167" MODIFIED="1566553719167"/>
</node>
<node TEXT="Markup language - Wikipedia" FOLDED="true" ID="ID_1870037728" CREATED="1566553719167" MODIFIED="1566553719167" LINK="https://en.wikipedia.org/wiki/Markup_language">
<node TEXT="XML (Extensible Markup Language) is a meta markup language that is now widely used. XML was developed by the World Wide Web Consortium in a committee created and chaired by Jon Bosak. The main purpose of XML was to simplify SGML by focusing on a particular problem &#xe2;&#x20ac;&#x201d; documents on the Internet." ID="ID_221612874" CREATED="1566553719167" MODIFIED="1566553719167"/>
</node>
<node TEXT="Stylesheet transformations for interactive visualization" FOLDED="true" ID="ID_228258839" CREATED="1566553719167" MODIFIED="1566553719167" LINK="https://www.academia.edu/31335030/Stylesheet_transformations_for_interactive_visualization">
<node TEXT="Standardization Languages Design 1.1 Extensible Markup Language (XML) The World Wide Web Consortium&#xe2;&#x20ac;&#x2122;s (W3C) metalanguage Keywords codification of XML has opened new and powerful opportunities Information Visualization Interactive 3D Graphics Molecular for information visualization as a host of structured data can now Chemistry Education " ID="ID_1727862483" CREATED="1566553719167" MODIFIED="1566553719167"/>
</node>
<node TEXT="Stylesheet Transformations for Interactive VisualizationFI )" FOLDED="true" ID="ID_745512185" CREATED="1566553719167" MODIFIED="1566553719167" LINK="http://www.web3d.org/x3d/content/examples/Basic/ChemicalMarkupLanguage/Polys.StylesheetTransformationsInteractiveVisualization.Web3d2003Symposium.pdf">
<node TEXT="distribution-of information for real-time 3D visualization over the web. This paper describes and evaluates such techniques to transform structured data such as Chemical Markup Language (CML) to different forms and contexts for Web3D delivery using Extensible Stylesheet Transformations (XSLT) Extensible 3D (X3D) and VRML97." ID="ID_1680229666" CREATED="1566553719167" MODIFIED="1566553719167"/>
</node>
<node TEXT="Teamcenter Visualization 3D Markup - YouTube" FOLDED="true" ID="ID_1258963157" CREATED="1566553719167" MODIFIED="1566553719167" LINK="https://www.youtube.com/watch?v=pJULPpuDEM8">
<node TEXT="This feature is not available right now. Please try again later." ID="ID_1248726290" CREATED="1566553719167" MODIFIED="1566553719167"/>
</node>
<node TEXT="markup language &#xe2;&#x20ac;&#x201d; Big Sky Caf&#xc3;&#xa9;" FOLDED="true" ID="ID_1398802341" CREATED="1566553719167" MODIFIED="1566553719167" LINK="https://www.bigskylearningcafe.com/markup-language">
<node TEXT="Personal Knowledge Markup Language. Personal Knowledge Markup Language (PKML) is an experimental markup language supporting learning journaling and knowledge engineering. It is a long term project that is evolving under the Big Sky. PKML is designed to provide new opportunities to interact with knowledge." ID="ID_1866946917" CREATED="1566553719167" MODIFIED="1566553719167"/>
</node>
<node TEXT="Embed interactive visualizations directly in your writing " FOLDED="true" ID="ID_908976212" CREATED="1566553719167" MODIFIED="1566553719167" LINK="https://www.reddit.com/r/visualization/comments/828n3m/embed_interactive_visualizations_directly_in_your/">
<node TEXT="For topics related to information visualization and the design of graphs charts maps etc." ID="ID_1119623871" CREATED="1566553719167" MODIFIED="1566553719167"/>
</node>
<node TEXT="15 Data Visualizations That Will Blow Your Mind | Udacity" FOLDED="true" ID="ID_708147361" CREATED="1566553719167" MODIFIED="1566553719167" LINK="https://blog.udacity.com/2015/01/15-data-visualizations-will-blow-mind.html">
<node TEXT="If a picture is worth a thousand words a data visualization is worth at least a million. As inspiration for your own work with data check out these 15 data visualizations that will wow you. Taken together this roundup is an at-a-glance representation of the range of uses data analysis has from " ID="ID_1567552066" CREATED="1566553719167" MODIFIED="1566553719167"/>
</node>
<node TEXT="GPlates - Wikipedia" FOLDED="true" ID="ID_104005921" CREATED="1566553719167" MODIFIED="1566553719167" LINK="https://en.wikipedia.org/wiki/GPlates">
<node TEXT="The GPlates Markup Language (GPML) is an XML implementation of the GPGIM derived from the Geography Markup Language (GML). GPlates Python Binding. The GPlates Python library (pyGPlates) enables access to GPlates functionality via the Python programming language. It allows users to use GPlates in a programmatic way and hence provides much more " ID="ID_1404465653" CREATED="1566553719167" MODIFIED="1566553719167"/>
</node>
</node>
<node TEXT="Markup languages Code#$D$#" FOLDED="true" ID="ID_914581659" CREATED="1566553719167" MODIFIED="1566553719167">
<icon BUILTIN="stop-sign"/>
<node TEXT="Markdown Cheatsheet &#xc2;&#xb7; adam-p/markdown-here Wiki &#xc2;&#xb7; GitHub" FOLDED="true" ID="ID_1945181667" CREATED="1566553719167" MODIFIED="1566553719167" LINK="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet">
<node TEXT="Code and Syntax Highlighting. Code blocks are part of the Markdown spec but syntax highlighting isnt. However many renderers -- like Githubs and Markdown Here-- support syntax highlighting. Which languages are supported and how those language names should be written will vary from renderer to renderer." ID="ID_609711890" CREATED="1566553719167" MODIFIED="1566553719167"/>
</node>
<node TEXT="Markup language - Wikipedia" FOLDED="true" ID="ID_1060843702" CREATED="1566553719167" MODIFIED="1566553719167" LINK="https://en.wikipedia.org/wiki/Markup_language">
<node TEXT="While the idea of markup language originated with text documents there is increasing use of markup languages in the presentation of other types of information including playlists vector graphics web services content syndication and user interfaces. Most of these are XML applications because XML is a well-defined and extensible language." ID="ID_645404827" CREATED="1566553719167" MODIFIED="1566553719167"/>
</node>
<node TEXT="What Are Markup Languages? - Web Design" FOLDED="true" ID="ID_1705996316" CREATED="1566553719168" MODIFIED="1566553719168" LINK="https://www.lifewire.com/what-are-markup-languages-3468655">
<node TEXT="To properly define this term - a markup language is a language that annotates text so that the computer can manipulate that text. Most markup languages are human readable because the annotations are written in a way to distinguish them from the text itself. For example with HTML XML and XHTML the markup tags are  and " ID="ID_1836606947" CREATED="1566553719168" MODIFIED="1566553719168"/>
</node>
<node TEXT="What is Markup Language? Webopedia Definition" FOLDED="true" ID="ID_1534471743" CREATED="1566553719168" MODIFIED="1566553719168" LINK="https://www.webopedia.com/TERM/M/markup_language.html">
<node TEXT="Markup languages are designed for the processing definition and presentation of text.The language specifies code for formatting both the layout and style within a text file.The code used to specify the formatting are called tags. HTMLis a an example of a widely known and used markup language." ID="ID_1954094806" CREATED="1566553719168" MODIFIED="1566553719168"/>
</node>
<node TEXT="terminology - Programming Language vs Markup Language vs " FOLDED="true" ID="ID_1258198586" CREATED="1566553719168" MODIFIED="1566553719168" LINK="https://softwareengineering.stackexchange.com/questions/241104/programming-language-vs-markup-language-vs-scripting-language">
<node TEXT="Markup languages are not considered as programming languages&#xc2;&#xb9;. The difference with programming languages is not always obvious. For example XSLT is a Turing-complete language&#xc2;&#xb2; but is based on XML which is a markup language. Wikipedia itself makes important efforts to avoid qualifying XSLT as either a programming language or a markup language." ID="ID_724317946" CREATED="1566553719168" MODIFIED="1566553719168"/>
</node>
<node TEXT="Introduction to HTML - w3schools.com" FOLDED="true" ID="ID_469867616" CREATED="1566553719168" MODIFIED="1566553719168" LINK="https://www.w3schools.com/html/html_intro.asp">
<node TEXT="What is HTML? HTML is the standard markup language for creating Web pages. HTML stands for Hyper Text Markup Language; HTML describes the structure of a Web page" ID="ID_398006736" CREATED="1566553719168" MODIFIED="1566553719168"/>
</node>
<node TEXT="HTML ISO Language Code Reference - w3schools.com" FOLDED="true" ID="ID_928195386" CREATED="1566553719168" MODIFIED="1566553719168" LINK="https://www.w3schools.com/tags/ref_language_codes.asp">
<node TEXT="ISO 639-1 Language Codes. ISO 639-1 defines abbreviations for languages. In HTML and XHTML they can be used in the lang and xml:lang attributes. See also: next reference for country codes." ID="ID_819885398" CREATED="1566553719168" MODIFIED="1566553719168"/>
</node>
<node TEXT="HTML - Wikipedia" FOLDED="true" ID="ID_1783989008" CREATED="1566553719168" MODIFIED="1566553719168" LINK="https://en.wikipedia.org/wiki/HTML">
<node TEXT="In 1980 physicist Tim Berners-Lee a contractor at CERN proposed and prototyped ENQUIRE a system for CERN researchers to use and share documents. In 1989 Berners-Lee wrote a m" ID="ID_1349400424" CREATED="1566553719168" MODIFIED="1566553719168"/>
</node>
<node TEXT="What is a Markup Language? - computerhope.com" FOLDED="true" ID="ID_606215712" CREATED="1566553719168" MODIFIED="1566553719168" LINK="https://www.computerhope.com/jargon/m/markup-language.htm">
<node TEXT="A computer language that consists of easily understood keywords names or tags that help format the overall view of a page and the data it contains. Some examples of a markup language are BBC HTML SGML and XML.. Markup language example. Below is an example segment of HTML code that creates bold text on a web page.. Example of bbold/b in HTML." ID="ID_1643671741" CREATED="1566553719168" MODIFIED="1566553719168"/>
</node>
<node TEXT="Markdown Text 101 (Chat Formatting: Bold Italic " FOLDED="true" ID="ID_1291117937" CREATED="1566553719168" MODIFIED="1566553719168" LINK="https://support.discordapp.com/hc/en-us/articles/210298617-Markdown-Text-101-Chat-Formatting-Bold-Italic-Underline-">
<node TEXT="4) There are many different languages in place of Markdown that Discords syntax highlighting support. Each different language has its own approach to highlight-able syntax. In Markdown you can see that here: Block Quotes. Markdown now supports Block Quotes! The syntax to use Block Quotes is  or  followed by a space." ID="ID_269239559" CREATED="1566553719168" MODIFIED="1566553719168"/>
</node>
<node TEXT=": The Inline Code element - HTML: Hypertext Markup " FOLDED="true" ID="ID_150949417" CREATED="1566553719168" MODIFIED="1566553719168" LINK="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code">
<node TEXT="The HTML code element displays its contents styled in a fashion intended to indicate that the text is a short fragment of computer code. By default the content text is displayed using the user agents default monospace font." ID="ID_1912733350" CREATED="1566553719168" MODIFIED="1566553719168"/>
</node>
<node TEXT="Mastering Markdown &#xc2;&#xb7; GitHub Guides" FOLDED="true" ID="ID_996987097" CREATED="1566553719168" MODIFIED="1566553719168" LINK="https://guides.github.com/features/mastering-markdown/">
<node TEXT="Markdown is a lightweight and easy-to-use syntax for styling all forms of writing on the GitHub platform. What you will learn: How the Markdown format makes styled collaborative editing easy" ID="ID_1844984508" CREATED="1566553719168" MODIFIED="1566553719168"/>
</node>
</node>
</node>
<node TEXT="XML and Document Type Definitions" ID="ID_1769848523" CREATED="1566881027656" MODIFIED="1566881027656" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="XML and Document Type Definitions Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1946888143" CREATED="1566553719168" MODIFIED="1566553719168">
<icon BUILTIN="stop-sign"/>
<node TEXT="Visualize XML by creating a simple HTML document - YouTube" FOLDED="true" ID="ID_787529917" CREATED="1566553719168" MODIFIED="1566553719168" LINK="https://www.youtube.com/watch?v=jNmFslfzvTk">
<node TEXT="Apply what weve learned about XML by creating a simple HTML document. Write the document save it view it in a browser. See the browsers view of HTML through View Source or Control-U." ID="ID_97322754" CREATED="1566553719168" MODIFIED="1566553719168"/>
</node>
<node TEXT="MusicXML - Wikipedia" FOLDED="true" ID="ID_501375227" CREATED="1566553719168" MODIFIED="1566553719168" LINK="https://en.wikipedia.org/wiki/MusicXML">
<node TEXT="All of these versions were defined by a series of document type definitions (DTDs). An XML Schema Definition (XSD) implementation of Version 2.0 was released in September 2008. Version 3.0 was released in August 2011 with improved virtual instrument support in both DTD and XSD versions." ID="ID_1318165223" CREATED="1566553719168" MODIFIED="1566553719168"/>
</node>
<node TEXT="xsd - How to visualize an XML schema? - Stack Overflow" FOLDED="true" ID="ID_836333190" CREATED="1566553719168" MODIFIED="1566553719168" LINK="https://stackoverflow.com/questions/2486758/how-to-visualize-an-xml-schema">
<node TEXT="How to visualize an XML schema? Ask Question  The open source command line java application xsdvi creates an interactive diagram in SVG format from an XML Schema Definition. The generated SVG file can be displayed by a modern web browser where the user can expand and collapse the tree by mouse clicking.  Supports XML XSL XSLT XSD HTML " ID="ID_918332340" CREATED="1566553719168" MODIFIED="1566553719168"/>
</node>
<node TEXT="(PDF) Angur: A visualization system for XML documents" FOLDED="true" ID="ID_1978585269" CREATED="1566553719169" MODIFIED="1566553719169" LINK="https://www.researchgate.net/publication/228946695_Angur_A_visualization_system_for_XML_documents">
<node TEXT="PDF | Complex data structures have been used in many applications that can make them difficult to understand and manage. Visualization of these structures allows a user to get better insight both " ID="ID_1172899074" CREATED="1566553719169" MODIFIED="1566553719169"/>
</node>
<node TEXT="XML Visualization | Meta-Guide.com" FOLDED="true" ID="ID_1388546574" CREATED="1566553719169" MODIFIED="1566553719169" LINK="https://meta-guide.com/data-visualization/xml-visualization">
<node TEXT="INTERACTIVE VISUALIZATION OF XML DOCUMENTS R Hernych D Kubicek &#xe2;&#x20ac;&#x201c; feec.vutbr.cz ABSTRACT There is many data stored and exchanged in XML nowadays. However understanding of the information included in large data-oriented XML instances may not be simple in contrast to the presentation of document-oriented XML instances. Moreover &#xe2;&#x20ac;&#xa6;" ID="ID_1630072816" CREATED="1566553719169" MODIFIED="1566553719169"/>
</node>
<node TEXT="Stylesheet Transformations for Interactive VisualizationFI )" FOLDED="true" ID="ID_1796934890" CREATED="1566553719169" MODIFIED="1566553719169" LINK="http://www.web3d.org/x3d/content/examples/Basic/ChemicalMarkupLanguage/Polys.StylesheetTransformationsInteractiveVisualization.Web3d2003Symposium.pdf">
<node TEXT="Stylesheet Transformations for Interactive Visualization: Towards a Web3D Chemistry Curricula  for 3 or 4-dimensional visualization of XML data with X3D and VRML. Through diligent and cooperative work the X3D Task  The Document Type Definitions (DTD)" ID="ID_1954820089" CREATED="1566553719169" MODIFIED="1566553719169"/>
</node>
<node TEXT="A Formal Study of a Visual Language for the Visualization " FOLDED="true" ID="ID_1851117614" CREATED="1566553719169" MODIFIED="1566553719169" LINK="https://www.researchgate.net/publication/3943513_A_Formal_Study_of_a_Visual_Language_for_the_Visualization_of_Document_Type_Definition">
<node TEXT="A Formal Study of a Visual Language for the Visualization of Document Type Definition.  for the specification of XML transformations in an interactive environment based on a zoomable user " ID="ID_176904354" CREATED="1566553719169" MODIFIED="1566553719169"/>
</node>
<node TEXT="Stylesheet transformations for interactive visualization" FOLDED="true" ID="ID_1692393179" CREATED="1566553719169" MODIFIED="1566553719169" LINK="https://www.academia.edu/31335030/Stylesheet_transformations_for_interactive_visualization">
<node TEXT="Stylesheet Transformations for Interactive Visualization: Towards a Web3D Chemistry Curricula Nicholas F. Polys Department of Computer Science Virginia Polytechnic Institute and State University (Virginia Tech) US 540.961.2951 npolys@vt.edu ABSTRACT manifested as widely deployed web technologies such as HTML Recent Standards specifications offer important but SGML and the XML family produced " ID="ID_728563686" CREATED="1566553719169" MODIFIED="1566553719169"/>
</node>
<node TEXT="Configuration Files Used by the Visualization Framework" FOLDED="true" ID="ID_1115118691" CREATED="1566553719169" MODIFIED="1566553719169" LINK="https://lw.microstrategy.com/msdz/MSDL/GARelease_Current/_GARelease_Archives/102/docs/projects/VisSDK_All/Content/topics/Flash/VI_Configuration_Files_Used_by_the_Visualization_Framework.htm">
<node TEXT="Configuration Files Used by the Visualization Framework. The Visualization Framework uses information in five configuration files. widgets.xml This configuration file contains the list of widgets that can be applied to report grids in documents for display in Flash mode. They are applied at the report grid level." ID="ID_1037441534" CREATED="1566553719169" MODIFIED="1566553719169"/>
</node>
<node TEXT="SVG and X3D: New XML Technologies for 2D and 3D " FOLDED="true" ID="ID_1674896614" CREATED="1566553719169" MODIFIED="1566553719169" LINK="https://link.springer.com/chapter/10.1007/978-1-4471-3737-5_6">
<node TEXT="SVG and X3D: New XML Technologies for 2D and 3D Visualization. Authors; Authors and affiliations;  some essentially new visualization technologies are emerging which are entirely based on XML and therefore can be considered as native to the Semantic Web. Keywords Resource Description Framework Scene Graph Document Type Definition " ID="ID_1738102536" CREATED="1566553719169" MODIFIED="1566553719169"/>
</node>
<node TEXT="XML Schema Tutorial - w3schools.com" FOLDED="true" ID="ID_654883369" CREATED="1566553719169" MODIFIED="1566553719169" LINK="https://www.w3schools.com/xml/schema_intro.asp">
<node TEXT="An XML Schema describes the structure of an XML document. The XML Schema language is also referred to as XML Schema Definition (XSD).  because they are written in XML. With an extensible Schema definition you can:  because the XML data type date requires the format YYYY-MM-DD." ID="ID_853103441" CREATED="1566553719169" MODIFIED="1566553719169"/>
</node>
<node TEXT="XML - Wikipedia" FOLDED="true" ID="ID_815797200" CREATED="1566553719169" MODIFIED="1566553719169" LINK="https://en.wikipedia.org/wiki/XML">
<node TEXT="The oldest schema language for XML is the document type definition (DTD) inherited from SGML. DTDs have the following benefits: DTD support is ubiquitous due to its inclusion in the XML 1.0 standard. DTDs are terse compared to element-based schema languages and consequently present more information in a single screen." ID="ID_918380808" CREATED="1566553719169" MODIFIED="1566553719169"/>
</node>
</node>
<node TEXT="XML and Document Type Definitions Code#$D$#" FOLDED="true" ID="ID_1544924509" CREATED="1566553719169" MODIFIED="1566553719169">
<icon BUILTIN="stop-sign"/>
<node TEXT="DTD Tutorial - w3schools.com" FOLDED="true" ID="ID_503438620" CREATED="1566553719169" MODIFIED="1566553719169" LINK="https://www.w3schools.com/xml/xml_dtd_intro.asp">
<node TEXT="A DTD is a Document Type Definition. A DTD defines the structure and the legal elements and attributes of an XML document. Why Use a DTD? With a DTD independent groups of people can agree on a standard DTD for interchanging data. An application can use a DTD to verify that XML data is valid." ID="ID_744483268" CREATED="1566553719169" MODIFIED="1566553719169"/>
</node>
<node TEXT="XML - Wikipedia" FOLDED="true" ID="ID_237418279" CREATED="1566553719169" MODIFIED="1566553719169" LINK="https://en.wikipedia.org/wiki/XML">
<node TEXT="RELAX NG has a simpler definition and validation framework than XML Schema making it easier to use and implement. It also has the ability to use datatype framework plug-ins; a RELAX NG schema author for example can require values in an XML document to conform to definitions in XML Schema Datatypes. Schematron" ID="ID_1421446821" CREATED="1566553719169" MODIFIED="1566553719169"/>
</node>
<node TEXT="Types of XML Nodes | Microsoft Docs" FOLDED="true" ID="ID_30335060" CREATED="1566553719169" MODIFIED="1566553719169" LINK="https://docs.microsoft.com/en-us/dotnet/standard/data/xml/types-of-xml-nodes">
<node TEXT="To view a code example that reads in XML and uses a case construct on the node types to print information about the node and its contents see NodeType. For more information on the object hierarchy of the node types and their equivalent object name see XML Document Object Model (DOM) Hierarchy." ID="ID_445626410" CREATED="1566553719169" MODIFIED="1566553719169"/>
</node>
<node TEXT="XmlDocument Class (System.Xml) | Microsoft Docs" FOLDED="true" ID="ID_659014464" CREATED="1566553719169" MODIFIED="1566553719169" LINK="https://docs.microsoft.com/en-us/dotnet/api/system.xml.xmldocument">
<node TEXT="These blocks of code show helper methods that do all of this.  To use this approach youll have to define IDs in the document type definition declarations of your XML file. After you get a node you get the value of attributes or child nodes. This example does that with a book node." ID="ID_1820309302" CREATED="1566553719169" MODIFIED="1566553719169"/>
</node>
<node TEXT="XML Schema Example - w3schools.com" FOLDED="true" ID="ID_639743524" CREATED="1566553719169" MODIFIED="1566553719169" LINK="https://www.w3schools.com/XML/schema_example.asp">
<node TEXT="Now we want to create a schema for the XML document above. We start by opening a new file that we will call shiporder.xsd. To create the schema we could simply follow the structure in the XML document and define each element as we find it. We will start with the standard XML declaration followed by the xs:schema element that defines a schema:" ID="ID_239026883" CREATED="1566553719169" MODIFIED="1566553719169"/>
</node>
<node TEXT="List of XML and HTML character entity references - Wikipedia" FOLDED="true" ID="ID_1754896783" CREATED="1566553719169" MODIFIED="1566553719169" LINK="https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references">
<node TEXT="This article lists the character entity references that are valid in HTML and XML documents. A character entity reference refers to the content of a named entity. An entity declaration is created by using the !ENTIT name value syntax in a Document Type Definition (DTD)." ID="ID_579138949" CREATED="1566553719170" MODIFIED="1566553719170"/>
</node>
<node TEXT="XML DTD - w3schools.com" FOLDED="true" ID="ID_1069447831" CREATED="1566553719170" MODIFIED="1566553719170" LINK="https://www.w3schools.com/xml/xml_dtd.asp">
<node TEXT="XML does not require a DTD/Schema. When you are experimenting with XML or when you are working with small XML files creating DTDs may be a waste of time. If you develop applications wait until the specification is stable before you add a document definition. Otherwise your software might stop working because of validation errors." ID="ID_597796807" CREATED="1566553719170" MODIFIED="1566553719170"/>
</node>
<node TEXT="XML - DTDs - tutorialspoint.com" FOLDED="true" ID="ID_1082186223" CREATED="1566553719170" MODIFIED="1566553719170" LINK="https://www.tutorialspoint.com/xml/xml_dtds">
<node TEXT="The XML Document Type Declaration commonly known as DTD is a way to describe XML language precisely. DTDs check vocabulary and validity of the structure of XML documents against grammatical rules of appropriate XML language. An XML DTD can be either specified inside the document or it can be kept in a separate document and then liked separately." ID="ID_1593895047" CREATED="1566553719170" MODIFIED="1566553719170"/>
</node>
<node TEXT="Using DTDs (Document Type Definitions) - O&#xe2;&#x20ac;&#x2122;Reilly Media" FOLDED="true" ID="ID_550350955" CREATED="1566553719170" MODIFIED="1566553719170" LINK="http://archive.oreilly.com/oreillyschool/courses/introxml/introxml03.html">
<node TEXT="Lets break down this code: mydoctype is the document type. If your XML document will hold personal banking information your doctype might be financial or banking.. SYSTEM is used if your DTD is a separate file from your XML document. You can define your DTDs to be either PUBLIC or SYSTEM depending on your application.PUBLIC means that all are free to use the DTD." ID="ID_593830583" CREATED="1566553719170" MODIFIED="1566553719170"/>
</node>
<node TEXT="XML Schema Tutorial - w3schools.com" FOLDED="true" ID="ID_1878053232" CREATED="1566553719170" MODIFIED="1566553719170" LINK="https://www.w3schools.com/xml/schema_intro.asp">
<node TEXT="An XML Schema describes the structure of an XML document. The XML Schema language is also referred to as XML Schema Definition (XSD).  because they are written in XML. With an extensible Schema definition you can:  because the XML data type date requires the format YYYY-MM-DD." ID="ID_129610162" CREATED="1566553719170" MODIFIED="1566553719170"/>
</node>
<node TEXT="How to validate an XML document by using DTD XDR or XSD " FOLDED="true" ID="ID_282946943" CREATED="1566553719170" MODIFIED="1566553719170" LINK="https://support.microsoft.com/en-us/help/315533/how-to-validate-an-xml-document-by-using-dtd-xdr-or-xsd-in-visual-basi">
<node TEXT="To specify the allowable structure and content of an XML document you can write a Document Type Definition (DTD) a Microsoft XML-Data Reduced (XDR) schema or an XML Schema definition language (XSD) schema. XSD schemas are the preferred way to specify XML grammars in the .NET Framework but DTDs and XDR schemas are also supported." ID="ID_1271581113" CREATED="1566553719170" MODIFIED="1566553719170"/>
</node>
<node TEXT="XML For Dummies Cheat Sheet - dummies" FOLDED="true" ID="ID_72820513" CREATED="1566553719170" MODIFIED="1566553719170" LINK="https://www.dummies.com/web-design-development/site-development/xml-for-dummies-cheat-sheet/">
<node TEXT="From XML For Dummies 4th Edition. By Lucinda Dykes Ed Tittel . XML is a markup language that builds web pages. Before you start using XML study the difference between a valid and well-formed document how to create DTD (Document Type Definition) elements and basic schema declarations to build an XML document." ID="ID_997538594" CREATED="1566553719170" MODIFIED="1566553719170"/>
</node>
</node>
</node>
<node TEXT="Case Study- CFG for Palindromes" ID="ID_364543883" CREATED="1566881027657" MODIFIED="1566881027657" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Case Study Context Free Grammar for Palindromes Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1487634081" CREATED="1566553719170" MODIFIED="1566553719170">
<icon BUILTIN="stop-sign"/>
<node TEXT="Data Visualization in R with ggplot2 - linkedin.com" FOLDED="true" ID="ID_18779704" CREATED="1566553719170" MODIFIED="1566553719170" LINK="https://www.linkedin.com/learning/data-visualization-in-r-with-ggplot2">
<node TEXT="Discover how to create informative and visually appealing data visualizations using ggplot2 the leading visualization package for R. In this course Mike Chapple shows how to work with ggplot2 to " ID="ID_1442417737" CREATED="1566553719170" MODIFIED="1566553719170"/>
</node>
<node TEXT="Data Visualization in R with ggplot2 - lynda.com" FOLDED="true" ID="ID_1165341096" CREATED="1566553719170" MODIFIED="1566553719170" LINK="https://www.lynda.com/RStudio-tutorials/Data-Visualization-R-ggplot2/672258-2.html">
<node TEXT="Discover how to create informative and visually appealing data visualizations using ggplot2 the leading visualization package for R. In this course Mike Chapple shows how to work with ggplot2 to create basic visualizations how to beautify those visualizations by applying different aesthetics and how to visualize data with maps." ID="ID_1639381726" CREATED="1566553719170" MODIFIED="1566553719170"/>
</node>
<node TEXT="Visualisation of text corpora: A case study of the PCEEC " FOLDED="true" ID="ID_463713547" CREATED="1566553719170" MODIFIED="1566553719170" LINK="http://www.helsinki.fi/varieng/series/volumes/07/siirtola_et_al/">
<node TEXT="Visualisation of text corpora: A case study of the PCEEC.  visualisation of word frequencies and relationships and visualisation of changes over time. Interactive visualisation of text corpora is discussed in the final sections.  is a popular word cloud visualisation tool that is available free online. There are five visual variables in " ID="ID_689245158" CREATED="1566553719170" MODIFIED="1566553719170"/>
</node>
<node TEXT="Modifying the background - linkedin.com" FOLDED="true" ID="ID_1001210748" CREATED="1566553719170" MODIFIED="1566553719170" LINK="https://www.linkedin.com/learning/data-visualization-in-r-with-ggplot2/modifying-the-background">
<node TEXT="Join Mike Chapple for an in-depth discussion in this video Modifying the background part of Data Visualization in R with ggplot2." ID="ID_3941984" CREATED="1566553719170" MODIFIED="1566553719170"/>
</node>
<node TEXT="Grammarly: Free Writing Assistant" FOLDED="true" ID="ID_846703768" CREATED="1566553719170" MODIFIED="1566553719170" LINK="https://www.grammarly.com/">
<node TEXT="From grammar and spelling to style and tone Grammarly helps you eliminate errors and find the perfect words to express yourself. Grammarly allows me to get those communications out and feel confident that I&#xe2;&#x20ac;&#x2122;m putting my best foot forward. Grammarly is like a little superpower especially when I " ID="ID_990614601" CREATED="1566553719170" MODIFIED="1566553719170"/>
</node>
<node TEXT="Visualizing data with maps - lynda.com" FOLDED="true" ID="ID_1235366824" CREATED="1566553719170" MODIFIED="1566553719170" LINK="https://www.lynda.com/RStudio-tutorials/Visualizing-data-maps/672258/730646-4.html">
<node TEXT="Throughout the course Mike also covers key concepts such as the grammar of graphics and how to apply different geometries to visualize data. To wrap up he shares a case study that lends a practical context to the concepts covered in the course." ID="ID_1158166945" CREATED="1566553719170" MODIFIED="1566553719170"/>
</node>
<node TEXT="The use of Visuals in the Language Classroom - ucm.es" FOLDED="true" ID="ID_973178757" CREATED="1566553719171" MODIFIED="1566553719171" LINK="https://ucm.es/data/cont/docs/119-2015-03-17-11.MariaRamirezGarcia2013.pdf">
<node TEXT="and facilitate comprehension of grammar and language increase students&#xe2;&#x20ac;&#x2122; motivation as well as help students to memorize the new vocabulary and structures. Apart from being an excellent tool to improve the language acquisition the use of visual in the classroom provides a more meaningful context for the students. All these" ID="ID_421990714" CREATED="1566553719171" MODIFIED="1566553719171"/>
</node>
<node TEXT="(PDF) Language emulator a helpful toolkit in the learning " FOLDED="true" ID="ID_1131689734" CREATED="1566553719171" MODIFIED="1566553719171" LINK="https://www.researchgate.net/publication/221536800_Language_emulator_a_helpful_toolkit_in_the_learning_process_of_computer_theory">
<node TEXT="Language emulator a helpful toolkit in the learning process of computer theory  5.1 Case Study - UFMG. 5.2 Helping  grammars displaying parse trees and parsing any context-free grammar " ID="ID_687490419" CREATED="1566553719171" MODIFIED="1566553719171"/>
</node>
<node TEXT="Untold Business Writing Courses  Thought Leadership Training" FOLDED="true" ID="ID_875506958" CREATED="1566553719171" MODIFIED="1566553719171" LINK="https://untoldcontent.com/training/">
<node TEXT="Untolds business writing courses and thought leadership training programs equip busy professionals with the fundamental skills for high-impact writing." ID="ID_725377525" CREATED="1566553719171" MODIFIED="1566553719171"/>
</node>
<node TEXT="Laura Florentina Stoica | PhD | Lucian Blaga University of " FOLDED="true" ID="ID_1715604486" CREATED="1566553719171" MODIFIED="1566553719171" LINK="https://www.researchgate.net/profile/Laura_Stoica">
<node TEXT="Laura Florentina Stoica of Lucian Blaga University of Sibiu Sibiu | Read 26 publications and contact Laura Florentina Stoica on ResearchGate the professional network for scientists." ID="ID_518580603" CREATED="1566553719171" MODIFIED="1566553719171"/>
</node>
<node TEXT="Visualization of biological data: Infrastructure design " FOLDED="true" ID="ID_329721787" CREATED="1566553719171" MODIFIED="1566553719171" LINK="https://lib.dr.iastate.edu/cgi/viewcontent.cgi?article=4288context=etd">
<node TEXT="Visualization of biological data: Infrastructure design and application by Tengfei Yin A dissertation submitted to the graduate faculty in partial ful&#xef;&#xac;&#xfffd;llment of the requirements for the degree of DOCTOR OF PHILOSOPHY Major: Molecular Cellular and Developmental Biology Program of Study Committee: Dianne Cook Co-Major Professor" ID="ID_1269824327" CREATED="1566553719171" MODIFIED="1566553719171"/>
</node>
<node TEXT="Reproductions supplied by EDRS are the best that can be " FOLDED="true" ID="ID_1555387819" CREATED="1566553719171" MODIFIED="1566553719171" LINK="https://files.eric.ed.gov/fulltext/ED454831.pdf">
<node TEXT="Learning Algorithm Design Through Interactive Simulation Making Exploration History Interactive for Web-based Learning Models and Strategies for Promotion of Distance Learning in Primary Schools and High Schools Multimedia Design for Chemical Visualisation Multimedia Intelligent Tutoring System for Context-Free Grammar" ID="ID_1666188063" CREATED="1566553719171" MODIFIED="1566553719171"/>
</node>
</node>
<node TEXT="Case Study Context Free Grammar for Palindromes Code#$D$#" FOLDED="true" ID="ID_1790734400" CREATED="1566553719171" MODIFIED="1566553719171">
<icon BUILTIN="stop-sign"/>
<node TEXT="Context-free grammar - Wikipedia" FOLDED="true" ID="ID_442778934" CREATED="1566553719171" MODIFIED="1566553719171" LINK="https://en.wikipedia.org/wiki/Context-free_grammar">
<node TEXT="are added a context-free grammar for the set of all palindromes over the alphabet { a b} is obtained. Well-formed parentheses. The canonical example of a context-free grammar is parenthesis matching which is representative of the general case. There are two terminal symbols ( and ) and one nonterminal symbol S. The production rules are" ID="ID_331949321" CREATED="1566553719171" MODIFIED="1566553719171"/>
</node>
<node TEXT="6a.pdf - Context-Free Grammars A grammar is a set of rules " FOLDED="true" ID="ID_1713964050" CREATED="1566553719171" MODIFIED="1566553719171" LINK="https://www.coursehero.com/file/33328199/6apdf/">
<node TEXT="Context-Free Grammars A grammar is a set of rules for putting strings together and so corresponds to a language. Grammars A grammar. Find Study Resources. Main Menu  Palindromes Let P be language of palindromes with alpha  where I can find study resources for nearly all my courses get online help from tutors 24/7 and even share my old " ID="ID_7005603" CREATED="1566553719171" MODIFIED="1566553719171"/>
</node>
<node TEXT="(Get Answer) - Give a context-free grammar G that de?nes " FOLDED="true" ID="ID_284197653" CREATED="1566553719171" MODIFIED="1566553719171" LINK="https://www.transtutors.com/questions/give-a-context-free-grammar-g-that-de-nes-the-language-l-of-all-strings-of-0-s-and-1-2736440.htm">
<node TEXT="Give a context-free grammar G that de?nes the language L of all strings of 0&#xe2;&#x20ac;&#x2122;s and 1&#xe2;&#x20ac;&#x2122;s of odd length. Justify that L(G) = L. - 2736440  download the skeleton code and fill in the missing functions marked with a &#xe2;&#x20ac;&#x153;//CODE HERE&#xe2;&#x20ac;&#xfffd; comment. Do not alter the function names or the tests will not compile.  Write one page of speech draft for " ID="ID_1841100448" CREATED="1566553719171" MODIFIED="1566553719171"/>
</node>
<node TEXT="Solved: Which of the following are context-free?(i)(a)(a " FOLDED="true" ID="ID_1126671728" CREATED="1566553719171" MODIFIED="1566553719171" LINK="https://www.chegg.com/homework-help/following-context-free-b-oddpalindrome-ii-equal-andnan-iii-a-chapter-17-problem-9p-solution-9780471137726-exc">
<node TEXT="home / study / engineering / computer science / theory of computation / theory of computation solutions manuals / Introduction to Computer Theory / 2nd edition / chapter 17  Edit edition. Problem 9P from Chapter 17: Which of the following are context-free?(i)(a)(a + b)* &#xe2;&#x2039;&#x201a; ODD Get solutions . Looking for the textbook? We have solutions " ID="ID_1720127316" CREATED="1566553719171" MODIFIED="1566553719171"/>
</node>
<node TEXT="Context-free grammar of the concatenation of a string S " FOLDED="true" ID="ID_1093377452" CREATED="1566553719171" MODIFIED="1566553719171" LINK="https://cs.stackexchange.com/questions/112481/context-free-grammar-of-the-concatenation-of-a-string-s-and-subsequence-of-rever">
<node TEXT="Deletion is hard to realize since the business of context-free grammar is to generate. Starting from $\#$  we will either add the same symbol to both side or add a symbol to the left hand side only." ID="ID_463379948" CREATED="1566553719171" MODIFIED="1566553719171"/>
</node>
<node TEXT="(Solved) - Design grammars for the following languages " FOLDED="true" ID="ID_1439577953" CREATED="1566553719171" MODIFIED="1566553719171" LINK="https://www.transtutors.com/questions/design-grammars-for-the-following-languages--697130.htm">
<node TEXT="Design grammars for the following languages: a) The set of all strings of 0s and 1s such that every 0 is immediately followed by at least one 1.! b) The set of all strings of 0s and 1s that are palindromes; that is the string reads the same backward as forward.! c) The set of all strings of 0s and 1s with an equal number of 0s and 1s." ID="ID_672750511" CREATED="1566553719171" MODIFIED="1566553719171"/>
</node>
<node TEXT="results of deltas Since there are only a finite number of " FOLDED="true" ID="ID_1325535666" CREATED="1566553719171" MODIFIED="1566553719171" LINK="https://www.coursehero.com/file/p70m8/regular-grammars-and-nondeterministic-finite-state-automata-are-two-sides-of/">
<node TEXT="results of deltas Since there are only a finite number of results of deltas six from COMPUTER 231 at Arizona State University" ID="ID_607886461" CREATED="1566553719171" MODIFIED="1566553719171"/>
</node>
<node TEXT="Grammarly: Free Writing Assistant" FOLDED="true" ID="ID_1697167021" CREATED="1566553719171" MODIFIED="1566553719171" LINK="https://www.grammarly.com/">
<node TEXT="From grammar and spelling to style and tone Grammarly helps you eliminate errors and find the perfect words to express yourself. Grammarly allows me to get those communications out and feel confident that I&#xe2;&#x20ac;&#x2122;m putting my best foot forward. Grammarly is like a little superpower especially when I " ID="ID_1438068995" CREATED="1566553719172" MODIFIED="1566553719172"/>
</node>
<node TEXT="UGC NET CS Notes according to syllabus of Paper-II " FOLDED="true" ID="ID_53873100" CREATED="1566553719172" MODIFIED="1566553719172" LINK="https://www.geeksforgeeks.org/ugc-net-cs-notes-according-to-syllabus-of-paper-ii/">
<node TEXT="A Computer Science portal for geeks. It contains well written well thought and well explained computer science and programming articles quizzes and practice/competitive programming/company interview Questions." ID="ID_1270267042" CREATED="1566553719172" MODIFIED="1566553719172"/>
</node>
<node TEXT="Backus&#xe2;&#x20ac;&#x201c;Naur form - Wikipedia" FOLDED="true" ID="ID_1451442491" CREATED="1566553719172" MODIFIED="1566553719172" LINK="https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form">
<node TEXT="In computer science Backus&#xe2;&#x20ac;&#x201c;Naur form or Backus normal form (BNF) is a notation technique for context-free grammars often used to describe the syntax of languages used in computing such as computer programming languages document formats instruction sets and communication protocols.They are applied wherever exact descriptions of languages are needed: for instance in official language " ID="ID_647025889" CREATED="1566553719172" MODIFIED="1566553719172"/>
</node>
<node TEXT="Yield grammar analysis and product optimization in a " FOLDED="true" ID="ID_1170154550" CREATED="1566553719172" MODIFIED="1566553719172" LINK="https://www.sciencedirect.com/science/article/pii/S0167642313002402">
<node TEXT="Yield grammar analysis and product optimization in a domain-specific language for dynamic programming  Bellmans Principle with respect to all other functions&#xe2;&#x20ac;&#x201d;this is the distributivity requirement in the simple semiring case. The context-free grammar in semiring parsing is replaced by a (regular) tree grammar which generates as its " ID="ID_1068502030" CREATED="1566553719172" MODIFIED="1566553719172"/>
</node>
<node TEXT="Faculty of Engineering Savitribai Phule Pune University Pune" FOLDED="true" ID="ID_1941749822" CREATED="1566553719172" MODIFIED="1566553719172" LINK="http://collegecirculars.unipune.ac.in/sites/documents/Syllabus%202017/TE_Computer_Engg_Syllabus_2015_Course_10.072018.pdf">
<node TEXT="Code Course Teaching Scheme Hours / Week  Introduction Regular Grammar Context Free Grammar- Definition Derivation Language of grammar sentential form parse tree inference derivation parse trees ambiguity in grammar and  Case Study- CFG for Palindromes Parenthesis Match Unit IV Turing Machines (TM) 08 Hours ." ID="ID_1425045280" CREATED="1566553719172" MODIFIED="1566553719172"/>
</node>
</node>
</node>
<node TEXT="Parenthesis Match" ID="ID_1381380923" CREATED="1566881027658" MODIFIED="1566881027658" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
</node>
<node TEXT="Turing Machines (TM) " FOLDED="true" POSITION="left" ID="ID_230368811" CREATED="1566881027664" MODIFIED="1566881027664" Folded="true">
<edge COLOR="#6bf67b"/>
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Turing Machine Model" ID="ID_1895075617" CREATED="1566881027664" MODIFIED="1566881027664" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Turing Machine Model Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1729525075" CREATED="1566553719174" MODIFIED="1566553719174">
<icon BUILTIN="stop-sign"/>
<node TEXT="Turing machine visualization" FOLDED="true" ID="ID_1926249260" CREATED="1566553719174" MODIFIED="1566553719174" LINK="http://turingmachine.io/">
<node TEXT="A Turing machine is an abstract device to model computation as rote symbol manipulation.. Each machine has a finite number of states and a finite number of possible symbols. These are fixed before the machine starts and do not change as the machine runs." ID="ID_252064339" CREATED="1566553719174" MODIFIED="1566553719174"/>
</node>
<node TEXT="Turing machine - Wikipedia" FOLDED="true" ID="ID_585250901" CREATED="1566553719174" MODIFIED="1566553719174" LINK="https://en.wikipedia.org/wiki/Turing_machine">
<node TEXT="A Turing machine is a mathematical model of computation that defines an abstract machine which manipulates symbols on a strip of tape according to a table of rules. Despite the models simplicity given any computer algorithm a Turing machine capable of simulating that algorithms logic can be constructed.. The machine operates on an infinite memory tape divided into discrete cells." ID="ID_401677574" CREATED="1566553719174" MODIFIED="1566553719174"/>
</node>
<node TEXT="Wolfram|Alpha Examples: Turing Machines" FOLDED="true" ID="ID_232541110" CREATED="1566553719174" MODIFIED="1566553719174" LINK="https://www.wolframalpha.com/examples/science-and-technology/computational-sciences/turing-machines/">
<node TEXT="Alan Turings Turing machines provide for a universal notion of computation. Wolfram|Alpha simulates analyzes and gives information about the rule space of many Turing machines. It also creates interactive visualizations including network visualizations of the evolution of Turing machines." ID="ID_1359968010" CREATED="1566553719174" MODIFIED="1566553719174"/>
</node>
<node TEXT="Online Turing Machine Simulator" FOLDED="true" ID="ID_81906787" CREATED="1566553719174" MODIFIED="1566553719174" LINK="https://turingmachinesimulator.com/">
<node TEXT="Interactive Turing machine simulator. Use a simple language to create compile and run your Turing machines save and share your own Turing machines." ID="ID_1936466266" CREATED="1566553719174" MODIFIED="1566553719174"/>
</node>
<node TEXT="Interactive computation - Wikipedia" FOLDED="true" ID="ID_698829896" CREATED="1566553719174" MODIFIED="1566553719174" LINK="https://en.wikipedia.org/wiki/Interactive_computation">
<node TEXT="The Church-Turing thesis attempts to define computation and computability in terms of Turing machines. Because the Turing machine model only provides an answer to the question of what computability of functions means but interactive tasks are not always reducible to functions [clarification needed] it fails to capture a broader intuition of " ID="ID_1272314748" CREATED="1566553719174" MODIFIED="1566553719174"/>
</node>
<node TEXT="CHAPTER Interactive Turing Machines - dspace.library.uu.nl" FOLDED="true" ID="ID_1563695988" CREATED="1566553719174" MODIFIED="1566553719174" LINK="https://dspace.library.uu.nl/bitstream/handle/1874/7653/c5.pdf">
<node TEXT="Interactive Turing Machines The interactive Turing machine which was introduced by Van Leeuwen and Wiedermann[28 30] is an extension of the classical Turing machine model. It at-tempts to model modern real-life computing systems more accurately. One aspect of such systems is that they unlike classical models interact with their environ-ment." ID="ID_297967631" CREATED="1566553719174" MODIFIED="1566553719174"/>
</node>
<node TEXT="Turing Machines | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_325447307" CREATED="1566553719175" MODIFIED="1566553719175" LINK="https://brilliant.org/wiki/turing-machines/">
<node TEXT="A Turing machine is an abstract computational model that performs computations by reading and writing to an infinite tape. Turing machines provide a powerful computational model for solving problems in computer science and testing the limits of computation &#xe2;&#x20ac;&#x201d; are there problems that we simply cannot solve? Turing machines are similar to finite automata/finite state machines but have the " ID="ID_1862322160" CREATED="1566553719175" MODIFIED="1566553719175"/>
</node>
<node TEXT="Turing Machines - YouTube" FOLDED="true" ID="ID_1686717027" CREATED="1566553719175" MODIFIED="1566553719175" LINK="https://www.youtube.com/watch?v=Kr0wCRFVAZc">
<node TEXT="Theory of Computation 12. Turing Machines ADUni. This feature is not available right now. Please try again later." ID="ID_112338668" CREATED="1566553719175" MODIFIED="1566553719175"/>
</node>
<node TEXT="Turing Machine - Introduction (Part 1) - YouTube" FOLDED="true" ID="ID_1162772181" CREATED="1566553719175" MODIFIED="1566553719175" LINK="https://www.youtube.com/watch?v=PvLaPKPzq2I">
<node TEXT="TOC: Introduction to Turing Machine Topics Discussed: 1. Brief recap of the FSM and PDA 2. Introduction to Turing Machine 3. Tape of Turing Machines 4. Opera" ID="ID_339783028" CREATED="1566553719175" MODIFIED="1566553719175"/>
</node>
<node TEXT="Alan Turing: Virtuosity and Visualisation - eWiC" FOLDED="true" ID="ID_243675263" CREATED="1566553719175" MODIFIED="1566553719175" LINK="https://ewic.bcs.org/upload/pdf/ewic_eva16_ma_paper1.pdf">
<node TEXT="Alan Turing: Virtuosity and visualisation Jonathan P. Bowen 199 Although there have been claims to have succeeded with this test this is still an active area of research with good progress in machine learning more recently. Conway&#xe2;&#x20ac;&#x2122;s Game of Life as previously mentioned although based on very simple rules can exhibit AI-" ID="ID_677394749" CREATED="1566553719175" MODIFIED="1566553719175"/>
</node>
<node TEXT="Visual Turing Machine download | SourceForge.net" FOLDED="true" ID="ID_699236102" CREATED="1566553719175" MODIFIED="1566553719175" LINK="https://sourceforge.net/projects/visualturing/">
<node TEXT="Visual Turing Machine is a tool for visually designing Turing machines. This means no coding in abstract scripting languages but simple pointclick design. It uses the a..z symbol set plus the empty # symbol and also simulates an infinite tape." ID="ID_1476840775" CREATED="1566553719175" MODIFIED="1566553719175"/>
</node>
<node TEXT="Turing machine simulator - Anthony Morphett" FOLDED="true" ID="ID_828845142" CREATED="1566553719175" MODIFIED="1566553719175" LINK="http://morphett.info/turing/turing.html">
<node TEXT="This is a Turing machine simulator. To use it: Load one of the example programs or write your own in the Turing machine program area.See below for syntax.; Enter something in the Input area - this will be written on the tape initially as input to the machine." ID="ID_208568722" CREATED="1566553719175" MODIFIED="1566553719175"/>
</node>
</node>
<node TEXT="Turing Machine Model Code#$D$#" FOLDED="true" ID="ID_1040011967" CREATED="1566553719175" MODIFIED="1566553719175">
<icon BUILTIN="stop-sign"/>
<node TEXT="Turing machine - Wikipedia" FOLDED="true" ID="ID_573366873" CREATED="1566553719175" MODIFIED="1566553719175" LINK="https://en.wikipedia.org/wiki/Turing_machine">
<node TEXT="A Turing machine is a mathematical model of computation that defines an abstract machine which manipulates symbols on a strip of tape according to a table of rules. Despite the models simplicity given any computer algorithm a Turing machine capable of simulating that algorithms logic can be constructed.. The machine operates on an infinite memory tape divided into discrete cells." ID="ID_343940982" CREATED="1566553719175" MODIFIED="1566553719175"/>
</node>
<node TEXT="Alan Turing - Wikipedia" FOLDED="true" ID="ID_1075034901" CREATED="1566553719175" MODIFIED="1566553719175" LINK="https://en.wikipedia.org/wiki/Alan_Turing">
<node TEXT="Alan Mathison Turing OBE FRS (/ &#xcb;&#x2c6; tj &#xca;&#x160;&#xc9;&#x2122;r &#xc9;&#xaa; &#xc5;&#x2039; /; 23 June 1912 &#xe2;&#x20ac;&#x201c; 7 June 1954) was an English mathematician computer scientist logician cryptanalyst philosopher and theoretical biologist. Turing was highly influential in the development of theoretical computer science providing a formalisation of the concepts of algorithm and computation with the Turing machine which can be " ID="ID_779740464" CREATED="1566553719175" MODIFIED="1566553719175"/>
</node>
<node TEXT="A C# Turing Machine - CodeProject" FOLDED="true" ID="ID_1549318242" CREATED="1566553719175" MODIFIED="1566553719175" LINK="https://www.codeproject.com/articles/409525/a-csharp-turing-machine">
<node TEXT="Figure 3: Turing Machine Description. For example consider the following instruction &#xe2;&#x20ac;&#x153;If the head reads symbols 1 in the current position P on the tape and the current state is A then write symbol 0 move HEAD left and go to state B&#xe2;&#x20ac;&#xfffd;." ID="ID_64293217" CREATED="1566553719175" MODIFIED="1566553719175"/>
</node>
<node TEXT="Turing Machines - introcs.cs.princeton.edu" FOLDED="true" ID="ID_179442610" CREATED="1566553719175" MODIFIED="1566553719175" LINK="https://introcs.cs.princeton.edu/java/52turing/">
<node TEXT="5.2 Turing Machines. This section under major construction. Turing machine. The Turing machine is one of the most beautiful and intriguing intellectual discoveries of the 20th century. Turing machine is a simple and useful abstract model of computation (and digital computers) that is general enough to embody any computer program." ID="ID_202203873" CREATED="1566553719175" MODIFIED="1566553719175"/>
</node>
<node TEXT="Turing Machine Introduction - tutorialspoint.com" FOLDED="true" ID="ID_1838405874" CREATED="1566553719175" MODIFIED="1566553719175" LINK="https://www.tutorialspoint.com/automata_theory/turing_machine_introduction">
<node TEXT="A Turing Machine is an accepting device which accepts the languages (recursively enumerable set) generated by type 0 grammars. It was invented in 1936 by Alan Turing. A Turing Machine (TM) is a mathematical model which consists of an infinite length tape divided into cells on which input is given " ID="ID_847655846" CREATED="1566553719175" MODIFIED="1566553719175"/>
</node>
<node TEXT="Turing Machine (Example-1) - YouTube" FOLDED="true" ID="ID_392475208" CREATED="1566553719175" MODIFIED="1566553719175" LINK="https://www.youtube.com/watch?v=D9eF_B8URnw">
<node TEXT="TOC: Turing Machine (Example-1) Topics discussed: This lecture shows how to design a Turing Machine for the language 01*0 Contribute: http://www.nesoacademy." ID="ID_701591977" CREATED="1566553719175" MODIFIED="1566553719175"/>
</node>
<node TEXT="Universal Turing machine - Rosetta Code" FOLDED="true" ID="ID_10096911" CREATED="1566553719175" MODIFIED="1566553719175" LINK="https://rosettacode.org/wiki/Universal_Turing_machine">
<node TEXT="One of the foundational mathematical constructs behind computer science is the universal Turing Machine.. Indeed one way to definitively prove that a language is turing-complete is to implement a universal Turing machine in it.. Task. Simulate such a machine capable of taking the definition of any other Turing machine and executing it." ID="ID_796252217" CREATED="1566553719175" MODIFIED="1566553719175"/>
</node>
<node TEXT="The Universal Turing Machine - web.stanford.edu" FOLDED="true" ID="ID_180031068" CREATED="1566553719175" MODIFIED="1566553719175" LINK="https://web.stanford.edu/class/archive/cs/cs103/cs103.1126/lectures/19/Slides19.pdf">
<node TEXT="The universal Turing machine might be the very first &#xe2;&#x20ac;&#x153;complicated&#xe2;&#x20ac;&#xfffd; algorithm ever designed for a computer. Motivation for the &#xe2;&#x20ac;&#x153;stored-program&#xe2;&#x20ac;&#xfffd; model of computers. As a justification for the Church-Turing thesis. All sufficiently powerful models of computation can simulate one another." ID="ID_1446092747" CREATED="1566553719176" MODIFIED="1566553719176"/>
</node>
<node TEXT="Turing machine visualization" FOLDED="true" ID="ID_859836176" CREATED="1566553719176" MODIFIED="1566553719176" LINK="http://turingmachine.io/">
<node TEXT="A Turing machine is an abstract device to model computation as rote symbol manipulation.. Each machine has a finite number of states and a finite number of possible symbols. These are fixed before the machine starts and do not change as the machine runs." ID="ID_789070774" CREATED="1566553719176" MODIFIED="1566553719176"/>
</node>
<node TEXT="How Alan Turing Cracked The Enigma Code - iwm.org.uk" FOLDED="true" ID="ID_772546006" CREATED="1566553719176" MODIFIED="1566553719176" LINK="https://www.iwm.org.uk/history/how-alan-turing-cracked-the-enigma-code">
<node TEXT="Alan Turing was a brilliant mathematician. Born in London in 1912 he studied at both Cambridge and Princeton universities. He was already working part-time for the British Government&#xe2;&#x20ac;&#x2122;s Code and Cypher School before the Second World War broke out. In 1939 Turing took up a full-time role at " ID="ID_554663263" CREATED="1566553719176" MODIFIED="1566553719176"/>
</node>
<node TEXT="c - Simple Turing machine simulator - Code Review Stack " FOLDED="true" ID="ID_1885250516" CREATED="1566553719176" MODIFIED="1566553719176" LINK="https://codereview.stackexchange.com/questions/19814/simple-turing-machine-simulator">
<node TEXT="Ergo: I wanted to write a basic one tape Turing machine simulator. It works as far as I know. Its not brilliant and the Turing machine is hard coded in this early version but it is functional. Id really like some review on the code." ID="ID_648574099" CREATED="1566553719176" MODIFIED="1566553719176"/>
</node>
<node TEXT="Cracking the NAZI Enigma Code Machine - YouTube" FOLDED="true" ID="ID_917749944" CREATED="1566553719176" MODIFIED="1566553719176" LINK="https://www.youtube.com/watch?v=Hb44bGY2KdU">
<node TEXT="Half a Million Years - Sumerian Texts Speak of Ancient Kings and a Mystery Planet - Duration: 36:41. Viper TV - Documentaries 447109 views" ID="ID_1710252427" CREATED="1566553719176" MODIFIED="1566553719176"/>
</node>
</node>
<node TEXT="Design of Turing Machine Interactive Visualisation#$D$#" FOLDED="true" ID="ID_727659034" CREATED="1566553719180" MODIFIED="1566553719180">
<icon BUILTIN="stop-sign"/>
<node TEXT="Turing Machine (Example-1) - YouTube" FOLDED="true" ID="ID_1611893827" CREATED="1566553719180" MODIFIED="1566553719180" LINK="https://www.youtube.com/watch?v=D9eF_B8URnw">
<node TEXT="TOC: Turing Machine (Example-1) Topics discussed: This lecture shows how to design a Turing Machine for the language 01*0 Contribute: http://www.nesoacademy." ID="ID_856310511" CREATED="1566553719180" MODIFIED="1566553719180"/>
</node>
<node TEXT="55. CONSTRUCTING TURING MACHINE - YouTube" FOLDED="true" ID="ID_224279252" CREATED="1566553719180" MODIFIED="1566553719180" LINK="https://www.youtube.com/watch?v=oSpJN48qbLc">
<node TEXT="The interactive transcript could not be loaded.  Published on May 5 2014. CONSTRUCTING TURING MACHINE. Category Education; Created using YouTube Video Editor  Mod-05 Lec-26 TURING MACHINES " ID="ID_1136621764" CREATED="1566553719180" MODIFIED="1566553719180"/>
</node>
<node TEXT="Turing machine - Wikipedia" FOLDED="true" ID="ID_92249153" CREATED="1566553719180" MODIFIED="1566553719180" LINK="https://en.wikipedia.org/wiki/Turing_machine">
<node TEXT="A Turing machine is a mathematical model of computation that defines an abstract machine which manipulates symbols on a strip of tape according to a table of rules. Despite the models simplicity given any computer algorithm a Turing machine capable of simulating that algorithms logic can be constructed.. The machine operates on an infinite memory tape divided into discrete cells." ID="ID_1549054341" CREATED="1566553719180" MODIFIED="1566553719180"/>
</node>
<node TEXT="Online Turing Machine Simulator" FOLDED="true" ID="ID_1954299850" CREATED="1566553719180" MODIFIED="1566553719180" LINK="https://turingmachinesimulator.com/">
<node TEXT="Interactive Turing machine simulator. Use a simple language to create compile and run your Turing machines save and share your own Turing machines." ID="ID_869062308" CREATED="1566553719180" MODIFIED="1566553719180"/>
</node>
<node TEXT="Visual Turing Machine download | SourceForge.net" FOLDED="true" ID="ID_66726399" CREATED="1566553719180" MODIFIED="1566553719180" LINK="https://sourceforge.net/projects/visualturing/">
<node TEXT="Visual Turing Machine is a tool for visually designing Turing machines. This means no coding in abstract scripting languages but simple pointclick design. It uses the a..z symbol set plus the empty # symbol and also simulates an infinite tape." ID="ID_40470168" CREATED="1566553719180" MODIFIED="1566553719180"/>
</node>
<node TEXT="Wolfram|Alpha Examples: Turing Machines" FOLDED="true" ID="ID_167931383" CREATED="1566553719180" MODIFIED="1566553719180" LINK="https://www.wolframalpha.com/examples/science-and-technology/computational-sciences/turing-machines/">
<node TEXT="Alan Turings Turing machines provide for a universal notion of computation. Wolfram|Alpha simulates analyzes and gives information about the rule space of many Turing machines. It also creates interactive visualizations including network visualizations of the evolution of Turing machines." ID="ID_207255050" CREATED="1566553719180" MODIFIED="1566553719180"/>
</node>
<node TEXT="Computers visualization and the nature of reasoning" FOLDED="true" ID="ID_1285255919" CREATED="1566553719180" MODIFIED="1566553719180" LINK="http://kryten.mm.rpi.edu/COURSES/LOGAIS02/bar.etch.reasoning.pdf">
<node TEXT="Turing machine that adds two numbers expressed in decimal notation. Figure 3: A Turing machine for adding in base 10. The ability to design a Turing machine by simply drawing its state dia-gram combined with the ability to run the machine and watch it go through its transitions is a powerful aid in the student&#xe2;&#x20ac;&#x2122;s understanding of the intu-" ID="ID_1452692204" CREATED="1566553719180" MODIFIED="1566553719180"/>
</node>
<node TEXT="Computability and Complexity Turing Machine Representation" FOLDED="true" ID="ID_817811529" CREATED="1566553719180" MODIFIED="1566553719180" LINK="http://www.doc.ic.ac.uk/~mrc/Computability%20%20Complexity/Lectures/C240Lec4.pdf">
<node TEXT="Computability and Complexity Lecture 4 Computability and Complexity Design a Turing Machine to implement the Tail function Q = {q 0 .. } F = { } &#xe2;&#x2c6;&#x2018; = {ab^}. a b a b ^ ^ ^ ^ ^ Method: &#xe2;&#x20ac;&#xa2; if current symbol = ^ then move left. (gives Halt  Fail where input word = &#xce;&#xb5;) else leave current symbol unchanged move right" ID="ID_1866684157" CREATED="1566553719180" MODIFIED="1566553719180"/>
</node>
<node TEXT="Professional Graphics Solutions and NVIDIA Turing GPU " FOLDED="true" ID="ID_1678031219" CREATED="1566553719180" MODIFIED="1566553719180" LINK="https://www.nvidia.com/en-us/design-visualization/technologies/turing-architecture/">
<node TEXT="Turing features new RT Cores to accelerate ray tracing and new Tensor Cores for AI inference. Together for the first time they make real-time ray tracing possible opening up amazing creative possibilities that until recently were assumed to be years away." ID="ID_1588843410" CREATED="1566553719180" MODIFIED="1566553719180"/>
</node>
<node TEXT="Quadro RTX 8000 Graphics Card - nvidia.com" FOLDED="true" ID="ID_712964389" CREATED="1566553719180" MODIFIED="1566553719180" LINK="https://www.nvidia.com/en-us/design-visualization/quadro/rtx-8000/">
<node TEXT="NVLink enables professional applications to easily scale memory and performance with multi-GPU configurations. Connect two Quadro RTX 8000s together with a Quadro RTX 8000 NVLink HB Bridge for up to 100 GB/s of bandwidth and a combined 96 GB of GDDR6 memory to tackle your largest rendering AI virtual reality or visualization workloads." ID="ID_1136023895" CREATED="1566553719180" MODIFIED="1566553719180"/>
</node>
<node TEXT="Alan Turings 100th Birthday - google.com" FOLDED="true" ID="ID_1685433973" CREATED="1566553719180" MODIFIED="1566553719180" LINK="https://www.google.com/doodles/alan-turings-100th-birthday">
<node TEXT="Our doodle for his 100th birthday shows a live action Turing Machine with twelve interactive programming puzzles (hint: go back and play it again after you solve the first six!).  extends far " ID="ID_1692003728" CREATED="1566553719180" MODIFIED="1566553719180"/>
</node>
<node TEXT="Visualization of Automata - asethome.org" FOLDED="true" ID="ID_969947642" CREATED="1566553719180" MODIFIED="1566553719180" LINK="http://www.asethome.org/automata/">
<node TEXT="Logically speaking the class of Turing Machines is the most powerful class of computing machines. Any problem that can be solved computationally can be solved by a Turing Machine. Thus computability means Turing computability. Dynamic visualization of Turing Machines can be seen following the links given below." ID="ID_1034600977" CREATED="1566553719180" MODIFIED="1566553719180"/>
</node>
</node>
<node TEXT="Design of Turing Machine Code#$D$#" FOLDED="true" ID="ID_1564527218" CREATED="1566553719180" MODIFIED="1566553719180">
<icon BUILTIN="stop-sign"/>
<node TEXT="Turing Machine (Example-1) - YouTube" FOLDED="true" ID="ID_906471235" CREATED="1566553719180" MODIFIED="1566553719180" LINK="https://www.youtube.com/watch?v=D9eF_B8URnw">
<node TEXT="TOC: Turing Machine (Example-1) Topics discussed: This lecture shows how to design a Turing Machine for the language 01*0 Contribute: http://www.nesoacademy." ID="ID_797667696" CREATED="1566553719180" MODIFIED="1566553719180"/>
</node>
<node TEXT="Turing machine - Wikipedia" FOLDED="true" ID="ID_809634146" CREATED="1566553719180" MODIFIED="1566553719180" LINK="https://en.wikipedia.org/wiki/Turing_machine">
<node TEXT="A Turing machine is a mathematical model of computation that defines an abstract machine which manipulates symbols on a strip of tape according to a table of rules. Despite the models simplicity given any computer algorithm a Turing machine capable of simulating that algorithms logic can be constructed.. The machine operates on an infinite memory tape divided into discrete cells." ID="ID_540440795" CREATED="1566553719181" MODIFIED="1566553719181"/>
</node>
<node TEXT="How to construct and write down a Turing machine for a " FOLDED="true" ID="ID_820884325" CREATED="1566553719181" MODIFIED="1566553719181" LINK="https://cs.stackexchange.com/questions/11542/how-to-construct-and-write-down-a-turing-machine-for-a-given-language">
<node TEXT="What all strategies to devise a program for a Turing machine - or for any other machine for that matter - boil down to is this: learn how to write programs for easy languages and then use these programs and rules of composition to figure out more complicated ones." ID="ID_377600960" CREATED="1566553719181" MODIFIED="1566553719181"/>
</node>
<node TEXT="Programming Turing Machines - Stanford University" FOLDED="true" ID="ID_957073948" CREATED="1566553719181" MODIFIED="1566553719181" LINK="https://web.stanford.edu/class/archive/cs/cs103/cs103.1132/lectures/19/Small19.pdf">
<node TEXT="Outline for Today A programming language for Turing machines. Design a simple programming language that &#xe2;&#x20ac;&#x153;compiles&#xe2;&#x20ac;&#xfffd; down to Turing machines. Keep extending our language to see just how powerful the Turing machine is." ID="ID_1655752462" CREATED="1566553719181" MODIFIED="1566553719181"/>
</node>
<node TEXT="Cracking the Uncrackable: How Did Alan Turing and His Team " FOLDED="true" ID="ID_79069465" CREATED="1566553719181" MODIFIED="1566553719181" LINK="https://www.scienceabc.com/innovation/cracking-the-uncrackable-how-did-alan-turing-and-his-team-crack-the-enigma-code.html">
<node TEXT="The machine was better than the Polish version of the Bombe machine but it also required a very very long time to decipher any code which was bad news for Britain and the other Allied nations. Turing had to come up with an idea that could allow the Bombe Machine to crack the code much faster than that." ID="ID_1482809695" CREATED="1566553719181" MODIFIED="1566553719181"/>
</node>
<node TEXT="Examples of Turing Machines - ics.uci.edu" FOLDED="true" ID="ID_1092674254" CREATED="1566553719181" MODIFIED="1566553719181" LINK="https://www.ics.uci.edu/~goodrich/teach/cs162/notes/turing2.pdf">
<node TEXT="Examples of Turing Machines &#xe2;&#x20ac;&#x201c; p.21/22. Marking tape symbols In stage two the machine places a mark above a symbol in this case. In the actual implementation the machine has two different symbols and in the tape alphabet Thus when machine places a mark above symbol it actually writes the marked symbol" ID="ID_611743908" CREATED="1566553719181" MODIFIED="1566553719181"/>
</node>
<node TEXT="Turing machine for a^nb^nc^n - Scanftree.com" FOLDED="true" ID="ID_16754239" CREATED="1566553719181" MODIFIED="1566553719181" LINK="http://scanftree.com/automata/turing-machine-for-a-to-power-n-b-to-power-n-c-to-power-n">
<node TEXT="State Transition Diagram We have designed state transition diagram for a n b n c n | n &#xe2;&#x2030;&#xa5; 1 as follows:. Following Steps: a. Mark a with X and move towards unmarked b b. Move towards unmarked b by passing all as" ID="ID_1834619057" CREATED="1566553719181" MODIFIED="1566553719181"/>
</node>
<node TEXT="Solutions to Homework 7 - Department of Computer Science" FOLDED="true" ID="ID_1075536918" CREATED="1566553719181" MODIFIED="1566553719181" LINK="https://www.classes.cs.uchicago.edu/archive/2015/winter/28000-1/sol7.pdf">
<node TEXT="Design a Turing machine that takes as input a number N and adds 1 to it in binary. To be precise the tape initially contains a $ followed by N in binary. The tape head is initially scanning the $ in state q0. Your TM should halt with N + 1 in binary on its tape scanning the leftmost symbol of N + 1 in state qf. You may destroy the $ 2" ID="ID_1223741370" CREATED="1566553719181" MODIFIED="1566553719181"/>
</node>
<node TEXT="Design a TM(Turing Machine)  L={a^nb^n | n=1}" FOLDED="true" ID="ID_1386042123" CREATED="1566553719181" MODIFIED="1566553719181" LINK="https://cs-09-506-toc.blogspot.com/2013/08/design-tmturing-machine-lanbn-n1.html">
<node TEXT="is a type of turing machine wherein the tape is not permitted to move off the portion of the tape containing the input. If the machine tries to move its head off either end of the inputthe head stays where it isin the same way that the head will not move off the left-hand end of an ordinary turing machines tape." ID="ID_520912158" CREATED="1566553719181" MODIFIED="1566553719181"/>
</node>
<node TEXT="How Alan Turing Cracked The Enigma Code - iwm.org.uk" FOLDED="true" ID="ID_727664031" CREATED="1566553719181" MODIFIED="1566553719181" LINK="https://www.iwm.org.uk/history/how-alan-turing-cracked-the-enigma-code">
<node TEXT="Alan Turing was a brilliant mathematician. Born in London in 1912 he studied at both Cambridge and Princeton universities. He was already working part-time for the British Government&#xe2;&#x20ac;&#x2122;s Code and Cypher School before the Second World War broke out. In 1939 Turing took up a full-time role at " ID="ID_1022508251" CREATED="1566553719181" MODIFIED="1566553719181"/>
</node>
<node TEXT="A Simulator of a Universal Turing Machine - CodeProject" FOLDED="true" ID="ID_1688548331" CREATED="1566553719181" MODIFIED="1566553719181" LINK="https://www.codeproject.com/Articles/1179819/A-Simulator-of-a-Universal-Turing-Machine">
<node TEXT="This article describes the implementation and testing of a simulator of a universal Turing machine. The code is a conversion into unmanaged C++ under Visual Studio 2010 of an old Borland C++ version that I implemented when I was teaching Automata Theory at Washington State University Department of Electrical Engineering and Computer Science " ID="ID_733664596" CREATED="1566553719181" MODIFIED="1566553719181"/>
</node>
<node TEXT="Turing machine examples - Wikipedia" FOLDED="true" ID="ID_782875589" CREATED="1566553719181" MODIFIED="1566553719181" LINK="https://en.wikipedia.org/wiki/Turing_machine_examples">
<node TEXT="The Turing machine would read different values than the intended values. A copy subroutine. This is a very important subroutine used in the multiply routine. The example Turing machine handles a string of 0s and 1s with 0 represented by the blank symbol. Its task is to double any series of 1s encountered on the tape by writing a 0 between them." ID="ID_201587086" CREATED="1566553719181" MODIFIED="1566553719181"/>
</node>
</node>
<node TEXT="Description of Turing Machine Interactive Visualisation#$D$#" FOLDED="true" ID="ID_513675814" CREATED="1566553719181" MODIFIED="1566553719181">
<icon BUILTIN="stop-sign"/>
<node TEXT="Turing machine visualization" FOLDED="true" ID="ID_1870376001" CREATED="1566553719181" MODIFIED="1566553719181" LINK="http://turingmachine.io/">
<node TEXT="A Turing machine is an abstract device to model computation as rote symbol manipulation.. Each machine has a finite number of states and a finite number of possible symbols. These are fixed before the machine starts and do not change as the machine runs." ID="ID_1464492111" CREATED="1566553719181" MODIFIED="1566553719181"/>
</node>
<node TEXT="Turing machine - Wikipedia" FOLDED="true" ID="ID_1345755858" CREATED="1566553719181" MODIFIED="1566553719181" LINK="https://en.wikipedia.org/wiki/Turing_machine">
<node TEXT="A Turing machine is a mathematical model of computation that defines an abstract machine which manipulates symbols on a strip of tape according to a table of rules. Despite the models simplicity given any computer algorithm a Turing machine capable of simulating that algorithms logic can be constructed." ID="ID_49557722" CREATED="1566553719182" MODIFIED="1566553719182"/>
</node>
<node TEXT="Online Turing Machine Simulator" FOLDED="true" ID="ID_1698271493" CREATED="1566553719182" MODIFIED="1566553719182" LINK="https://turingmachinesimulator.com/">
<node TEXT="Interactive Turing machine simulator. Use a simple language to create compile and run your Turing machines save and share your own Turing machines." ID="ID_1744605260" CREATED="1566553719182" MODIFIED="1566553719182"/>
</node>
<node TEXT="53. INSTANTANEOUS DESCRIPTION OF TURING MACHINE - YouTube" FOLDED="true" ID="ID_1651147501" CREATED="1566553719182" MODIFIED="1566553719182" LINK="https://www.youtube.com/watch?v=0w73FroW2Dw">
<node TEXT="INSTANTANEOUS DESCRIPTION OF TURING MACHINE. INSTANTANEOUS DESCRIPTION OF TURING MACHINE. Skip navigation Sign in. Search.  The interactive transcript could not be loaded." ID="ID_1729374659" CREATED="1566553719182" MODIFIED="1566553719182"/>
</node>
<node TEXT="Visualization of Turing Machines - asethome.org" FOLDED="true" ID="ID_56449291" CREATED="1566553719182" MODIFIED="1566553719182" LINK="http://www.asethome.org/mathfoundations/TMAppletAnBnAn.php">
<node TEXT="For a description of Turing Machines a text book such as Introduction to Computer Theory 2nd Edition by Daniel I. Cohen published by John Wiley  Sons can be consulted. For some preliminary interactions with Turing Machines visualization of some additional machines can be found at the end of this section." ID="ID_56889577" CREATED="1566553719182" MODIFIED="1566553719182"/>
</node>
<node TEXT="Visual Turing Machine download | SourceForge.net" FOLDED="true" ID="ID_1998920279" CREATED="1566553719182" MODIFIED="1566553719182" LINK="https://sourceforge.net/projects/visualturing/">
<node TEXT="Visual Turing Machine is a tool for visually designing Turing machines. This means no coding in abstract scripting languages but simple pointclick design. It uses the a..z symbol set plus the empty # symbol and also simulates an infinite tape." ID="ID_1353717128" CREATED="1566553719182" MODIFIED="1566553719182"/>
</node>
<node TEXT="visualcomplexity.com | Turing" FOLDED="true" ID="ID_1833770307" CREATED="1566553719182" MODIFIED="1566553719182" LINK="http://www.visualcomplexity.com/vc/project.cfm?id=205">
<node TEXT="Project Description: Turing is an interactive visualization of Alan Turings famous computational machine. It is the first in a series of projects which aim to make the process of programming more intuitive. A Turing machine is essentially a miniature model of a computer with a memory tape and a memory-reading head." ID="ID_433200754" CREATED="1566553719182" MODIFIED="1566553719182"/>
</node>
<node TEXT="Writing Turing Machine - YouTube" FOLDED="true" ID="ID_1443198180" CREATED="1566553719182" MODIFIED="1566553719182" LINK="https://www.youtube.com/watch?v=jreLiBfFRXo">
<node TEXT="Here You are learning how to write Turing Machine code for given problem. Here You are learning how to write Turing Machine code for given problem. Skip navigation Sign in. Search." ID="ID_1640767051" CREATED="1566553719182" MODIFIED="1566553719182"/>
</node>
<node TEXT="Computer Science and Engineering (CSCE)" FOLDED="true" ID="ID_677432523" CREATED="1566553719182" MODIFIED="1566553719182" LINK="https://catalog.unl.edu/graduate-professional/courses/csce/csce.pdf">
<node TEXT="Description: Fundamentals and implementations of data visualization techniques. Programming skills and practices in interactive visualization applications. Visualization foundations human perception for information processing and visualization techniques for different data types such as scalar-&#xef;&#xac;&#xfffd;eld data vector-&#xef;&#xac;&#xfffd;eld data geospatial" ID="ID_1893524213" CREATED="1566553719182" MODIFIED="1566553719182"/>
</node>
<node TEXT="Increasing visualization and interaction in the automata " FOLDED="true" ID="ID_644835440" CREATED="1566553719182" MODIFIED="1566553719182" LINK="https://www.researchgate.net/publication/221537777_Increasing_visualization_and_interaction_in_the_automata_theory_course">
<node TEXT="In this paper we describe how to increase the visualization and interaction in the automata theory course through the use of the tools JFLAP and Pate." ID="ID_1053059642" CREATED="1566553719182" MODIFIED="1566553719182"/>
</node>
<node TEXT="MSDS Portal - Rutgers University" FOLDED="true" ID="ID_439909338" CREATED="1566553719182" MODIFIED="1566553719182" LINK="https://msds-cs.rutgers.edu/msds/frontpage">
<node TEXT="Receive solid training in algorithms probability statistical learning computing systems data mining machine learning and visualization. Acquire a deep understanding of the nature of uncertainty modeling performance checking and decision making. Implement interactive tools for data analysis and sense making." ID="ID_754880166" CREATED="1566553719182" MODIFIED="1566553719182"/>
</node>
<node TEXT="Computability and Complexity Turing Machine Representation" FOLDED="true" ID="ID_1757584366" CREATED="1566553719182" MODIFIED="1566553719182" LINK="http://www.doc.ic.ac.uk/~mrc/Computability%20%20Complexity/Lectures/C240Lec4.pdf">
<node TEXT="Turing Machine Representation. Computability and Complexity Lecture 4  Computability and Complexity Design a Turing Machine to implement the Tail function Q = {q 0 q 1 q 2 q 3 q 4 q 5} F = {q 5  State diagrams permit visualisation of the TM and the structure of an algorithm. They correspond directly to the &#xce;&#xb4;-function" ID="ID_1033346515" CREATED="1566553719182" MODIFIED="1566553719182"/>
</node>
</node>
<node TEXT="Description of Turing Machine Code#$D$#" FOLDED="true" ID="ID_1489144888" CREATED="1566553719182" MODIFIED="1566553719182">
<icon BUILTIN="stop-sign"/>
<node TEXT="Turing machine - Wikipedia" FOLDED="true" ID="ID_932358649" CREATED="1566553719182" MODIFIED="1566553719182" LINK="https://en.wikipedia.org/wiki/Turing_machine">
<node TEXT="A Turing machine is a mathematical model of computation that defines an abstract machine which manipulates symbols on a strip of tape according to a table of rules. Despite the models simplicity given any computer algorithm a Turing machine capable of simulating that algorithms logic can be constructed." ID="ID_1275257669" CREATED="1566553719182" MODIFIED="1566553719182"/>
</node>
<node TEXT="A C# Turing Machine - CodeProject" FOLDED="true" ID="ID_80751272" CREATED="1566553719182" MODIFIED="1566553719182" LINK="https://www.codeproject.com/articles/409525/a-csharp-turing-machine">
<node TEXT="Figure 3: Turing Machine Description. For example consider the following instruction &#xe2;&#x20ac;&#x153;If the head reads symbols 1 in the current position P on the tape and the current state is A then write symbol 0 move HEAD left and go to state B&#xe2;&#x20ac;&#xfffd;." ID="ID_74886499" CREATED="1566553719182" MODIFIED="1566553719182"/>
</node>
<node TEXT="Turing Machines - Stanford University" FOLDED="true" ID="ID_136103007" CREATED="1566553719182" MODIFIED="1566553719182" LINK="https://web.stanford.edu/class/archive/cs/cs103/cs103.1134/lectures/19/Small19.pdf">
<node TEXT="Universal Machines and Programs Theorem: There is a Turing machine U TM called the universal Turing machine that when run on M w  where M is a Turing machine and w is a string simulates M running on w. As a high-level description: U TM = &#xe2;&#x20ac;&#x153;On input M w  where M is a TM and w &#xe2;&#x2c6;&#x2c6; &#xce;&#xa3;* Run M on w. If M accepts w U TM accepts M w . If M rejects w U" ID="ID_1864913673" CREATED="1566553719182" MODIFIED="1566553719182"/>
</node>
<node TEXT="What is the description of a Turing machine? - Computer " FOLDED="true" ID="ID_737222554" CREATED="1566553719182" MODIFIED="1566553719182" LINK="https://cs.stackexchange.com/questions/99081/what-is-the-description-of-a-turing-machine">
<node TEXT="Basically a Universal Turing Machine can take as initial input a description of another Turing Machine (T). From that description it can then consume the a transformation of a tape state and simulate everything the source Turing Machine does." ID="ID_984113049" CREATED="1566553719182" MODIFIED="1566553719182"/>
</node>
<node TEXT="Alan Turing - Wikipedia" FOLDED="true" ID="ID_46506834" CREATED="1566553719183" MODIFIED="1566553719183" LINK="https://en.wikipedia.org/wiki/Alan_Turing">
<node TEXT="Alan Mathison Turing OBE FRS (/ &#xcb;&#x2c6; tj &#xca;&#x160;&#xc9;&#x2122;r &#xc9;&#xaa; &#xc5;&#x2039; /; 23 June 1912 &#xe2;&#x20ac;&#x201c; 7 June 1954) was an English mathematician computer scientist logician cryptanalyst philosopher and theoretical biologist. Turing was highly influential in the development of theoretical computer science providing a formalisation of the concepts of algorithm and computation with the Turing machine which can be " ID="ID_1415392073" CREATED="1566553719183" MODIFIED="1566553719183"/>
</node>
<node TEXT="1 De nition of a Turing machine - cs.cornell.edu" FOLDED="true" ID="ID_142231181" CREATED="1566553719183" MODIFIED="1566553719183" LINK="http://www.cs.cornell.edu/courses/cs4820/2010sp/handouts/turingm.pdf">
<node TEXT="To de ne a universal Turing machine we must rst explain what it means to give a \description of one Turing machine as the input to another one. For example we must explain how a single Turing machine with bounded alphabet size can read the description of a Turing machine with a much larger alphabet. To do so we will make the following " ID="ID_1199130637" CREATED="1566553719183" MODIFIED="1566553719183"/>
</node>
<node TEXT="A Simulator of a Universal Turing Machine - CodeProject" FOLDED="true" ID="ID_1026646975" CREATED="1566553719183" MODIFIED="1566553719183" LINK="https://www.codeproject.com/Articles/1179819/A-Simulator-of-a-Universal-Turing-Machine">
<node TEXT="This article describes the implementation and testing of a simulator of a universal Turing machine. The code is a conversion into unmanaged C++ under Visual Studio 2010 of an old Borland C++ version that I implemented when I was teaching Automata Theory at Washington State University Department of Electrical Engineering and Computer Science " ID="ID_701793569" CREATED="1566553719183" MODIFIED="1566553719183"/>
</node>
<node TEXT="Turing Machine Implementation in C - Stack Overflow" FOLDED="true" ID="ID_44936616" CREATED="1566553719183" MODIFIED="1566553719183" LINK="https://stackoverflow.com/questions/9186367/turing-machine-implementation-in-c">
<node TEXT="Im studying Turing machines for my course in formal languages theory the professor recommended a run on the following algorithm to see in detail the logic behind of a TM but doesnt work when  heres the code:  Cannot understand input of a Turing Machine Implementation in C. 0. C Shell Single Pipe Implementation. Hot Network Questions" ID="ID_1002579554" CREATED="1566553719183" MODIFIED="1566553719183"/>
</node>
<node TEXT="Turing Machines - cobweb.cs.uga.edu" FOLDED="true" ID="ID_70799946" CREATED="1566553719183" MODIFIED="1566553719183" LINK="http://cobweb.cs.uga.edu/~potter/theory/4_Turing_Machines1.pdf">
<node TEXT="Turing Machines: Questions Examine the formal de nition of a Turing machine to answer the following questions and explain your reasoning. 1.Can a Turing machine ever write the blank symbol ton its tape? 2.Can the tape alphabet be the same as the input alphabet ? 3.Can a Turing machine&#xe2;&#x20ac;&#x2122;s head ever be in the same location in two successive steps?" ID="ID_939516979" CREATED="1566553719183" MODIFIED="1566553719183"/>
</node>
<node TEXT="Turing Machines - introcs.cs.princeton.edu" FOLDED="true" ID="ID_11023891" CREATED="1566553719183" MODIFIED="1566553719183" LINK="https://introcs.cs.princeton.edu/java/52turing/">
<node TEXT="5.2 Turing Machines. This section under major construction. Turing machine. The Turing machine is one of the most beautiful and intriguing intellectual discoveries of the 20th century. Turing machine is a simple and useful abstract model of computation (and digital computers) that is general enough to embody any computer program." ID="ID_308716333" CREATED="1566553719183" MODIFIED="1566553719183"/>
</node>
<node TEXT="What is a Turing machine? - University of Cambridge" FOLDED="true" ID="ID_1212986131" CREATED="1566553719183" MODIFIED="1566553719183" LINK="https://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/turing-machine/one.html">
<node TEXT="A Turing machine is a hypothetical machine thought of by the mathematician Alan Turing in 1936. Despite its simplicity the machine can simulate ANY computer algorithm no matter how complicated it is! Above is a very simple representation of a Turing machine. It consists of an infinitely-long tape " ID="ID_1829843547" CREATED="1566553719183" MODIFIED="1566553719183"/>
</node>
<node TEXT="Alan Turing | Biography Facts  Education | Britannica.com" FOLDED="true" ID="ID_646486559" CREATED="1566553719183" MODIFIED="1566553719183" LINK="https://www.britannica.com/biography/Alan-Turing">
<node TEXT="Bombe machine Detail of rotating (top) drums on a rebuilt Bombe machine a code-breaking machine originally developed by Alan Turing and others used during World War II; in the National Museum of Computing Bletchley Park Milton Keynes Buckinghamshire England. Ted Coles" ID="ID_714902833" CREATED="1566553719183" MODIFIED="1566553719183"/>
</node>
</node>
</node>
<node TEXT="Representation of Turing Machines" ID="ID_1763365866" CREATED="1566881027668" MODIFIED="1566881027668" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Representation of Turing Machines Interactive Visualisation#$D$#" FOLDED="true" ID="ID_339677532" CREATED="1566553719176" MODIFIED="1566553719176">
<icon BUILTIN="stop-sign"/>
<node TEXT="CSE 20133 - Flipped - 02 - Turing Machine Basics Binary " FOLDED="true" ID="ID_186774240" CREATED="1566553719176" MODIFIED="1566553719176" LINK="https://www.youtube.com/watch?v=uIUDqZ5YIkw">
<node TEXT="The history of the development of Turing machines a fundamental demonstration a basic finite state machine (details to be covered later) unsigned binary representation and binary addition." ID="ID_1822599459" CREATED="1566553719176" MODIFIED="1566553719176"/>
</node>
<node TEXT="Turing machine - Wikipedia" FOLDED="true" ID="ID_1470127617" CREATED="1566553719176" MODIFIED="1566553719176" LINK="https://en.wikipedia.org/wiki/Turing_machine">
<node TEXT="A Turing machine is a mathematical model of computation that defines an abstract machine which manipulates symbols on a strip of tape according to a table of rules. Despite the models simplicity given any computer algorithm a Turing machine capable of simulating that algorithms logic can be constructed." ID="ID_559580596" CREATED="1566553719176" MODIFIED="1566553719176"/>
</node>
<node TEXT="Turing Machines (Stanford Encyclopedia of Philosophy)" FOLDED="true" ID="ID_772082275" CREATED="1566553719176" MODIFIED="1566553719176" LINK="https://plato.stanford.edu/entries/turing-machine/">
<node TEXT="Where current definitions of Turing machines usually have only one type of symbols (usually just 0 and 1; it was proven by Shannon that any Turing machine can be reduced to a binary Turing machine (Shannon 1956)) Turing in his original definition of so-called computing machines used two kinds of symbols: the figures which consist entirely of " ID="ID_663604439" CREATED="1566553719176" MODIFIED="1566553719176"/>
</node>
<node TEXT="A visual introduction to machine learning" FOLDED="true" ID="ID_926276922" CREATED="1566553719176" MODIFIED="1566553719176" LINK="http://www.r2d3.us/visual-intro-to-machine-learning-part-1/">
<node TEXT="In machine learning computers apply statistical learning techniques to automatically identify patterns in data. These techniques can be used to make highly accurate predictions. Keep scrolling. Using a data set about homes we will create a machine learning model to distinguish homes in New York from homes in San Francisco." ID="ID_1037635284" CREATED="1566553719176" MODIFIED="1566553719176"/>
</node>
<node TEXT="Computers visualization and the nature of reasoning" FOLDED="true" ID="ID_995837430" CREATED="1566553719176" MODIFIED="1566553719176" LINK="http://kryten.mm.rpi.edu/COURSES/LOGAIS02/bar.etch.reasoning.pdf">
<node TEXT="Computers visualization and the nature of  The computer is bringing about a revolution in our understanding of inference representation and reasoning some of the most fundamental no-tions of logic. The revolution is far from complete but we think the direction  Turing machine a machine that acts as a fully programmable computer. This" ID="ID_291934064" CREATED="1566553719176" MODIFIED="1566553719176"/>
</node>
<node TEXT="Alan Turings 100th Birthday - google.com" FOLDED="true" ID="ID_1651258508" CREATED="1566553719176" MODIFIED="1566553719176" LINK="https://www.google.com/doodles/alan-turings-100th-birthday">
<node TEXT="Before computers existed he invented a type of theoretical machine now called a Turing Machine which formalized what it means to compute a number. Our doodle for his 100th birthday shows a live " ID="ID_1468368655" CREATED="1566553719176" MODIFIED="1566553719176"/>
</node>
<node TEXT="Concept - Turings Heart Machine - Google Sites" FOLDED="true" ID="ID_1280749912" CREATED="1566553719176" MODIFIED="1566553719176" LINK="https://sites.google.com/site/sensesiap/turing-s-hear-machine">
<node TEXT="Turing&#xe2;&#x20ac;&#x2122;s Heart Machine(THM) is a live coding music system which represents aesthetic process of Turing Machine and human being&#xe2;&#x20ac;&#x2122;s emotion in the network society. (Fig. 1) It aims to rediscover Korean traditional music sound Samulnori rap in terms of live coding. It performs rap and aesthetic visualization in terms of hybrid being." ID="ID_782415810" CREATED="1566553719176" MODIFIED="1566553719176"/>
</node>
<node TEXT="Turing Machine - Introduction (Part 1) - YouTube" FOLDED="true" ID="ID_616364007" CREATED="1566553719176" MODIFIED="1566553719176" LINK="https://www.youtube.com/watch?v=PvLaPKPzq2I">
<node TEXT="TOC: Introduction to Turing Machine Topics Discussed: 1. Brief recap of the FSM and PDA 2. Introduction to Turing Machine 3. Tape of Turing Machines 4. Opera" ID="ID_1099998717" CREATED="1566553719176" MODIFIED="1566553719176"/>
</node>
<node TEXT="Visualising interacting and experimenting with lattices " FOLDED="true" ID="ID_963146331" CREATED="1566553719176" MODIFIED="1566553719176" LINK="https://www.researchgate.net/publication/229380887_Visualising_interacting_and_experimenting_with_lattices_using_a_diagrammatic_representation">
<node TEXT="This chapter presents the K-lattice machine (KLM) a tool that allows users to visualise interact and experiment with K lattices using a diagrammatic representation." ID="ID_485088537" CREATED="1566553719176" MODIFIED="1566553719176"/>
</node>
<node TEXT="15 Data Visualizations That Will Blow Your Mind | Udacity" FOLDED="true" ID="ID_289393395" CREATED="1566553719177" MODIFIED="1566553719177" LINK="https://blog.udacity.com/2015/01/15-data-visualizations-will-blow-mind.html">
<node TEXT="If a picture is worth a thousand words a data visualization is worth at least a million. As inspiration for your own work with data check out these 15 data visualizations that will wow you. Taken together this roundup is an at-a-glance representation of the range of uses data analysis has from " ID="ID_931472531" CREATED="1566553719177" MODIFIED="1566553719177"/>
</node>
<node TEXT="A Java-based Tool for Reasoning About Models of " FOLDED="true" ID="ID_963606686" CREATED="1566553719177" MODIFIED="1566553719177" LINK="http://andrewd.ces.clemson.edu/research/vislab/docs/p105-robinson.pdf">
<node TEXT="A Java-based Tool for Reasoning About Models of Computation Through Simulating Finite Automata and Turing Machines Matthew B. Robinson Jason A.Hamshar WebScope Inc. Sterling Software  Interactive visualization tools for models of computation  The Turing machine environment uses a multiple window" ID="ID_253790865" CREATED="1566553719177" MODIFIED="1566553719177"/>
</node>
<node TEXT="Visual Turing Machine download | SourceForge.net" FOLDED="true" ID="ID_1024462504" CREATED="1566553719177" MODIFIED="1566553719177" LINK="https://sourceforge.net/projects/visualturing/">
<node TEXT="Visual Turing Machine is a tool for visually designing Turing machines. This means no coding in abstract scripting languages but simple pointclick design. It uses the a..z symbol set plus the empty # symbol and also simulates an infinite tape." ID="ID_1630776991" CREATED="1566553719177" MODIFIED="1566553719177"/>
</node>
</node>
<node TEXT="Representation of Turing Machines Code#$D$#" FOLDED="true" ID="ID_82776489" CREATED="1566553719177" MODIFIED="1566553719177">
<icon BUILTIN="stop-sign"/>
<node TEXT="Turing machine - Wikipedia" FOLDED="true" ID="ID_1626258949" CREATED="1566553719177" MODIFIED="1566553719177" LINK="https://en.wikipedia.org/wiki/Turing_machine">
<node TEXT="A Turing machine is a mathematical model of computation that defines an abstract machine which manipulates symbols on a strip of tape according to a table of rules. Despite the models simplicity given any computer algorithm a Turing machine capable of simulating that algorithms logic can be constructed." ID="ID_1080310666" CREATED="1566553719177" MODIFIED="1566553719177"/>
</node>
<node TEXT="Computability and Complexity Turing Machine Representation" FOLDED="true" ID="ID_1481226322" CREATED="1566553719177" MODIFIED="1566553719177" LINK="http://www.doc.ic.ac.uk/~mrc/Computability%20%20Complexity/Lectures/C240Lec4.pdf">
<node TEXT="Computability and Complexity Lecture 4 Computability and Complexity Summary We have seen&#xce;&#xb4;-function state diagram pseudo-code representations for Turing Machines and examples of these for odd/even Head unary addition Tail functions. State diagrams permit visualisation of the TM and the structure of an algorithm." ID="ID_623744560" CREATED="1566553719177" MODIFIED="1566553719177"/>
</node>
<node TEXT="Turing Machines - introcs.cs.princeton.edu" FOLDED="true" ID="ID_269952590" CREATED="1566553719177" MODIFIED="1566553719177" LINK="https://introcs.cs.princeton.edu/java/52turing/">
<node TEXT="5.2 Turing Machines. This section under major construction. Turing machine. The Turing machine is one of the most beautiful and intriguing intellectual discoveries of the 20th century. Turing machine is a simple and useful abstract model of computation (and digital computers) that is general enough to embody any computer program." ID="ID_1917728475" CREATED="1566553719177" MODIFIED="1566553719177"/>
</node>
<node TEXT="4.3. Representation of Turing machines - unideb.hu" FOLDED="true" ID="ID_686500304" CREATED="1566553719177" MODIFIED="1566553719177" LINK="https://gyires.inf.unideb.hu/GyBITT/26/ch04s03.html">
<node TEXT="Representation of Turing machines The specification of a Turing machine means to give a description of five tuple in the general definition. For the objects and it is not a great adventure but for the transition function requires a bit more efforts." ID="ID_80810770" CREATED="1566553719177" MODIFIED="1566553719177"/>
</node>
<node TEXT="CSE 20133 - Flipped - 02 - Turing Machine Basics Binary " FOLDED="true" ID="ID_735909238" CREATED="1566553719177" MODIFIED="1566553719177" LINK="https://www.youtube.com/watch?v=uIUDqZ5YIkw">
<node TEXT="The history of the development of Turing machines a fundamental demonstration a basic finite state machine (details to be covered later) unsigned binary representation and binary addition." ID="ID_557153616" CREATED="1566553719177" MODIFIED="1566553719177"/>
</node>
<node TEXT="REPRESENTATION OF TURING MACHINE||TOC ||BTECH  - YouTube" FOLDED="true" ID="ID_34902796" CREATED="1566553719177" MODIFIED="1566553719177" LINK="https://www.youtube.com/watch?v=G_xmh6P56Pg">
<node TEXT="Turing Machine for Addition and Subtraction of two Number in &#xe0;&#xa4;&#xb9;&#xe0;&#xa4;&#xbf;&#xe0;&#xa4;&#x201a;&#xe0;&#xa4;&#xa6;&#xe0;&#xa5;&#x20ac;. TM for mathematical problem - Duration: 13:47. hindi tutorials darshan 3287 views" ID="ID_447345455" CREATED="1566553719177" MODIFIED="1566553719177"/>
</node>
<node TEXT="Turing Machines | Nuts  Volts Magazine" FOLDED="true" ID="ID_1144181252" CREATED="1566553719177" MODIFIED="1566553719177" LINK="https://www.nutsvolts.com/magazine/article/turing_machines">
<node TEXT="Now we need to run the Turing Machine to see if it works. In most classical Turing Machine literature a move from one transition to another is indicated by ( . This symbol denotes a running Turing Machine. Figure 5 shows both a graphical and classical representation of our Turing Machine as it runs." ID="ID_965067767" CREATED="1566553719177" MODIFIED="1566553719177"/>
</node>
<node TEXT="Turing Machines - Stanford University" FOLDED="true" ID="ID_628391039" CREATED="1566553719177" MODIFIED="1566553719177" LINK="https://web.stanford.edu/class/archive/cs/cs103/cs103.1134/lectures/19/Small19.pdf">
<node TEXT="Encoding Turing Machines Critically important fact: Any Turing machine can be represented as a string. One way to do this: encode each state and its transitions in a list. Stronger claim: Any TM M can be represented as a string in Ms alphabet. Analogy: program source code. All data fed into a program is encoded using the binary alphabet &#xce;&#xa3; = {0 1}." ID="ID_1734880810" CREATED="1566553719177" MODIFIED="1566553719177"/>
</node>
<node TEXT="Turing Machine Implementation in C - Stack Overflow" FOLDED="true" ID="ID_1414403270" CREATED="1566553719177" MODIFIED="1566553719177" LINK="https://stackoverflow.com/questions/9186367/turing-machine-implementation-in-c">
<node TEXT="Im studying Turing machines for my course in formal languages theory the professor recommended a run on the following algorithm to see in detail the logic behind of a TM but doesnt work when  heres the code:  Cannot understand input of a Turing Machine Implementation in C. 0. C Shell Single Pipe Implementation. Hot Network Questions" ID="ID_1746027580" CREATED="1566553719177" MODIFIED="1566553719177"/>
</node>
<node TEXT="Turing Machines (Stanford Encyclopedia of Philosophy)" FOLDED="true" ID="ID_814408533" CREATED="1566553719177" MODIFIED="1566553719177" LINK="https://plato.stanford.edu/entries/turing-machine/">
<node TEXT="Where current definitions of Turing machines usually have only one type of symbols (usually just 0 and 1; it was proven by Shannon that any Turing machine can be reduced to a binary Turing machine (Shannon 1956)) Turing in his original definition of so-called computing machines used two kinds of symbols: the figures which consist entirely of " ID="ID_1048089115" CREATED="1566553719178" MODIFIED="1566553719178"/>
</node>
<node TEXT="Programming Fundamentals Test 2 - MC Flashcards | Quizlet" FOLDED="true" ID="ID_202053408" CREATED="1566553719178" MODIFIED="1566553719178" LINK="https://quizlet.com/131274320/programming-fundamentals-test-2-mc-flash-cards/">
<node TEXT="Programming Fundamentals Test 2 - MC study guide by vanessamonge12 includes 100 questions covering vocabulary terms and more. Quizlet flashcards activities and games help you improve your grades." ID="ID_404402143" CREATED="1566553719178" MODIFIED="1566553719178"/>
</node>
<node TEXT="AlanTuring.net What is a Turing machine?" FOLDED="true" ID="ID_888089457" CREATED="1566553719178" MODIFIED="1566553719178" LINK="http://www.alanturing.net/turing_archive/pages/reference%20articles/what%20is%20a%20turing%20machine.html">
<node TEXT="An example of a non-terminating Turing machine program is a program that calculates sequentially each digit of the decimal representation of pi (say by using one of the standard power series expressions for pi). A Turing machine running this program will spend all eternity writing out the decimal representation of pi digit by digit 3.14159 . . ." ID="ID_1310934980" CREATED="1566553719178" MODIFIED="1566553719178"/>
</node>
</node>
</node>
<node TEXT="Language Acceptability by Turing Machines" ID="ID_338943955" CREATED="1566881027669" MODIFIED="1566881027669" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Language Acceptability by Turing Machines Interactive Visualisation#$D$#" FOLDED="true" ID="ID_416394818" CREATED="1566553719178" MODIFIED="1566553719178">
<icon BUILTIN="stop-sign"/>
<node TEXT="Turing machine - Wikipedia" FOLDED="true" ID="ID_1016564152" CREATED="1566553719178" MODIFIED="1566553719178" LINK="https://en.wikipedia.org/wiki/Turing_machine">
<node TEXT="A Turing machine is a mathematical model of computation that defines an abstract machine which manipulates symbols on a strip of tape according to a table of rules. Despite the models simplicity given any computer algorithm a Turing machine capable of simulating that algorithms logic can be constructed.. The machine operates on an infinite memory tape divided into discrete cells." ID="ID_1712817568" CREATED="1566553719178" MODIFIED="1566553719178"/>
</node>
<node TEXT="Decidability and Undecidability - YouTube" FOLDED="true" ID="ID_1162614871" CREATED="1566553719178" MODIFIED="1566553719178" LINK="https://www.youtube.com/watch?v=JfX7VK7ocRU">
<node TEXT="The interactive transcript could not be loaded.  45-Subtraction problem of Turing Machine - Duration: 13:26. deeba kannan 89260  Part 4.4 How to identify Regular Language " ID="ID_318999833" CREATED="1566553719178" MODIFIED="1566553719178"/>
</node>
<node TEXT="Visual Turing Machine download | SourceForge.net" FOLDED="true" ID="ID_317980218" CREATED="1566553719178" MODIFIED="1566553719178" LINK="https://sourceforge.net/projects/visualturing/">
<node TEXT="Visual Turing Machine is a tool for visually designing Turing machines. This means no coding in abstract scripting languages but simple pointclick design. It uses the a..z symbol set plus the empty # symbol and also simulates an infinite tape." ID="ID_593710626" CREATED="1566553719178" MODIFIED="1566553719178"/>
</node>
<node TEXT="Animazione macchina di Turing - YouTube" FOLDED="true" ID="ID_384652532" CREATED="1566553719178" MODIFIED="1566553719178" LINK="https://www.youtube.com/watch?v=x4Bw6o5RjV8">
<node TEXT="2 Masters Hustling BUT Dont Know Others A Master!!! 1st Ever Double Master Hustle!! - Duration: 14:52. Coffee Chess 3140191 views" ID="ID_130775836" CREATED="1566553719178" MODIFIED="1566553719178"/>
</node>
<node TEXT="Question bank toafl - SlideShare" FOLDED="true" ID="ID_1730589724" CREATED="1566553719178" MODIFIED="1566553719178" LINK="https://www.slideshare.net/Krishna972076/question-bank-toafl">
<node TEXT="4. Define Turing Machine and Universal Turing Machine using suitable diagrams. Explain the language acceptability by turing machine in short. What are the steps to construct a type-0 grammar generating the set accepted by a given Turing Machine. 5. Give the complete hierarchy of Grammar with their recognizers as well as the form of production " ID="ID_622561734" CREATED="1566553719178" MODIFIED="1566553719178"/>
</node>
<node TEXT="MG University (MGU) Computer Science Engineering (cse) s7 " FOLDED="true" ID="ID_1984455125" CREATED="1566553719178" MODIFIED="1566553719178" LINK="https://samplepaperz.blogspot.com/2013/01/s7-cse-syllabus2003-admn.html">
<node TEXT="Pushdown Automata &#xe2;&#x20ac;&#x201c; Formal definition &#xe2;&#x20ac;&#x201c; Language acceptability by PDA &#xe2;&#x20ac;&#x201c; Deterministic and nondeterministic PDA &#xe2;&#x20ac;&#x201c; Context free grammar - Applications of PDA &#xe2;&#x20ac;&#x201c; Parsing. Module 4 Turing Machines &#xe2;&#x20ac;&#x201c; Formal definition &#xe2;&#x20ac;&#x201c; Language acceptability &#xe2;&#x20ac;&#x201c; Universal Turing Machines &#xe2;&#x20ac;&#x201c; Halting Problem of Turing Machines &#xe2;&#x20ac;&#x201c; Church&#xe2;&#x20ac;&#x2122;s Thesis -" ID="ID_1216242468" CREATED="1566553719178" MODIFIED="1566553719178"/>
</node>
<node TEXT="Online Turing Machine Simulator" FOLDED="true" ID="ID_81507961" CREATED="1566553719178" MODIFIED="1566553719178" LINK="https://turingmachinesimulator.com/">
<node TEXT="Interactive Turing machine simulator. Use a simple language to create compile and run your Turing machines save and share your own Turing machines." ID="ID_1558256027" CREATED="1566553719178" MODIFIED="1566553719178"/>
</node>
<node TEXT="Turing machine simulator - Anthony Morphett" FOLDED="true" ID="ID_1979211875" CREATED="1566553719178" MODIFIED="1566553719178" LINK="http://morphett.info/turing/turing.html">
<node TEXT="This is a Turing machine simulator. To use it: Load one of the example programs or write your own in the Turing machine program area.See below for syntax.; Enter something in the Input area - this will be written on the tape initially as input to the machine." ID="ID_82662833" CREATED="1566553719178" MODIFIED="1566553719178"/>
</node>
<node TEXT="Get Theory of Computation - Microsoft Store" FOLDED="true" ID="ID_743314414" CREATED="1566553719178" MODIFIED="1566553719178" LINK="https://www.microsoft.com/en-us/p/theory-of-computation/9wzdncrd2q7p">
<node TEXT="Download this app from Microsoft Store for Windows 10 Windows 8.1 Windows 10 Mobile Windows Phone 8.1. See screenshots read the latest customer reviews and compare ratings for Theory of Computation." ID="ID_815899328" CREATED="1566553719178" MODIFIED="1566553719178"/>
</node>
<node TEXT="Peter Wegners Home Page" FOLDED="true" ID="ID_1072144195" CREATED="1566553719178" MODIFIED="1566553719178" LINK="http://cs.brown.edu/~pw/">
<node TEXT="I am the former editor-in-chief of Computing Surveys and of The Brown Faculty Bulletin.. Some of my current research interests are interaction compound and active document systems (such as OpenDoc JavaBeans and ActiveX) object oriented programming and programming languages." ID="ID_1262833678" CREATED="1566553719178" MODIFIED="1566553719178"/>
</node>
<node TEXT="Computational complexity theory - Wikipedia" FOLDED="true" ID="ID_1272067348" CREATED="1566553719178" MODIFIED="1566553719178" LINK="https://en.wikipedia.org/wiki/Intractably">
<node TEXT="A deterministic Turing machine is the most basic Turing machine which uses a fixed set of rules to determine its future actions. A probabilistic Turing machine is a deterministic Turing machine with an extra supply of random bits. The ability to make probabilistic decisions often helps algorithms solve problems more efficiently." ID="ID_1972138790" CREATED="1566553719179" MODIFIED="1566553719179"/>
</node>
<node TEXT="Introduction to Computing" FOLDED="true" ID="ID_584900977" CREATED="1566553719179" MODIFIED="1566553719179" LINK="https://computingbook.org/FullText.pdf">
<node TEXT="Introduction to Computing E xplorations in Language Logic and Machines David Evans University of Virginia" ID="ID_1714470364" CREATED="1566553719179" MODIFIED="1566553719179"/>
</node>
</node>
<node TEXT="Language Acceptability by Turing Machines Code#$D$#" FOLDED="true" ID="ID_397755202" CREATED="1566553719179" MODIFIED="1566553719179">
<icon BUILTIN="stop-sign"/>
<node TEXT="Universal Turing machine - Rosetta Code" FOLDED="true" ID="ID_906595729" CREATED="1566553719179" MODIFIED="1566553719179" LINK="https://rosettacode.org/wiki/Universal_Turing_machine">
<node TEXT="One of the foundational mathematical constructs behind computer science is the universal Turing Machine.. Indeed one way to definitively prove that a language is turing-complete is to implement a universal Turing machine in it.. Task. Simulate such a machine capable of taking the definition of any other Turing machine and executing it." ID="ID_131152866" CREATED="1566553719179" MODIFIED="1566553719179"/>
</node>
<node TEXT="Accepted Language and Decided Language - tutorialspoint.com" FOLDED="true" ID="ID_1763271047" CREATED="1566553719179" MODIFIED="1566553719179" LINK="https://www.tutorialspoint.com/automata_theory/accepted_and_decided_language">
<node TEXT="A language is recursively enumerable (generated by Type-0 grammar) if it is accepted by a Turing machine. A TM decides a language if it accepts it and enters into a rejecting state for any input not in the language. A language is recursive if it is decided by a Turing machine. There may be some cases where a TM does not stop." ID="ID_1644601552" CREATED="1566553719179" MODIFIED="1566553719179"/>
</node>
<node TEXT="Chapter 5 Turing Machines - Montefiore Institute" FOLDED="true" ID="ID_441491370" CREATED="1566553719179" MODIFIED="1566553719179" LINK="http://www.montefiore.ulg.ac.be/~pw/cours/psfiles/calc-chap5.pdf">
<node TEXT="The Turing-Church thesis The languages that can be recognized by an e&#xef;&#xac;&#x20ac;ective procedure are those that are decided by a Turing machine. Justi&#xef;&#xac;&#xfffd;cation. 1. If a language is decided by a Turing machine it is computable: clear. 2. If a language is computable it is decided by a Turing machine: &#xe2;&#x20ac;&#xa2; Extensions of Turing machines and other machines." ID="ID_1807118801" CREATED="1566553719179" MODIFIED="1566553719179"/>
</node>
<node TEXT="Turing (programming language) - Wikipedia" FOLDED="true" ID="ID_519764093" CREATED="1566553719179" MODIFIED="1566553719179" LINK="https://en.wikipedia.org/wiki/Turing_(programming_language)">
<node TEXT="Turing is a Pascal-like programming language developed in 1982 by Ric Holt and James Cordy then of University of Toronto in Toronto Ontario Canada. Turing is a descendant of Euclid Pascal and SP/k that features a clean syntax and precise machine-independent semantics. Turing 4.1.0 is the latest stable version of Turing." ID="ID_579251123" CREATED="1566553719179" MODIFIED="1566553719179"/>
</node>
<node TEXT="Turing completeness - Wikipedia" FOLDED="true" ID="ID_768342424" CREATED="1566553719179" MODIFIED="1566553719179" LINK="https://en.wikipedia.org/wiki/Turing_completeness">
<node TEXT="In computability theory a system of data-manipulation rules (such as a computers instruction set a programming language or a cellular automaton) is said to be Turing complete or computationally universal if it can be used to simulate any Turing machine.This means that this system is able to recognize or decide other data-manipulation rule sets. Turing completeness is used as a way to " ID="ID_835248090" CREATED="1566553719179" MODIFIED="1566553719179"/>
</node>
<node TEXT="Turing Machine CS154 - Stanford CS Theory" FOLDED="true" ID="ID_1868177757" CREATED="1566553719179" MODIFIED="1566553719179" LINK="http://theory.stanford.edu/~trevisan/cs154-12/turing-machines-1.pdf">
<node TEXT="5 Universality of Turing Machines Theorem: There is a universal Turing machine U that can take as input -the code of an arbitrary TM M-an input string w such that U(M w) accepts iff M(w) accepts." ID="ID_1259332248" CREATED="1566553719179" MODIFIED="1566553719179"/>
</node>
<node TEXT="Turing Machine - SlideShare" FOLDED="true" ID="ID_1390679637" CREATED="1566553719179" MODIFIED="1566553719179" LINK="https://www.slideshare.net/rajendranjrf/turing-machine-57171042">
<node TEXT="Dept. of Computer Science  IT FUUAST Theory of Computation 8 Turing MachineTuring Machine A Turing Machine M that accepts the language { 0n 1n | n &#xe2;&#x2030;&#xa5;0 } 9. Dept. of Computer Science  IT FUUAST Theory of Computation 9 Turing MachineTuring Machine Moves for input 0011: Moves for input 0010: 10." ID="ID_1176056895" CREATED="1566553719179" MODIFIED="1566553719179"/>
</node>
<node TEXT="computability - Turing machine and language decidability " FOLDED="true" ID="ID_550283938" CREATED="1566553719179" MODIFIED="1566553719179" LINK="https://cs.stackexchange.com/questions/2218/turing-machine-and-language-decidability">
<node TEXT="The document I am reading is here: Turing Machines. Before getting into the question here is the notation used on the picture: Here $\Delta$ denotes the blank and R L and S denote move the head right left and do not move it respectively. A transition diagram can also be drawn for a Turing machine." ID="ID_1694131096" CREATED="1566553719179" MODIFIED="1566553719179"/>
</node>
<node TEXT="Decidability - The Stanford University InfoLab" FOLDED="true" ID="ID_969112941" CREATED="1566553719179" MODIFIED="1566553719179" LINK="http://infolab.stanford.edu/~ullman/ialc/spr10/slides/tm3.pdf">
<node TEXT="The Universal Language An example of a recursively enumerable but not recursive language is the language L u of a universal Turing machine. That is the UTM takes as input the code for some TM M and some binary string w and accepts if and only if M accepts w." ID="ID_678265070" CREATED="1566553719179" MODIFIED="1566553719179"/>
</node>
<node TEXT="What is the difference between acceptabilitycomputability " FOLDED="true" ID="ID_876258265" CREATED="1566553719179" MODIFIED="1566553719179" LINK="https://stackoverflow.com/questions/26718494/what-is-the-difference-between-acceptability-computability-decidability-and-reco">
<node TEXT="The set of recursive languages is a subset of recursively enumerable languages therefore every recursive language is also recursively enumerable. A function f: N &#xe2;&#x2020;&#x2019; N is computable if there exists a Turing machine that gets a number n in binary as an input and outputs f(n). The output is what is written on the tape after the computation." ID="ID_1589136328" CREATED="1566553719179" MODIFIED="1566553719179"/>
</node>
<node TEXT="Decidability and Undecidability - YouTube" FOLDED="true" ID="ID_205756717" CREATED="1566553719179" MODIFIED="1566553719179" LINK="https://www.youtube.com/watch?v=JfX7VK7ocRU">
<node TEXT="TOC: Decidability and Undecidability Topics discussed: 1) Recursive Languages 2) Recursively Enumerable Languages 3) Decidable Languages 4) Partially Decidable Languages 5) Undecidable Languages " ID="ID_1521977633" CREATED="1566553719179" MODIFIED="1566553719179"/>
</node>
<node TEXT="c - Simple Turing machine simulator - Code Review Stack " FOLDED="true" ID="ID_621736098" CREATED="1566553719180" MODIFIED="1566553719180" LINK="https://codereview.stackexchange.com/questions/19814/simple-turing-machine-simulator">
<node TEXT="Ergo: I wanted to write a basic one tape Turing machine simulator. It works as far as I know. Its not brilliant and the Turing machine is hard coded in this early version but it is functional. Id really like some review on the code." ID="ID_1377805341" CREATED="1566553719180" MODIFIED="1566553719180"/>
</node>
</node>
</node>
<node TEXT="Design of TM" ID="ID_1948642146" CREATED="1566881027671" MODIFIED="1566881027671" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="Description of TM" ID="ID_1247018091" CREATED="1566881027671" MODIFIED="1566881027671" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="Techniques for TM Construction" ID="ID_278503899" CREATED="1566881027671" MODIFIED="1566881027671" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Techniques for Turing Machine Construction Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1191428304" CREATED="1566553719183" MODIFIED="1566553719183">
<icon BUILTIN="stop-sign"/>
<node TEXT="4.3 techniques for turing machines construction" FOLDED="true" ID="ID_1722040863" CREATED="1566553719183" MODIFIED="1566553719183" LINK="https://www.slideshare.net/SampathKumarS11/43-techniques-for-turing-machines-construction">
<node TEXT="4.3 techniques for turing machines construction 1. Techniques for Turing Machines Construction -Sampath Kumar S AP/CSE SECE 2. Techniques for Turing Machines Construction Storage in finite Control Multi Tracks Checking off Symbols Subroutine 21 November 2017 Sampath Kumar S AP/CSE SECE 2 3." ID="ID_1276797187" CREATED="1566553719183" MODIFIED="1566553719183"/>
</node>
<node TEXT="Computer Science | University of Redlands" FOLDED="true" ID="ID_1177128087" CREATED="1566553719183" MODIFIED="1566553719183" LINK="https://www.redlands.edu/study/registrars-office/university-catalogs/current-catalog/college-of-arts-and-sciences/programs-of-study/computer-science/">
<node TEXT="Students of computer science are introduced to the need for and construction of mathematical proofs. The concepts notations and techniques of the theories of automata formal languages and Turing machines are studied to understand the capabilities and limitations of computers. Prerequisites: CS 111 and MATH 121." ID="ID_1596849829" CREATED="1566553719183" MODIFIED="1566553719183"/>
</node>
<node TEXT="Turing Machine Programming Techniques (Part-1) - YouTube" FOLDED="true" ID="ID_1507289544" CREATED="1566553719183" MODIFIED="1566553719183" LINK="https://www.youtube.com/watch?v=BKhQJP4sa_8">
<node TEXT="TOC: Turing Machine Programming Techniques (Part-1) Topics Discussed: 1. Turing Machine Programming Techniques 2. How to recognize the left end of the tape of a Turing Machine" ID="ID_1234688115" CREATED="1566553719183" MODIFIED="1566553719183"/>
</node>
<node TEXT="Turing machine - Wikipedia" FOLDED="true" ID="ID_1827453499" CREATED="1566553719183" MODIFIED="1566553719183" LINK="https://en.wikipedia.org/wiki/Universal_computation">
<node TEXT="An oracle machine or o-machine is a Turing a-machine that pauses its computation at state o while to complete its calculation it awaits the decision of the oracle&#xe2;&#x20ac;&#x201d;an unspecified entity apart from saying that it cannot be a machine (Turing (1939) The Undecidable p. 166&#xe2;&#x20ac;&#x201c;168). Universal Turing machines" ID="ID_487915201" CREATED="1566553719183" MODIFIED="1566553719183"/>
</node>
<node TEXT="A Visual and Interactive Automata Theory Course with JFLAP 4" FOLDED="true" ID="ID_1729416879" CREATED="1566553719183" MODIFIED="1566553719183" LINK="https://users.cs.duke.edu/~rodger/jflappapers/Rodger2004.pdf">
<node TEXT="course from a textual presentation to a more visual and interactive approach. Many of these tools focus on one particular concept such as nite automata[9 10] or Tur-ing Machines[1]. One tool[11] allows experimentation with several machines with a focus on Turing machines. A tab-ular approach [4] covers many topics but has no graphical " ID="ID_125368915" CREATED="1566553719183" MODIFIED="1566553719183"/>
</node>
<node TEXT="Examples of Turing Machines - ics.uci.edu" FOLDED="true" ID="ID_1663471475" CREATED="1566553719183" MODIFIED="1566553719183" LINK="https://www.ics.uci.edu/~goodrich/teach/cs162/notes/turing2.pdf">
<node TEXT="Examples of Turing Machines &#xe2;&#x20ac;&#x201c; p.21/22. Marking tape symbols In stage two the machine places a mark above a symbol in this case. In the actual implementation the machine has two different symbols and in the tape alphabet Thus when machine places a mark above symbol it actually writes the marked symbol" ID="ID_132313796" CREATED="1566553719183" MODIFIED="1566553719183"/>
</node>
<node TEXT="APPENDIX: A CONSTRUCTION FOR THE INVERSE OF A TURING MACHINE" FOLDED="true" ID="ID_1567068446" CREATED="1566553719183" MODIFIED="1566553719183" LINK="https://link.springer.com/content/pdf/bbm%3A978-3-0348-5753-6%2F1.pdf">
<node TEXT="McCarthy [ 1956] has investigated enumerative techniques for the inversion of the partial function defined by a Turing machine. In this paper a simple method for the direct construction of M given M is presented." ID="ID_740554235" CREATED="1566553719184" MODIFIED="1566553719184"/>
</node>
<node TEXT="Turing Machines (Stanford Encyclopedia of Philosophy)" FOLDED="true" ID="ID_876359370" CREATED="1566553719184" MODIFIED="1566553719184" LINK="http://www.cs.princeton.edu/~chazelle/courses/BIB/TuringUniversal.htm">
<node TEXT="Turing machines first described by Alan Turing in (Turing 1937) are simple abstract computational devices intended to help investigate the extent and limitations of what can be computed. Turing writing before the invention of the modern digital computer was interested in the question of what it means to be computable." ID="ID_1696644960" CREATED="1566553719184" MODIFIED="1566553719184"/>
</node>
<node TEXT="Turing Machines (Stanford Encyclopedia of Philosophy)" FOLDED="true" ID="ID_1054103637" CREATED="1566553719184" MODIFIED="1566553719184" LINK="https://plato.stanford.edu/entries/turing-machine/">
<node TEXT="Where current definitions of Turing machines usually have only one type of symbols (usually just 0 and 1; it was proven by Shannon that any Turing machine can be reduced to a binary Turing machine (Shannon 1956)) Turing in his original definition of so-called computing machines used two kinds of symbols: the figures which consist entirely of " ID="ID_849414223" CREATED="1566553719184" MODIFIED="1566553719184"/>
</node>
<node TEXT="A Java-based Tool for Reasoning About Models of " FOLDED="true" ID="ID_797134431" CREATED="1566553719184" MODIFIED="1566553719184" LINK="http://andrewd.ces.clemson.edu/research/vislab/docs/p105-robinson.pdf">
<node TEXT="A Java-based Tool for Reasoning About Models of Computation Through Simulating Finite Automata and Turing Machines Matthew B. Robinson Jason A.Hamshar WebScope Inc. Sterling Software 3977 E. Bayshore Rd. Beeches Technical Suite 200 Campus Rt. 26N Palo Alto CA 94303 Rome NY 13440 650.965.2500 315.336.0500" ID="ID_1347915924" CREATED="1566553719184" MODIFIED="1566553719184"/>
</node>
<node TEXT="(PDF) Turing Machines Transition Systems and Interaction" FOLDED="true" ID="ID_1262328733" CREATED="1566553719184" MODIFIED="1566553719184" LINK="https://www.researchgate.net/publication/222298680_Turing_Machines_Transition_Systems_and_Interaction">
<node TEXT="PDF | This paper presents persistent Turing machines (PTMs) a new way of interpreting Turing-machine computation based on dynamic stream semantics. A PTM is a Turing machine that performs an " ID="ID_755629446" CREATED="1566553719184" MODIFIED="1566553719184"/>
</node>
</node>
<node TEXT="Techniques for Turing Machine Construction Code#$D$#" FOLDED="true" ID="ID_1159175855" CREATED="1566553719184" MODIFIED="1566553719184">
<icon BUILTIN="stop-sign"/>
<node TEXT="Programming Turing Machines - Stanford University" FOLDED="true" ID="ID_367427423" CREATED="1566553719184" MODIFIED="1566553719184" LINK="https://web.stanford.edu/class/archive/cs/cs103/cs103.1132/lectures/19/Small19.pdf">
<node TEXT="From WB to Turing Machines We now need a way to convert a WB program into a Turing machine. Construction sketch: Create a state in the TM for each line of the WB program. Introduce extra &#xe2;&#x20ac;&#x153;helper&#xe2;&#x20ac;&#xfffd; states to implement some of the trickier instructions. Connect the states by transitions that simulate the WB program." ID="ID_1661074354" CREATED="1566553719184" MODIFIED="1566553719184"/>
</node>
<node TEXT="TURING MACHINE AS ACCEPTOR  TECHNIQUES FOR TM " FOLDED="true" ID="ID_534250159" CREATED="1566553719184" MODIFIED="1566553719184" LINK="https://freevideolectures.com/course/3045/theory-of-computation-i/28">
<node TEXT="TURING MACHINE AS ACCEPTOR  TECHNIQUES FOR TM CONSTRUCTION tutorial of Theory of Computation I course by Prof Kamala Krithivasan of IIT Madras.  After we realize TMs can work with (codes of) TMs as inputs we obtain a universal TM. We then obtain the separation of the classes r.e. and recursive.  Lecture 28: TURING MACHINE AS ACCEPTOR " ID="ID_1906878612" CREATED="1566553719184" MODIFIED="1566553719184"/>
</node>
<node TEXT="Universal Turing machine - Wikipedia" FOLDED="true" ID="ID_384884866" CREATED="1566553719184" MODIFIED="1566553719184" LINK="https://en.wikipedia.org/wiki/Universal_Turing_machine">
<node TEXT="In computer science a universal Turing machine (UTM) is a Turing machine that can simulate an arbitrary Turing machine on arbitrary input. The universal machine essentially achieves this by reading both the description of the machine to be simulated as well as the input thereof from its own tape." ID="ID_1075313447" CREATED="1566553719184" MODIFIED="1566553719184"/>
</node>
<node TEXT="How to construct and write down a Turing machine for a " FOLDED="true" ID="ID_1397335958" CREATED="1566553719184" MODIFIED="1566553719184" LINK="https://cs.stackexchange.com/questions/11542/how-to-construct-and-write-down-a-turing-machine-for-a-given-language">
<node TEXT="What all strategies to devise a program for a Turing machine - or for any other machine for that matter - boil down to is this: learn how to write programs for easy languages and then use these programs and rules of composition to figure out more complicated ones." ID="ID_1521727522" CREATED="1566553719184" MODIFIED="1566553719184"/>
</node>
<node TEXT="From Turing Machines to &#xe2;&#x20ac;&#x153;Building a Brain&#xe2;&#x20ac;&#xfffd; - Furman" FOLDED="true" ID="ID_1913022169" CREATED="1566553719184" MODIFIED="1566553719184" LINK="http://cs.furman.edu/~ktreu/fyw-turing/lectures/building_a_brain.pdf">
<node TEXT="From Turing Machines to &#xe2;&#x20ac;&#x153;Building a Brain&#xe2;&#x20ac;&#xfffd; Church-Turing Thesis Turing was beaten to the punch in his solution to the Entscheidungsproblem Alonzo Church announced the same result at Princeton earlier in 1936 Used purely mathematical techniques (lambda-calculus) Turing drew from ideas beyond mathematics" ID="ID_1769822835" CREATED="1566553719184" MODIFIED="1566553719184"/>
</node>
<node TEXT="How Alan Turing Cracked The Enigma Code - iwm.org.uk" FOLDED="true" ID="ID_1908442531" CREATED="1566553719184" MODIFIED="1566553719184" LINK="https://www.iwm.org.uk/history/how-alan-turing-cracked-the-enigma-code">
<node TEXT="Alan Turing was a brilliant mathematician. Born in London in 1912 he studied at both Cambridge and Princeton universities. He was already working part-time for the British Government&#xe2;&#x20ac;&#x2122;s Code and Cypher School before the Second World War broke out. In 1939 Turing took up a full-time role at " ID="ID_1763316282" CREATED="1566553719184" MODIFIED="1566553719184"/>
</node>
<node TEXT="Examples of Turing Machines - ics.uci.edu" FOLDED="true" ID="ID_1723709216" CREATED="1566553719184" MODIFIED="1566553719184" LINK="https://www.ics.uci.edu/~goodrich/teach/cs162/notes/turing2.pdf">
<node TEXT="Examples of Turing Machines &#xe2;&#x20ac;&#x201c; p.21/22. Marking tape symbols In stage two the machine places a mark above a symbol in this case. In the actual implementation the machine has two different symbols and in the tape alphabet Thus when machine places a mark above symbol it actually writes the marked symbol" ID="ID_1261181509" CREATED="1566553719184" MODIFIED="1566553719184"/>
</node>
<node TEXT="Universal Turing machine - Rosetta Code" FOLDED="true" ID="ID_1616245831" CREATED="1566553719184" MODIFIED="1566553719184" LINK="https://rosettacode.org/wiki/Universal_Turing_machine">
<node TEXT="One of the foundational mathematical constructs behind computer science is the universal Turing Machine.. Indeed one way to definitively prove that a language is turing-complete is to implement a universal Turing machine in it.. Task. Simulate such a machine capable of taking the definition of any other Turing machine and executing it." ID="ID_1327891780" CREATED="1566553719184" MODIFIED="1566553719184"/>
</node>
<node TEXT="Turing machine - Wikipedia" FOLDED="true" ID="ID_1198028732" CREATED="1566553719185" MODIFIED="1566553719185" LINK="https://en.wikipedia.org/wiki/Turing_machine">
<node TEXT="A Turing machine is a mathematical model of computation that defines an abstract machine which manipulates symbols on a strip of tape according to a table of rules. Despite the models simplicity given any computer algorithm a Turing machine capable of simulating that algorithms logic can be constructed.. The machine operates on an infinite memory tape divided into discrete cells." ID="ID_271176077" CREATED="1566553719185" MODIFIED="1566553719185"/>
</node>
<node TEXT="Building a Turing Machine with Reinforcement Learning" FOLDED="true" ID="ID_204893012" CREATED="1566553719185" MODIFIED="1566553719185" LINK="https://towardsdatascience.com/building-a-turing-machine-with-reinforcement-learning-9d06a4f0ce6">
<node TEXT="Building a Turing Machine with Reinforcement Learning.  In contrast to existing techniques like Alex Graves&#xe2;&#x20ac;&#x2122; Neural Turing Machines in this work  In the code I used the following alphabet: TERMINATE INCI INCJ RESETI RESETJ SWAP (values at I and J)." ID="ID_439876524" CREATED="1566553719185" MODIFIED="1566553719185"/>
</node>
</node>
</node>
<node TEXT="Variants of Turing Machines" ID="ID_1808883008" CREATED="1566881027672" MODIFIED="1566881027672" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Variants of Turing Machines Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1634225580" CREATED="1566553719185" MODIFIED="1566553719185">
<icon BUILTIN="stop-sign"/>
<node TEXT="Turing machine - Wikipedia" FOLDED="true" ID="ID_189884103" CREATED="1566553719185" MODIFIED="1566553719185" LINK="https://en.wikipedia.org/wiki/Universal_computation">
<node TEXT="An oracle machine or o-machine is a Turing a-machine that pauses its computation at state o while to complete its calculation it awaits the decision of the oracle&#xe2;&#x20ac;&#x201d;an unspecified entity apart from saying that it cannot be a machine (Turing (1939) The Undecidable p. 166&#xe2;&#x20ac;&#x201c;168). Universal Turing machines" ID="ID_1689791254" CREATED="1566553719185" MODIFIED="1566553719185"/>
</node>
<node TEXT="Interactive computation - Wikipedia" FOLDED="true" ID="ID_1174640769" CREATED="1566553719185" MODIFIED="1566553719185" LINK="https://en.wikipedia.org/wiki/Interactive_computation">
<node TEXT="The Church-Turing thesis attempts to define computation and computability in terms of Turing machines. Because the Turing machine model only provides an answer to the question of what computability of functions means but interactive tasks are not always reducible to functions [clarification needed] it fails to capture a broader intuition of " ID="ID_56317413" CREATED="1566553719185" MODIFIED="1566553719185"/>
</node>
<node TEXT="Turing  The Halting Problem - Computerphile - YouTube" FOLDED="true" ID="ID_1372566723" CREATED="1566553719185" MODIFIED="1566553719185" LINK="https://www.youtube.com/watch?v=macM_MtS_w4">
<node TEXT="Alan Turing almost accidentally created the blueprint for the modern day digital computer. Here Mark Jago takes us through The Halting Problem. Turing Machines Explained: https://youtu.be " ID="ID_1622072587" CREATED="1566553719185" MODIFIED="1566553719185"/>
</node>
<node TEXT="Roy Ruddle | The Alan Turing Institute" FOLDED="true" ID="ID_200860686" CREATED="1566553719185" MODIFIED="1566553719185" LINK="https://www.turing.ac.uk/people/researchers/roy-ruddle">
<node TEXT="Roy Ruddle is a Professor of Computing at the University of Leeds and Deputy Director (Research Technology) of the Leeds Institute for Data Analytics (LIDA). He has worked in both academia and industry and researches visualization visual analytics and human-computer interaction in spaces that range from high-dimensional data to virtual reality." ID="ID_975985753" CREATED="1566553719185" MODIFIED="1566553719185"/>
</node>
<node TEXT="Mathematics WWW Virtual Library" FOLDED="true" ID="ID_470155417" CREATED="1566553719185" MODIFIED="1566553719185" LINK="https://www.math.fsu.edu/Virtual/index.php?f=21">
<node TEXT="3D-Filmstrip Aide in visualization of mathematical objects and processes  * Universal Turing Machine; * Turing Machine with faults failures and recovery. Calc3D a free vector matrices and complex number calculator  O-Matrix A Matlab-compatible high-performance interactive analysis and visualization environment." ID="ID_1952478229" CREATED="1566553719185" MODIFIED="1566553719185"/>
</node>
<node TEXT="Teaching Computer Science with Interaction and Visualization" FOLDED="true" ID="ID_1750260707" CREATED="1566553719185" MODIFIED="1566553719185" LINK="https://users.cs.duke.edu/~rodger/talks/DukeDec06/DukeTalkDec4-2006.pdf">
<node TEXT="Teaching Computer Science with Interaction and Visualization Susan H. Rodger Computer Science Dept. Duke University December 4 2006.  How do you reach all three types? &#xe2;&#x20ac;&#xa2; You must do all three! &#xe2;&#x20ac;&#x201c; Provide pictures diagrams  Edible Turing Machine &#xe2;&#x20ac;&#xa2; TM for f(x)=2x where x is unary &#xe2;&#x20ac;&#xa2; TM is not correct can you fix it?" ID="ID_647445271" CREATED="1566553719185" MODIFIED="1566553719185"/>
</node>
<node TEXT="(PDF) GUItar and FAgoo: Graphical interface for automata " FOLDED="true" ID="ID_1131636321" CREATED="1566553719185" MODIFIED="1566553719185" LINK="https://www.researchgate.net/publication/268339722_GUItar_and_FAgoo_Graphical_interface_for_automata_visualization_editing_and_interaction">
<node TEXT="GUItar is a visualization software tool for various types of au-tomata (standard weighted pushdown transducers Turing machines etc.). It provides interactive manipulation of diagrams " ID="ID_1865028579" CREATED="1566553719185" MODIFIED="1566553719185"/>
</node>
<node TEXT="JFLAP - cs.duke.edu" FOLDED="true" ID="ID_1901815956" CREATED="1566553719185" MODIFIED="1566553719185" LINK="https://www2.cs.duke.edu/csed/jflap/">
<node TEXT="New in version 8 Beta include visualization of the CYK Parsing Algorithm Language generator (generate automatically a specified number of strings for a grammar) redesigned Turing Machine with Building Blocks more formal definitions displayed with automata and grammars extension of graphic tools and preference menu and a new file format." ID="ID_1466109483" CREATED="1566553719185" MODIFIED="1566553719185"/>
</node>
<node TEXT="Halting Problem | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1923700740" CREATED="1566553719185" MODIFIED="1566553719185" LINK="https://brilliant.org/wiki/halting-problem/">
<node TEXT="One way to visualize this is to think of apps on a phone. Apps are types of Turing machines. Sometimes apps crash your phone because they get caught in a loop and do not halt. Let&#xe2;&#x20ac;&#x2122;s supposes a clever team releases an app to check for this. This app the Checker app can solve the Halting problem. The Checker app checks some app M M M." ID="ID_441231821" CREATED="1566553719185" MODIFIED="1566553719185"/>
</node>
<node TEXT="15 Data Visualizations That Will Blow Your Mind | Udacity" FOLDED="true" ID="ID_1173195743" CREATED="1566553719185" MODIFIED="1566553719185" LINK="https://blog.udacity.com/2015/01/15-data-visualizations-will-blow-mind.html">
<node TEXT="If a picture is worth a thousand words a data visualization is worth at least a million. As inspiration for your own work with data check out these 15 data visualizations that will wow you. Taken together this roundup is an at-a-glance representation of the range of uses data analysis has from " ID="ID_872867225" CREATED="1566553719185" MODIFIED="1566553719185"/>
</node>
<node TEXT="CiteSeerX &#xe2;&#x20ac;&#x201d; R.: XML description for automata manipulations" FOLDED="true" ID="ID_365555552" CREATED="1566553719185" MODIFIED="1566553719185" LINK="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.182.6402">
<node TEXT="CiteSeerX - Document Details (Isaac Councill Lee Giles Pradeep Teregowda): Abstract. GUItar is a visualization software tool for various types of automata (standard weighted pushdown transducers Turing machines etc.). It provides interactive manipulation of diagrams comprehensive graphic style creation multiple export/import filters and a generic foreign function calls (FFC " ID="ID_1018103693" CREATED="1566553719185" MODIFIED="1566553719185"/>
</node>
<node TEXT="Attention and Augmented Recurrent Neural Networks - Distill" FOLDED="true" ID="ID_1445212097" CREATED="1566553719185" MODIFIED="1566553719185" LINK="https://distill.pub/2016/augmented-rnns/">
<node TEXT="attention memory The RNN gives an attention distribution which describe how we spread out the amount we care about different memory positions. The read result is a weighted sum. Similarly we write everywhere at once to different extents. Again an attention distribution describes how much we write at every location." ID="ID_1994697267" CREATED="1566553719185" MODIFIED="1566553719185"/>
</node>
</node>
<node TEXT="Variants of Turing Machines Code#$D$#" FOLDED="true" ID="ID_689020741" CREATED="1566553719185" MODIFIED="1566553719185">
<icon BUILTIN="stop-sign"/>
<node TEXT="Variations of Turing Machines - nptel.ac.in" FOLDED="true" ID="ID_989694919" CREATED="1566553719185" MODIFIED="1566553719185" LINK="http://nptel.ac.in/courses/106106049/downloads/Variations%20of%20Turing%20Machines.pdf">
<node TEXT="Title: Variations of Turing Machines Author: system1 Created Date: 10/11/2011 11:23:19 AM" ID="ID_1812010843" CREATED="1566553719186" MODIFIED="1566553719186"/>
</node>
<node TEXT="Turing machine - Wikipedia" FOLDED="true" ID="ID_783471030" CREATED="1566553719186" MODIFIED="1566553719186" LINK="https://en.wikipedia.org/wiki/Turing_machine">
<node TEXT="A Turing machine is a mathematical model of computation that defines an abstract machine which manipulates symbols on a strip of tape according to a table of rules. Despite the models simplicity given any computer algorithm a Turing machine capable of simulating that algorithms logic can be constructed.. The machine operates on an infinite memory tape divided into discrete cells." ID="ID_849802351" CREATED="1566553719186" MODIFIED="1566553719186"/>
</node>
<node TEXT="Universal Turing machine - Wikipedia" FOLDED="true" ID="ID_1500629728" CREATED="1566553719186" MODIFIED="1566553719186" LINK="https://en.wikipedia.org/wiki/Universal_Turing_machine">
<node TEXT="In computer science a universal Turing machine (UTM) is a Turing machine that can simulate an arbitrary Turing machine on arbitrary input. The universal machine essentially achieves this by reading both the description of the machine to be simulated as well as the input thereof from its own tape." ID="ID_327554282" CREATED="1566553719186" MODIFIED="1566553719186"/>
</node>
<node TEXT="Variants of Turing Machines - cs.stonybrook.edu" FOLDED="true" ID="ID_550804647" CREATED="1566553719186" MODIFIED="1566553719186" LINK="https://www3.cs.stonybrook.edu/~cse350/slides/turing3.pdf">
<node TEXT="Variants of Turing Machines &#xe2;&#x20ac;&#x201c; p.26/49. Enumerators An enumerator is a variant of a TM with an attached printer The enumerator uses the printer as an output device to print strings Every time the TM wants to add a string to the list of recognized strings it sends it to the printer" ID="ID_1147822027" CREATED="1566553719186" MODIFIED="1566553719186"/>
</node>
<node TEXT="Variants of Turing Machine - SlideShare" FOLDED="true" ID="ID_522596103" CREATED="1566553719186" MODIFIED="1566553719186" LINK="https://www.slideshare.net/rajendranjrf/variants-of-turing-machine">
<node TEXT="Variants of Turing Machine 1. Variants of Turing Machines Lecture 26 Section 3.2 Mon Oct 22 2007 2. Increasing the Power of a Turing Machine &#xe2;&#x20ac;&#xa2; It is hard to believe that something as simple as a Turing machine could be powerful enough for complicated problems." ID="ID_388326116" CREATED="1566553719186" MODIFIED="1566553719186"/>
</node>
<node TEXT="Variants of Turing Machines - Wichita State University" FOLDED="true" ID="ID_1741731659" CREATED="1566553719186" MODIFIED="1566553719186" LINK="http://www.cs.wichita.edu/~sinha/teaching/fall16/cs720/slide/turing3.pdf">
<node TEXT="Variants of Turing Machines. Equivalence of TMs To show that two models of TM are equivalent we need to show that we can simulate one by another. Variants of Turing Machines. Multitape Turing Machines A multitape TM is like an ordinary TM with several tapes I Each tape has its own head for reading/writing" ID="ID_839710220" CREATED="1566553719186" MODIFIED="1566553719186"/>
</node>
<node TEXT="computation models - Variant of Turing machine - Computer " FOLDED="true" ID="ID_68315944" CREATED="1566553719186" MODIFIED="1566553719186" LINK="https://cs.stackexchange.com/questions/66185/variant-of-turing-machine">
<node TEXT="For part 2 it might help if you write down the formal definition of acceptance of a modified Turing machine and try to work from there (i.e. how to convert it so that you get the standard acceptance condition and then show that the two Turing machines accept the same language). $\endgroup$ &#xe2;&#x20ac;&#x201c; skankhunt42 Nov 18 16 at 17:03" ID="ID_1493248954" CREATED="1566553719186" MODIFIED="1566553719186"/>
</node>
<node TEXT="Multitape Turing Machine - YouTube" FOLDED="true" ID="ID_909876012" CREATED="1566553719186" MODIFIED="1566553719186" LINK="https://www.youtube.com/watch?v=CLLutxGVDY4">
<node TEXT="TOC: Multitape Turing Machine Topics Discussed: 1. Multitape Turing Machine 2. Equivalence of Multitape Turing Machine and Single Tape Turing Machine Contrib" ID="ID_516259236" CREATED="1566553719186" MODIFIED="1566553719186"/>
</node>
<node TEXT="Turing Machine Introduction - tutorialspoint.com" FOLDED="true" ID="ID_1534351722" CREATED="1566553719186" MODIFIED="1566553719186" LINK="https://www.tutorialspoint.com/automata_theory/turing_machine_introduction">
<node TEXT="A Turing Machine is an accepting device which accepts the languages (recursively enumerable set) generated by type 0 grammars. It was invented in 1936 by Alan Turing. A Turing Machine (TM) is a mathematical model which consists of an infinite length tape divided into cells on which input is given " ID="ID_1290760778" CREATED="1566553719186" MODIFIED="1566553719186"/>
</node>
<node TEXT="Turing Machines - introcs.cs.princeton.edu" FOLDED="true" ID="ID_1777046341" CREATED="1566553719186" MODIFIED="1566553719186" LINK="https://introcs.cs.princeton.edu/java/52turing/">
<node TEXT="5.2 Turing Machines. This section under major construction. Turing machine. The Turing machine is one of the most beautiful and intriguing intellectual discoveries of the 20th century. Turing machine is a simple and useful abstract model of computation (and digital computers) that is general enough to embody any computer program." ID="ID_988937371" CREATED="1566553719186" MODIFIED="1566553719186"/>
</node>
<node TEXT="The Universal Turing Machine - web.stanford.edu" FOLDED="true" ID="ID_807557047" CREATED="1566553719186" MODIFIED="1566553719186" LINK="https://web.stanford.edu/class/archive/cs/cs103/cs103.1126/lectures/19/Slides19.pdf">
<node TEXT="Where We Are The Church-Turing thesis tells us that all effective models of computation are no more powerful than a Turing machine. We have a family of programming languages (WBn) that are equivalent to Turing machines. Lets start exploring what we can do with this new model of computation." ID="ID_1605236704" CREATED="1566553719186" MODIFIED="1566553719186"/>
</node>
</node>
</node>
<node TEXT="The Model of Linear Bounded Automata " ID="ID_436604325" CREATED="1566881027673" MODIFIED="1566881027673" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="The Model of Linear Bounded Automata  Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1093575066" CREATED="1566553719186" MODIFIED="1566553719186">
<icon BUILTIN="stop-sign"/>
<node TEXT="Lecture 48/65: Linear Bound Automata - YouTube" FOLDED="true" ID="ID_231605094" CREATED="1566553719186" MODIFIED="1566553719186" LINK="https://www.youtube.com/watch?v=UH02xIR9A2M">
<node TEXT="114 videos Play all Theory of Computation  Automata Theory Neso Academy Derivation Tree (Left  Right Derivation Trees) - Duration: 12:33. Neso Academy 275910 views" ID="ID_109007176" CREATED="1566553719186" MODIFIED="1566553719186"/>
</node>
<node TEXT="Introduction to Theory of Computation - YouTube" FOLDED="true" ID="ID_1962154597" CREATED="1566553719186" MODIFIED="1566553719186" LINK="https://www.youtube.com/watch?v=58N2N7zJGrQ">
<node TEXT="An introduction to the subject Theory of Computation and Automata Theory. Topics discussed: 1. What is Theory of Computation. 2. What is the main concept behind this subject. 3. Some simple " ID="ID_524990924" CREATED="1566553719186" MODIFIED="1566553719186"/>
</node>
<node TEXT="On the properties of language classes defined by bounded " FOLDED="true" ID="ID_1352244289" CREATED="1566553719186" MODIFIED="1566553719186" LINK="https://waseda.pure.elsevier.com/en/publications/on-the-properties-of-language-classes-defined-by-bounded-reaction">
<node TEXT="On the properties of language classes defined by bounded reaction automata  Reaction automata are a formal model that has been introduced to investigate the computing powers of interactive behaviors of biochemical reactions (Okubo et al. (2012) [19]).  investigation of reaction automata with a focus on the formal language theoretic " ID="ID_1471119693" CREATED="1566553719186" MODIFIED="1566553719186"/>
</node>
<node TEXT="Deriving Unbounded Proof of Linear Hybrid Automata from " FOLDED="true" ID="ID_1773827442" CREATED="1566553719186" MODIFIED="1566553719186" LINK="https://www.researchgate.net/publication/282173677_Deriving_Unbounded_Proof_of_Linear_Hybrid_Automata_from_Bounded_Verification">
<node TEXT="Request PDF on ResearchGate | Deriving Unbounded Proof of Linear Hybrid Automata from Bounded Verification | The behavior space of real time hybrid systems is very complex and hence expensive to " ID="ID_2468948" CREATED="1566553719186" MODIFIED="1566553719186"/>
</node>
<node TEXT="Automata theory - Wikipedia" FOLDED="true" ID="ID_1172383245" CREATED="1566553719186" MODIFIED="1566553719186" LINK="https://en.wikipedia.org/wiki/Automata_theory">
<node TEXT="Automata theory is the study of abstract machines and automata as well as the computational problems that can be solved using them. It is a theory in theoretical computer science and discrete mathematics (a subject of study in both mathematics and computer science).The word automata (the plural of automaton) comes from the Greek word &#xce;&#xb1;&#xe1;&#xbd;&#xfffd;&#xcf;&#x201e;&#xcf;&#x152;&#xce;&#xbc;&#xce;&#xb1;&#xcf;&#x201e;&#xce;&#xb1; which means self-acting." ID="ID_1174020567" CREATED="1566553719186" MODIFIED="1566553719186"/>
</node>
<node TEXT="Bounded-storage machine - Esolang" FOLDED="true" ID="ID_515411197" CREATED="1566553719187" MODIFIED="1566553719187" LINK="https://esolangs.org/wiki/Bounded-storage_machine">
<node TEXT="Bounded-storage machines are at face value similar to linear bounded automata but there is a vital difference which renders LBA more powerful. BSM have an arbitrary fixed tape size not related to the input size; as a result there is a strictly fixed number of reachable states regardless of input rendering them at best equivalent to finite " ID="ID_637453231" CREATED="1566553719187" MODIFIED="1566553719187"/>
</node>
<node TEXT="Integration of Model-Checking Tools: from Discrete to " FOLDED="true" ID="ID_2901173" CREATED="1566553719187" MODIFIED="1566553719187" LINK="https://www.researchgate.net/publication/4341241_Integration_of_Model-Checking_Tools_from_Discrete_to_Hybrid_Models">
<node TEXT="Integration of Model-Checking Tools: from Discrete to Hybrid Models.  HyTech is a symbolic model checker for linear hybrid automata a subclass of hybrid automata that can be analyzed " ID="ID_772739109" CREATED="1566553719187" MODIFIED="1566553719187"/>
</node>
<node TEXT="Visualization of a Mathematical Model of Computation - ATCM" FOLDED="true" ID="ID_1819689545" CREATED="1566553719187" MODIFIED="1566553719187" LINK="http://atcm.mathandtech.org/EP2012/regular_papers/3472012_19909.pdf">
<node TEXT="visualization of one of the models is presented for consideration of the relative advantages and disadvantages of both visualization techniques. 1. Introduction Mathematical models including Turing Machines (TMs) two-stack Pushdown Automata (2PDA) Linear Bounded Automata (LBA) Pushdown Automata (PDA) Finite Automata (FA) and" ID="ID_315366327" CREATED="1566553719187" MODIFIED="1566553719187"/>
</node>
<node TEXT="Automata Theory Tutorial - tutorialspoint.com" FOLDED="true" ID="ID_419370262" CREATED="1566553719187" MODIFIED="1566553719187" LINK="https://www.tutorialspoint.com/automata_theory/">
<node TEXT="Automata Theory is a branch of computer science that deals with designing abstract selfpropelled computing devices that follow a predetermined sequence of operations automatically. An automaton with a finite number of states is called a Finite Automaton. This is a brief and concise tutorial that " ID="ID_1230416067" CREATED="1566553719187" MODIFIED="1566553719187"/>
</node>
<node TEXT="Uppaal: a Tool Suite for Validation and Verification of " FOLDED="true" ID="ID_246791748" CREATED="1566553719187" MODIFIED="1566553719187" LINK="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.51.9725">
<node TEXT="CiteSeerX - Document Details (Isaac Councill Lee Giles Pradeep Teregowda): The purpose of this document is to provide a complete description of Uppaal including its theoretical basis and user guide. Uppaal is a tool suite for simulation and verification of real-time systems modeled as networks of automata with clock and data variables. It consists of a graphical interface a simulator and a " ID="ID_1310210818" CREATED="1566553719187" MODIFIED="1566553719187"/>
</node>
<node TEXT="ElVis: A System for the Accurate and Interactive " FOLDED="true" ID="ID_72177164" CREATED="1566553719187" MODIFIED="1566553719187" LINK="http://www.cs.utah.edu/~kirby/Publications/Kirby-72.pdf">
<node TEXT="of performance as its linear counterparts it should provide an interactive experience on a standard desktop workstation (i.e. it should not require expensive special purpose hardware). In this paper we describe the Element Visualizer (ElVis) a new high-order nite element visualization system that meets the require-ments listed above." ID="ID_1866228493" CREATED="1566553719187" MODIFIED="1566553719187"/>
</node>
<node TEXT="ElVis: A System for the Accurate and Interactive " FOLDED="true" ID="ID_463062733" CREATED="1566553719187" MODIFIED="1566553719187" LINK="http://web.mit.edu/ehliu/Public/bnelson/Vis12.pdf">
<node TEXT="of performance as its linear counterparts it should provide an interactive experience on a standard desktop workstation (i.e. it should not require expensive special purpose hardware). In this paper we describe the Element Visualizer (ElVis) a new high-order &#xef;&#xac;&#xfffd;nite element visualization system that meets the require-ments listed above." ID="ID_139999378" CREATED="1566553719187" MODIFIED="1566553719187"/>
</node>
</node>
<node TEXT="The Model of Linear Bounded Automata  Code#$D$#" FOLDED="true" ID="ID_1594845268" CREATED="1566553719187" MODIFIED="1566553719187">
<icon BUILTIN="stop-sign"/>
<node TEXT="Linear Bounded Automata - tutorialspoint.com" FOLDED="true" ID="ID_164981894" CREATED="1566553719187" MODIFIED="1566553719187" LINK="https://www.tutorialspoint.com/automata_theory/linear_bounded_automata">
<node TEXT="A linear bounded automaton is a multi-track non-deterministic Turing machine with a tape of some bounded finite length. The computation is restricted to the constant bounded area. The input alphabet contains two special symbols which serve as left end markers and right end markers which mean the " ID="ID_822060149" CREATED="1566553719187" MODIFIED="1566553719187"/>
</node>
<node TEXT="Linear bounded automaton - Wikipedia" FOLDED="true" ID="ID_1995684352" CREATED="1566553719187" MODIFIED="1566553719187" LINK="https://en.wikipedia.org/wiki/Linear_bounded_automaton">
<node TEXT="Since there is a one-to-one correspondence between linear-bounded automata and such grammars no more tape than that occupied by the original string is necessary for the string to be recognized by the automaton. History. In 1960 John Myhill introduced an automaton model today known as deterministic linear bounded automaton." ID="ID_555331069" CREATED="1566553719187" MODIFIED="1566553719187"/>
</node>
<node TEXT="Linear bounded automaton | Wiki | Everipedia" FOLDED="true" ID="ID_1853722592" CREATED="1566553719187" MODIFIED="1566553719187" LINK="https://everipedia.org/wiki/lang_en/Linear_bounded_automaton/">
<node TEXT="In computer science a linear bounded automaton (plural linear bounded automata abbreviated LBA) is a restricted form of Turing machine. Operation . A linear bounded automaton is a nondeterministic Turing machine that satisfies the following three conditions: Its input alphabet includes two special symbols serving as left and right endmarkers." ID="ID_1349266235" CREATED="1566553719187" MODIFIED="1566553719187"/>
</node>
<node TEXT="Pushdown automaton - Wikipedia" FOLDED="true" ID="ID_1630374531" CREATED="1566553719187" MODIFIED="1566553719187" LINK="https://en.wikipedia.org/wiki/Pushdown_automaton">
<node TEXT=": 171 A linear bounded automaton is a device which is more powerful than a pushdown automaton but less so than a Turing machine. Generalized pushdown automaton (GPDA) A GPDA is a PDA which writes an entire string of some known length to the stack or removes an entire string from the stack in one step." ID="ID_1557297710" CREATED="1566553719187" MODIFIED="1566553719187"/>
</node>
<node TEXT="Linear Bounded Automata(LBA) - Scanftree.com" FOLDED="true" ID="ID_1595549829" CREATED="1566553719187" MODIFIED="1566553719187" LINK="http://scanftree.com/automata/linear-bounded-automata">
<node TEXT="Linear Bounded Automata(LBA) We cannot increase power of Turing Machine by providing some options like STAY 2 Read/Write Head etc. But we can restrict power of Turing Machine in following ways: If we use TAPE as STACK then it will be PDA If we make TAPE finite then it will be Finite Automata" ID="ID_1283728222" CREATED="1566553719187" MODIFIED="1566553719187"/>
</node>
<node TEXT="Model of linear bounded automata - Brainly.in" FOLDED="true" ID="ID_241978598" CREATED="1566553719187" MODIFIED="1566553719187" LINK="https://brainly.in/question/9653794">
<node TEXT="linear bounded automaton is a multi-track non-deterministic Turing machine with a tape of some bounded finite length. Length = function (Length of the initial input string constant c) Here Memory information &#xe2;&#x2030;&#xa4; c &#xc3;&#x2014; Input information. The computation is restricted to the constant bounded area." ID="ID_12646642" CREATED="1566553719187" MODIFIED="1566553719187"/>
</node>
<node TEXT="Linear bounded automaton | Article about linear bounded " FOLDED="true" ID="ID_1224930859" CREATED="1566553719187" MODIFIED="1566553719187" LINK="https://encyclopedia2.thefreedictionary.com/linear+bounded+automaton">
<node TEXT="Looking for linear bounded automaton? Find out information about linear bounded automaton. A nondeterministic one-tape Turing machine whose read/write head is confined to move only on a restricted section of tape initially containing the input Explanation of linear bounded automaton" ID="ID_81114540" CREATED="1566553719187" MODIFIED="1566553719187"/>
</node>
<node TEXT="Linear bounded automata | Article about Linear bounded " FOLDED="true" ID="ID_1380491467" CREATED="1566553719187" MODIFIED="1566553719187" LINK="http://encyclopedia2.thefreedictionary.com/Linear+bounded+automata">
<node TEXT="linear bounded automaton [&#xe2;&#x20ac;&#xb2;lin&#xc2;&#xb7;&#xc4;&#x201c;&#xc2;&#xb7;&#xc9;&#x2122;r &#xc2;&#xa6;bau&#xcc;&#x2021;nd&#xc2;&#xb7;&#xc9;&#x2122;d &#xc8;&#xaf;&#xe2;&#x20ac;&#xb2;t&#xc3;&#xa4;m&#xc2;&#xb7;&#xc9;&#x2122;&#xe2;&#x20ac;&#x161;t&#xc3;&#xa4;n] (computer science) A nondeterministic one-tape Turing machine whose read/write head is confined to move only on a restricted section of tape initially containing the input." ID="ID_1148391453" CREATED="1566553719187" MODIFIED="1566553719187"/>
</node>
<node TEXT="Register Machine Model of Computation - OSDev Wiki" FOLDED="true" ID="ID_408254709" CREATED="1566553719187" MODIFIED="1566553719187" LINK="https://wiki.osdev.org/Register_Machine_Model_of_Computation">
<node TEXT="This new model the Linear-Bounded Automaton a variant of the Turing machine with a finite available memory (it is usually described in terms of the reader having access to a finite contiguous part of an infinite tape hence the term linear bounded). This allowed for study of the memory requirements of different classes of computations and " ID="ID_1996814961" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
<node TEXT="LLIINNEEAARR BBOOUUNNDDEEDD AAUUTTOOMMAATTAA - Tutorials Point" FOLDED="true" ID="ID_72059318" CREATED="1566553719188" MODIFIED="1566553719188" LINK="http://www.tutorialspoint.com/automata_theory/pdf/linear_bounded_automata.pdf">
<node TEXT="A linear bounded automaton is a multi-track non-deterministic Turing machine with a tape of some bounded finite length. Length = function Lengthoftheinitialinputstringconstantc Here Memory information &#xe2;&#x2030;&#xa4; c &#xc3;&#x2014; Input information The computation is restricted to the constant bounded area. The input alphabet contains two" ID="ID_1198785052" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
<node TEXT="Linear bounded automaton - Esolang" FOLDED="true" ID="ID_703435057" CREATED="1566553719188" MODIFIED="1566553719188" LINK="https://esolangs.org/wiki/Linear_bounded_automaton">
<node TEXT="A linear bounded automaton (LBA) is an abstract machine that would be identical to a Turing machine except that during a computation with given input its tape-head is not allowed to move outside a bounded region of its infinite tape the number of accessible tape-cells being a linear function of the input-size.The tape itself has infinite length in order to accomodate inputs of arbitrary length." ID="ID_1981025810" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
</node>
</node>
<node TEXT="TM  Type 0 grammars" ID="ID_1309451436" CREATED="1566881027696" MODIFIED="1566881027696" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Turing Machine Type 0 grammars Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1551664264" CREATED="1566553719188" MODIFIED="1566553719188">
<icon BUILTIN="stop-sign"/>
<node TEXT="Part 6.4 Type 0 Grammar Recursively enumerable grammar " FOLDED="true" ID="ID_886652846" CREATED="1566553719188" MODIFIED="1566553719188" LINK="https://www.youtube.com/watch?v=O2CToOJDpjo">
<node TEXT="Type-0 Grammar is also known as Unrestricted Grammar or Phase Structured Grammar. Type-0 is used to generate the Recursively Enumerable Languages and Turing Machine acts as an acceptor for this " ID="ID_1073735760" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
<node TEXT="Turing Machine as Problem Solvers - YouTube" FOLDED="true" ID="ID_405580919" CREATED="1566553719188" MODIFIED="1566553719188" LINK="https://www.youtube.com/watch?v=f_1GptvagSw">
<node TEXT="TOC: Turing Machine as Problem Solvers Topics discussed: This lecture shows how can Turing Machines be used as Problem Solvers. It also shows an example of designing a TM which finds whether a " ID="ID_1330646911" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
<node TEXT="Automata theory - Wikipedia" FOLDED="true" ID="ID_697016598" CREATED="1566553719188" MODIFIED="1566553719188" LINK="https://en.wikipedia.org/wiki/Automata_theory">
<node TEXT="Automata theory is the study of abstract machines and automata as well as the computational problems that can be solved using them. It is a theory in theoretical computer science and discrete mathematics (a subject of study in both mathematics and computer science).The word automata (the plural of automaton) comes from the Greek word &#xce;&#xb1;&#xe1;&#xbd;&#xfffd;&#xcf;&#x201e;&#xcf;&#x152;&#xce;&#xbc;&#xce;&#xb1;&#xcf;&#x201e;&#xce;&#xb1; which means self-acting." ID="ID_1419602449" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
<node TEXT="Turing machine - Wikipedia" FOLDED="true" ID="ID_779512611" CREATED="1566553719188" MODIFIED="1566553719188" LINK="https://en.wikipedia.org/wiki/Turing_machine">
<node TEXT="A Turing machine is a mathematical model of computation that defines an abstract machine which manipulates symbols on a strip of tape according to a table of rules. Despite the models simplicity given any computer algorithm a Turing machine capable of simulating that algorithms logic can be constructed." ID="ID_1477118087" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
<node TEXT="Grammar - Hierarchy of grammar (Chomsky) [Gerardnico]" FOLDED="true" ID="ID_1044955640" CREATED="1566553719188" MODIFIED="1566553719188" LINK="https://gerardnico.com/code/compiler/hierarchy">
<node TEXT="In the formal languages (of computer science and linguistics) the Chomsky hierarchy is a hierarchy of formal grammars described by Noam Chomsky in 1956.. The hierarchy describes the relations between:" ID="ID_571531726" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
<node TEXT="PPT &#xe2;&#x20ac;&#x201c; Theory of Computation PowerPoint presentation | free " FOLDED="true" ID="ID_1703637747" CREATED="1566553719188" MODIFIED="1566553719188" LINK="https://www.powershow.com/view/10db56-Yzk1Y/Theory_of_Computation_powerpoint_ppt_presentation?varnishcache=1">
<node TEXT="reversal bounded PDAs linear grammars counter machines pumping lemma for CFLs Chomsky normal form Greibach normal form closure properties. 3. 27 Topics (contd) 3. Linear bounded automata Context-sensitive languages Context-sensitive grammars. 4. Turing machines Recursively enumerable sets Type 0 grammars variants of Turing machines" ID="ID_1312456576" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
<node TEXT="A Visual and Interactive Automata Theory Course with JFLAP 4" FOLDED="true" ID="ID_1793196120" CREATED="1566553719188" MODIFIED="1566553719188" LINK="https://users.cs.duke.edu/~rodger/jflappapers/Rodger2004.pdf">
<node TEXT="A Visual and Interactive Automata Theory Course with JFLAP 4.0 Ryan Cavalcante  JFLAP 4.0 has easier interactive approaches to pre-vious topics and covers many new topics including three parsing algorithms multi-tape Turing machines L-systems and grammar transformations. Categories and Subject Descriptors" ID="ID_609665521" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
<node TEXT="GitHub - craigthelinguist/turing: Turing machine simulator." FOLDED="true" ID="ID_1810536316" CREATED="1566553719188" MODIFIED="1566553719188" LINK="https://github.com/craigthelinguist/turing">
<node TEXT="This is a Turing machine simulator. It has its own language for specifying machines. Machines have doubly infinite tape in both directions and may call previously defined Turing machines as subroutines. The interactive interpreter visualises their step-by-step computation. Grammar" ID="ID_688827252" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
<node TEXT="CMSimulator - Apps on Google Play" FOLDED="true" ID="ID_1145812395" CREATED="1566553719188" MODIFIED="1566553719188" LINK="https://play.google.com/store/apps/details?id=fiitstu.gulis.cmsimulatorhl=en_US">
<node TEXT="CMSimulator app helps you to better understand four of the most known counter machines - Finite State Automaton Pushdown Automaton Linear Bounded Automaton Turing machine. You can create new or load existing solutions from files. The application also contains examples (for each type of machines). Furthermore the application also helps you to better understand four types of formal grammars " ID="ID_714856070" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
<node TEXT="Newest turing-machines Questions - Page 2 - Stack Overflow" FOLDED="true" ID="ID_327504317" CREATED="1566553719188" MODIFIED="1566553719188" LINK="https://stackoverflow.com/questions/tagged/turing-machines?page=2sort=newest">
<node TEXT="A Turing machine is an idealized model of computation consisting of a finite-state control an infinite tape holding information and a read head positioned somewhere over the tape." ID="ID_1008079493" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
<node TEXT="International Journal of Innovative Research in Advanced " FOLDED="true" ID="ID_1820795959" CREATED="1566553719188" MODIFIED="1566553719188" LINK="http://ijirae.com/images/downloads/vol1issue1/MCS10100.March14.15.pdf">
<node TEXT="International Journal of Innovative Research in Advanced Engineering (IJIRAE)  Type 0 languages Type 1 languages Type 2 languages Type 4 languages Parsers and visually present complex  Pushdown Automata Turing Machine Multi-Tape Turing Machine Grammar L-System Regular Expression Regular Pumping Lemma and Context-Free Pumping " ID="ID_636684786" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
</node>
<node TEXT="Turing Machine Type 0 grammars Code#$D$#" FOLDED="true" ID="ID_1707789714" CREATED="1566553719188" MODIFIED="1566553719188">
<icon BUILTIN="stop-sign"/>
<node TEXT="Unrestricted grammar - Wikipedia" FOLDED="true" ID="ID_456893953" CREATED="1566553719188" MODIFIED="1566553719188" LINK="https://en.wikipedia.org/wiki/Unrestricted_grammar">
<node TEXT="The unrestricted grammars characterize the recursively enumerable languages. This is the same as saying that for every unrestricted grammar there exists some Turing machine capable of recognizing () and vice versa. Given an unrestricted grammar such a Turing machine is simple enough to construct as a two-tape nondeterministic Turing machine." ID="ID_1719422973" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
<node TEXT="Chomsky hierarchy - Wikipedia" FOLDED="true" ID="ID_72791024" CREATED="1566553719188" MODIFIED="1566553719188" LINK="https://en.wikipedia.org/wiki/Chomsky_hierarchy">
<node TEXT="Type-0 grammars include all formal grammars. They generate exactly all languages that can be recognized by a Turing machine.These languages are also known as the recursively enumerable or Turing-recognizable languages. Note that this is different from the recursive languages which can be decided by an always-halting Turing machine.. Type-1 grammars" ID="ID_366114597" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
<node TEXT="Turing Machine Introduction - tutorialspoint.com" FOLDED="true" ID="ID_1531483033" CREATED="1566553719188" MODIFIED="1566553719188" LINK="https://www.tutorialspoint.com/automata_theory/turing_machine_introduction">
<node TEXT="A Turing Machine is an accepting device which accepts the languages (recursively enumerable set) generated by type 0 grammars. It was invented in 1936 by Alan Turing. A Turing Machine (TM) is a mathematical model which consists of an infinite length tape divided into cells on which input is given " ID="ID_1482396614" CREATED="1566553719188" MODIFIED="1566553719188"/>
</node>
<node TEXT="Theory of Computation | Chomsky Hierarchy - GeeksforGeeks" FOLDED="true" ID="ID_1328009611" CREATED="1566553719188" MODIFIED="1566553719188" LINK="https://www.geeksforgeeks.org/toc-chomsky-hierarchy/">
<node TEXT="Type-0 grammars include all formal grammars. Type 0 grammar language are recognized by turing machine. These languages are also known as the Recursively Enumerable languages. is ( V + T )*. In type 0 there must be at least one variable on Left side of production. Type-2 grammars generate the context " ID="ID_113817760" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Chomsky Classification of Grammars - tutorialspoint.com" FOLDED="true" ID="ID_192350003" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://www.tutorialspoint.com/automata_theory/chomsky_classification_of_grammars">
<node TEXT="Type - 0 Grammar. Type-0 grammars generate recursively enumerable languages. The productions have no restrictions. They are any phase structure grammar including all formal grammars. They generate the languages that are recognized by a Turing machine." ID="ID_1138177041" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Part 6.4 Type 0 Grammar Recursively enumerable grammar " FOLDED="true" ID="ID_1970485611" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://www.youtube.com/watch?v=O2CToOJDpjo">
<node TEXT="Type-0 Grammar is also known as Unrestricted Grammar or Phase Structured Grammar. Type-0 is used to generate the Recursively Enumerable Languages and Turing Machine acts as an acceptor for this " ID="ID_1117782145" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Turing Machine - GeeksforGeeks" FOLDED="true" ID="ID_452568210" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://www.geeksforgeeks.org/turing-machine/">
<node TEXT="Turing Machine was invented by Alan Turing in 1936 and it is used to accept Recursive Enumerable Languages (generated by Type-0 Grammar). A turing machine consists of a tape of infinite length on which read and writes operation can be performed." ID="ID_371857175" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="How should Chomskys Hierarchy and Turing Machines " FOLDED="true" ID="ID_831249109" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://stackoverflow.com/questions/993006/how-should-chomskys-hierarchy-and-turing-machines-influence-language-design">
<node TEXT="Type 1 grammars generate context-sensitive languages. These are so close to Type 0 grammars that it is often hard to find a difference between them. LBAs (linear bounded automatons) recognize these languages think Turing machine with limited resourcesthink a modern computer." ID="ID_704739227" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="1. What is a Turing Machine? - newhorizonindia.edu" FOLDED="true" ID="ID_1824779811" CREATED="1566553719189" MODIFIED="1566553719189" LINK="http://newhorizonindia.edu/nhc_kasturinagar/wp-content/uploads/2018/05/Turing-Machine-and-PDA-Notes.pdf">
<node TEXT="Turing Machine and Pushdown Automata 1. What is a Turing Machine? A Turing Machine is an accepting device which accepts the languages (recursively enumerable set) generated by type 0 grammars. It was invented in 1936 by Alan Turing. A Turing Machine (TM) is a mathematical model which consists of an infinite length tape divided into cells" ID="ID_1699884312" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="The Lattice-Valued Turing Machines and the Lattice-Valued " FOLDED="true" ID="ID_1725380348" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://www.hindawi.com/journals/mpe/2014/291870/">
<node TEXT="Purpose. The purpose of this paper is to study a class of the natural languages called the lattice-valued phrase structure languages which can be generated by the lattice-valued type 0 grammars and recognized by the lattice-valued Turing machines. Design/Methodology/Approach. From the characteristic of natural language this paper puts forward a new concept of the l-valued Turing machine." ID="ID_1056461568" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Turing Machine (TM) 01 || Theory of Computation and " FOLDED="true" ID="ID_1441954356" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://www.youtube.com/watch?v=LSEgGaYgqjM">
<node TEXT="Turing Machine was invented by Alan Turing in 1936 and it is used to accept Recursive Enumerable Languages (generated by Type-0 Grammar). A turing machine consists of a tape of infinite length on " ID="ID_1531596776" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Grammars and Turing Machines - University of Texas at Austin" FOLDED="true" ID="ID_1003150880" CREATED="1566553719189" MODIFIED="1566553719189" LINK="http://www.cs.utexas.edu/~cline/ear/automata/CS341-Fall-2004-Packet/1-LectureNotes/25-TuringMachinesHandout.pdf">
<node TEXT="Grammars and Turing Machines Do Homework 20. Grammars Recursively Enumerable Languages and Turing Machines L Unrestricted Grammar Accepts Unrestricted Grammars An unrestricted or Type 0 or phrase structure grammar G is a quadruple (V &#xce;&#xa3; R S) where &#xe2;&#x20ac;&#xa2; V is an alphabet" ID="ID_1687386447" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
</node>
</node>
<node TEXT="TMs Halting Problem" ID="ID_388509100" CREATED="1566881027714" MODIFIED="1566881027714" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Turing Machine&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xe2;&#x201e;&#xa2;s Halting Problem Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1024241608" CREATED="1566553719189" MODIFIED="1566553719189">
<icon BUILTIN="stop-sign"/>
<node TEXT="The Undecidable Halting Problem - YouTube" FOLDED="true" ID="ID_1929550867" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://www.youtube.com/watch?v=gSVChLKCiA8">
<node TEXT="Fulvio Baccaglini member of the MISRA C Working Group  senior software engineer working in the RD department of Programming Research discloses more about the halting problem regarding " ID="ID_1792717227" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Proof That Computers Cant Do Everything (The Halting " FOLDED="true" ID="ID_1669672482" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://www.youtube.com/watch?v=92WHN-pAFCs">
<node TEXT="This video gives an informal presentation of Alan Turings Halting Theorem a serious highly influential result in computer science. A few more comments on this video: 1) This video skips a lot " ID="ID_580810066" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Halting Problem Used To Prove A Robot Cannot Computably " FOLDED="true" ID="ID_1559682153" CREATED="1566553719189" MODIFIED="1566553719189" LINK="http://www.i-programmer.info/news/112-theory/8000-halting-problem-used-to-prove-a-robot-cannot-computably-kill-a-human.html">
<node TEXT="A Turing machine for which the undecidability of the halting problem is proved is a theoretical construct which has unbounded memory. Real programs all have bounded memory and they are not subject to the result. In a theoretical world where the robot and the switch program are unbounded Turing machines the halting problem cannot be solved." ID="ID_1444882914" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Is the following problem is decidable? Given a Turing " FOLDED="true" ID="ID_1274120923" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://study.com/academy/answer/is-the-following-problem-is-decidable-given-a-turing-machine-m-with-inputs-x-y-and-z-does-m-halt-on-these-three-instances-hint-make-y-and-z-any-two-artificial-inputs-that-the-program-stops-with.html">
<node TEXT="Is the following problem is decidable? Given a Turing machine M with inputs x y and z does M halt on these three instances? Hint: make y and z any two artificial inputs that the program stops " ID="ID_1989143865" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Part 1: Design Models Perception - UBC Computer Science" FOLDED="true" ID="ID_1684234286" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://www.cs.ubc.ca/~tmm/talks/tecs08/part1.handout.pdf">
<node TEXT="Part 1: Design Models Perception Information Visualization Mini-Course TECS Week 2008  Turing - Halting problem Halting problem - In&#xef;&#xac;&#xfffd;nity Paradoxes - Lewis Carroll  Interactive Visualization of Large Graphs and Networks (PhD thesis) Chapter 5 Stanford University 2000 pp 87-122 " ID="ID_296941490" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Extending Kleenes O Using Infinite Time Turing Machines " FOLDED="true" ID="ID_588114574" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://www.researchgate.net/publication/254759702_Extending_Kleenes_O_Using_Infinite_Time_Turing_Machines">
<node TEXT="Extending Kleenes O Using Infinite Time Turing Machines Ansten M rch Klev Abstract: We define two successive extensions of Kleenes O using infinite time Turing machines." ID="ID_1323292085" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Tamara Munzner 2 7 - UBC Computer Science" FOLDED="true" ID="ID_1997855595" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://www.cs.ubc.ca/labs/imager/tr/2009/VisChapter/akp-vischapter.pdf">
<node TEXT="Tamara Munzner Visualization A major application area of computer graphics isvisualization where computer-generated images are used to help people understand both spatial and non-spatial data. Visualization is used when the goal is to augment human capabilities in situations where the problem is not suf&#xef;&#xac;&#xfffd;ciently well de&#xef;&#xac;&#xfffd;ned for a computer to" ID="ID_456598682" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Turing Machines (Stanford Encyclopedia of Philosophy)" FOLDED="true" ID="ID_1517303050" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://plato.stanford.edu/entries/turing-machine/">
<node TEXT="1. Definitions of the Turing Machine 1.1 Turing&#xe2;&#x20ac;&#x2122;s Definition. Turing introduced Turing machines in the context of research into the foundations of mathematics. More particularly he used these abstract devices to prove that there is no effective general method or procedure to solve calculate or compute every instance of the following problem:" ID="ID_487670720" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Online Turing Machine Simulator" FOLDED="true" ID="ID_174972657" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://turingmachinesimulator.com/">
<node TEXT="Interactive Turing machine simulator. Use a simple language to create compile and run your Turing machines save and share your own Turing machines." ID="ID_1152331950" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Wikipedia:Reference desk/Archives/Computing/2015 July 7" FOLDED="true" ID="ID_620539174" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://en.wikipedia.org/wiki/Wikipedia:Reference_desk/Archives/Computing/2015_July_7">
<node TEXT="I cant see how the axiom could come into play at a practical level. At a theoretical level it does though. For example Alan Turing proved that there is no general solution to the Halting problem but the proof clearly depends on the existence of an infinite number of natural numbers. Looie496 12:01 7 July 2015 (UTC)" ID="ID_1586627698" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Udi Aharoni" FOLDED="true" ID="ID_1863352853" CREATED="1566553719189" MODIFIED="1566553719189" LINK="http://zutopedia.com/udia.html">
<node TEXT="Visualization of Quantum Physics A visual demonstration of some basic quantum physics principles. A demonstration of data compression Write a piece of text and see how we compress it. Proof That Computers Cant Do Everything (The Halting Problem) Visualization of Alan Turings Halting Theorem. A Visual Riddle (The Epitaph of Stevinus)" ID="ID_1600056378" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
</node>
<node TEXT="Turing Machine&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xe2;&#x201e;&#xa2;s Halting Problem Code#$D$#" FOLDED="true" ID="ID_1028610422" CREATED="1566553719189" MODIFIED="1566553719189">
<icon BUILTIN="stop-sign"/>
<node TEXT="Halting problem - Wikipedia" FOLDED="true" ID="ID_790839463" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://en.wikipedia.org/wiki/Halting_problem">
<node TEXT="Background. The halting problem is a decision problem about properties of computer programs on a fixed Turing-complete model of computation i.e. all programs that can be written in some given programming language that is general enough to be equivalent to a Turing machine. The problem is to determine given a program and an input to the program whether the program will eventually halt when " ID="ID_1265471258" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Halting Problem - YouTube" FOLDED="true" ID="ID_718726808" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://www.youtube.com/watch?v=QlhXUx7bwms">
<node TEXT="This feature is not available right now. Please try again later." ID="ID_319293926" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="The Unsolvability of the Halting Problem - YouTube" FOLDED="true" ID="ID_960297525" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://www.youtube.com/watch?v=_nDTZOvAwEc">
<node TEXT="Thank you Alan Turing. Heres me describing why the Halting Problem in automata theory is unsolvable while working in the Applied Analytics team at Legendary Entertainment. I designed the " ID="ID_1906680064" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="How to Describe Alan Turings Halting Problem to a 13 Year " FOLDED="true" ID="ID_361447987" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://www.huffpost.com/entry/how-to-describing-alan-turings-halting-problem-to_b_58d1ae08e4b062043ad4add7">
<node TEXT="How would you describe Turings Halting Problem to a 13-year-old? originally appeared on Quora-the place to gain and share knowledge empowering people to learn from others and better understand the world. A reasonably curious and patient 13-year-old should have no trouble understanding the Halting " ID="ID_375862554" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="GitHub - arkenidar/turingvm_halting_busybeavers.java: A " FOLDED="true" ID="ID_436465140" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://github.com/arkenidar/turingvm_halting_busybeavers.java">
<node TEXT="A Turing Virtual Machine that detects infinite loops (thus solving the Turings Halting Problem). This code solves the Busy Beaver problem too (it relies on the solution of the Halting Problem). - arkenidar/turingvm_halting_busybeavers.java" ID="ID_14100300" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Can a program on a turing machine solve halting problem " FOLDED="true" ID="ID_1240087320" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://www.quora.com/Can-a-program-on-a-turing-machine-solve-halting-problem-partially-That-is-does-there-exist-an-algorithm-which-can-decide-every-decidable-problem-and-return-undecidable-for-the-one-it-cannot-decide-on">
<node TEXT="(A2A) Your question I think is a bit confusing. There are a few things I think you might be asking: 1. Can you construct a Turing Machine (TM) that will be able to tell if another arbitrary (TM input) combo will decide? No. Knowing if someth" ID="ID_439739827" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="Talk:Halting problem/Archive 5 - Wikipedia" FOLDED="true" ID="ID_1365634271" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://en.wikipedia.org/wiki/Talk:Halting_problem/Archive_5">
<node TEXT="(I assume the halting theorem refers to the undecidability of the halting problem.) Is there a way to make it clearer how all three of these can be true? Im certainly missing how the first two statements dont imply that Turing showed the halting problem undecidable. Theodore.norvell 01:42 7 September 2012 (UTC)" ID="ID_308531238" CREATED="1566553719189" MODIFIED="1566553719189"/>
</node>
<node TEXT="1266: Halting Problem - explain xkcd" FOLDED="true" ID="ID_919988764" CREATED="1566553719189" MODIFIED="1566553719189" LINK="https://explainxkcd.com/wiki/index.php/1266:_Halting_Problem">
<node TEXT="Explanation []. In 1936 Alan Turing proved that its not possible for an algorithm to decide whether an arbitrary program will eventually halt or run forever. This was later called the Halting problem by Martin Davis.The official definition of the problem is to write a program (actually a Turing Machine) that accepts as parameters a program and its parameters." ID="ID_155630063" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Turing Machines | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_793845707" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://brilliant.org/wiki/turing-machines/">
<node TEXT="A Turing machine is an abstract computational model that performs computations by reading and writing to an infinite tape. Turing machines provide a powerful computational model for solving problems in computer science and testing the limits of computation &#xe2;&#x20ac;&#x201d; are there problems that we simply cannot solve? Turing machines are similar to finite automata/finite state machines but have the " ID="ID_1231764010" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="5.2 Turing Machines - introcs.cs.princeton.edu" FOLDED="true" ID="ID_406953262" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://introcs.cs.princeton.edu/java/52turing/">
<node TEXT="5.2 Turing Machines. This section under major construction. Turing machine. The Turing machine is one of the most beautiful and intriguing intellectual discoveries of the 20th century. Turing machine is a simple and useful abstract model of computation (and digital computers) that is general enough to embody any computer program." ID="ID_890634654" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="The Halting Problem and the Church-Turing Thesis &#xe2;&#x20ac;&#x201c; Chris " FOLDED="true" ID="ID_1626368065" CREATED="1566553719190" MODIFIED="1566553719190" LINK="https://blogs.msdn.microsoft.com/chrsmith/2009/11/30/the-halting-problem-and-the-church-turing-thesis/">
<node TEXT="The Halting Problem and the Church-Turing Thesis  While you can try to write some amazing library for detecting infinite loops I can write the same code using a Turing machine. And since it has been proving that no Turing machine can solve the Halting Problem neither can your amazing library.  The Halting Problem asks if an arbitrary " ID="ID_11776941" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
<node TEXT="Halting Problem Halting Problem is Undecidable" FOLDED="true" ID="ID_999750648" CREATED="1566553719190" MODIFIED="1566553719190" LINK="http://www.cs.virginia.edu/~evans/cs3102-s10/classes/class18/class18.pdf">
<node TEXT="Halting Problem is Undecidable What are LBLAMB MA? Reduction = Proof by Contradiction and Construction Assume MBis a TM that decides LB. Do a construction using MBto build MA a TM that decides LA. Since LA is undecidable MA cannot exist. We have reached a contradiction so (as long as nothing else is questionable) our assumption must be wrong." ID="ID_1530168903" CREATED="1566553719190" MODIFIED="1566553719190"/>
</node>
</node>
</node>
</node>
<node TEXT="Pushdown Automata(PDA) " POSITION="left" ID="ID_1566675529" CREATED="1566881027717" MODIFIED="1566881027717" Folded="true">
<edge COLOR="#6bf67b"/>
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Basic Definitions" FOLDED="true" ID="ID_702922330" CREATED="1566881027718" MODIFIED="1566881027718" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Basic Definitions Pushdown Automata  Interactive Visualisation#$D$#" FOLDED="true" ID="ID_108020719" CREATED="1566553719191" MODIFIED="1566553719191">
<icon BUILTIN="stop-sign"/>
<node TEXT="Push Down Automata (PDA) ..basic - YouTube" FOLDED="true" ID="ID_767276287" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://www.youtube.com/watch?v=IvMmFkTjTBA">
<node TEXT="Push Down Automata (PDA) ..basic  The interactive transcript could not be loaded.  Definition of Pushdown Automata(PDA) Types of Moves in PDA(Hindi) " ID="ID_1209346994" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Lecture 20/65: PDAs: Pushdown Automata - YouTube" FOLDED="true" ID="ID_922287008" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://www.youtube.com/watch?v=s5cB_xg9NGg">
<node TEXT="Theory Of Computation Lecture 63--Conversion of Finite automata to Regular Expression and vice versa - Duration: 42:50. Gate Lectures by Ravindrababu Ravula 367393 views" ID="ID_520649384" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Interactive Pushdown Automata Animation | Jennifer McDonald" FOLDED="true" ID="ID_930329107" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://www.researchgate.net/publication/221536764_Interactive_Pushdown_Automata_Animation">
<node TEXT="The tool uses high quality graphics. McDonald [50] developed an Interactive Pushdown Automata Animation that allows the user to graphically design and simulate pushdown automata. Using this tool " ID="ID_1956628426" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Increasing visualization and interaction in the automata " FOLDED="true" ID="ID_543487752" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://www.researchgate.net/publication/221537777_Increasing_visualization_and_interaction_in_the_automata_theory_course">
<node TEXT="In this paper we describe how to increase the visualization and interaction in the automata theory course through the use of the tools JFLAP and Pate." ID="ID_1625747412" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Automata Theory Tutorial - tutorialspoint.com" FOLDED="true" ID="ID_529450057" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://www.tutorialspoint.com/automata_theory/">
<node TEXT="Automata Theory is a branch of computer science that deals with designing abstract selfpropelled computing devices that follow a predetermined sequence of operations automatically. An automaton with a finite number of states is called a Finite Automaton.This is a brief and concise tutorial that introduces the fundamental concepts of Finite Automata Regular Languages and Pushdown Automata " ID="ID_1206809003" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Automata theory - Wikipedia" FOLDED="true" ID="ID_705111871" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://en.wikipedia.org/wiki/Theory_of_automata">
<node TEXT="Automata theory is the study of abstract machines and automata as well as the computational problems that can be solved using them. It is a theory in theoretical computer science and discrete mathematics (a subject of study in both mathematics and computer science).The word automata (the plural of automaton) comes from the Greek word &#xce;&#xb1;&#xe1;&#xbd;&#xfffd;&#xcf;&#x201e;&#xcf;&#x152;&#xce;&#xbc;&#xce;&#xb1;&#xcf;&#x201e;&#xce;&#xb1; which means self-acting." ID="ID_1085703262" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Finite-state machine - Wikipedia" FOLDED="true" ID="ID_177304087" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://en.wikipedia.org/wiki/Finite-state_machine">
<node TEXT="A finite-state machine (FSM) or finite-state automaton (FSA plural: automata) finite automaton or simply a state machine is a mathematical model of computation.It is an abstract machine that can be in exactly one of a finite number of states at any given time. The FSM can change from one state to another in response to some external inputs; the change from one state to another is called a " ID="ID_1049198362" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Fifty years of automata simulation: a review - Duke University" FOLDED="true" ID="ID_745490073" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://users.cs.duke.edu/~rodger/jflappapers/ChakrabortyX2011.pdf">
<node TEXT="Fifty Years of Automata Simulation: A Review 62cm a Inroads 2011 December &#xe2;&#x20ac;&#xa2; Vol. 2 &#xe2;&#x20ac;&#xa2; No. 4 tomata. In this language the description of a finite automaton is writ-ten in a formal textbook-like way (Figure 4). A finite automaton mod-eled in this language is compiled by using a fast single-pass compiler." ID="ID_676530337" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Syllabus Book - uni-due.de" FOLDED="true" ID="ID_136987829" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://www.uni-due.de/imperia/md/content/ise/curriculum/m-ce_isv__po08_englisch.pdf">
<node TEXT="The students will acquire knowledge in the area of automata and formal languages. They will become acquainted with regular as well as context-free languages and the corresponding variants of automata (finite automata pushdown automata). They will be able to construct automata and grammars themselves and to argue about their adequacy." ID="ID_1119557957" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Pushdown Automata | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_489242046" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://brilliant.org/wiki/pushdown-automata/">
<node TEXT="Pushdown automata are nondeterministic finite state machines augmented with additional memory in the form of a stack which is why the term &#xe2;&#x20ac;&#x153;pushdown&#xe2;&#x20ac;&#xfffd; is used as elements are pushed down onto the stack. Pushdown automata are computational models&#xe2;&#x20ac;&#x201d;theoretical computer-like machines&#xe2;&#x20ac;&#x201d;that can do more than a finite state machine but less than a Turing machine." ID="ID_696722543" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="A Medley of Potpourri: Automata theory" FOLDED="true" ID="ID_606034157" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://amedleyofpotpourri.blogspot.com/2018/11/automata-theory.html">
<node TEXT="The study of the mathematical properties of such automata is automata theory. The picture is a visualization of an automaton that recognizes strings containing an even number of 0s.The automaton starts in state S1 and transitions to the non-accepting state S2 upon reading the symbol 0.Reading another 0 causes the automaton to transition back to the accepting state S1." ID="ID_1520359891" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="What is computation? | WIRED" FOLDED="true" ID="ID_384027532" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://www.wired.com/2010/11/what-is-computation/">
<node TEXT="What is computation? *Not too surprising to discover that computer-science scholars don&#xe2;&#x20ac;&#x2122;t know the answer to this seemingly simple question. This article has been reproduced in a new format and " ID="ID_648350946" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
</node>
<node TEXT="Basic Definitions Pushdown Automata  Code#$D$#" FOLDED="true" ID="ID_1383876314" CREATED="1566553719191" MODIFIED="1566553719191">
<icon BUILTIN="stop-sign"/>
<node TEXT="Definition of Pushdown Automata" FOLDED="true" ID="ID_918858570" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://www.theoryofcomputation.co/definition-pushdown-automata/">
<node TEXT="A stack allows pushdown automata a limited amount of memory. A pushdown automaton can read from push (add) to or pop (remove) the stack. The transition functions that describe the pushdown automaton (usually represented by labels on the arrows between the state circles) tell the automaton what to do. Pushdown automata accept context-free " ID="ID_1668620334" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Pushdown Automata | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1636802248" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://brilliant.org/wiki/pushdown-automata/">
<node TEXT="Pushdown automata are nondeterministic finite state machines augmented with additional memory in the form of a stack which is why the term &#xe2;&#x20ac;&#x153;pushdown&#xe2;&#x20ac;&#xfffd; is used as elements are pushed down onto the stack. Pushdown automata are computational models&#xe2;&#x20ac;&#x201d;theoretical computer-like machines&#xe2;&#x20ac;&#x201d;that can do more than a finite state machine but less than a Turing machine." ID="ID_1373423012" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Pushdown automaton - Wikipedia" FOLDED="true" ID="ID_1652563647" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://en.wikipedia.org/wiki/Pushdown_automaton">
<node TEXT="A pushdown automaton reads a given input string from left to right. In each step it chooses a transition by indexing a table by input symbol current state and the symbol at the top of the stack. A pushdown automaton can also manipulate the stack as part of performing a transition." ID="ID_1447513997" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Theory of Computation | Pushdown Automata - GeeksforGeeks" FOLDED="true" ID="ID_477998123" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://www.geeksforgeeks.org/theory-of-computation-pushdown-automata/">
<node TEXT="Pushdown Automata is a finite automata with extra memory called stack which helps Pushdown automata to recognize Context Free Languages. A Pushdown Automata (PDA) can be defined as : Q is the set of states &#xe2;&#x2c6;&#x2018;is the set of input symbols; &#xce;&#x201c; is the set of pushdown symbols (which can be pushed and popped from stack) q0 is the initial state" ID="ID_1471869146" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="What does pushdown automaton mean? - definitions.net" FOLDED="true" ID="ID_1470752910" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://www.definitions.net/definition/pushdown%20automaton">
<node TEXT="Definition of pushdown automaton in the Definitions.net dictionary. Meaning of pushdown automaton. What does pushdown automaton mean? Information and translations of pushdown automaton in the most comprehensive dictionary definitions resource on the web." ID="ID_1820666455" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Automata-based programming - Wikipedia" FOLDED="true" ID="ID_962629006" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://en.wikipedia.org/wiki/Automata-based_programming">
<node TEXT="Automata-based programming is a programming paradigm in which the program or part of it is thought of as a model of a finite state machine (FSM) or any other (often more complicated) formal automaton (see automata theory).Sometimes a potentially infinite set of possible states is introduced and such a set can have a complicated structure not just an enumeration." ID="ID_35187744" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Pushdown Automata theory of computation in hindi | PDA in " FOLDED="true" ID="ID_424122904" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://www.youtube.com/watch?v=Gi44PRorYow">
<node TEXT="In this video lecture you&#xe2;&#x20ac;&#x2122;ll be learning about the basic definition of Pushdown automata. This video discusses in depth about the Pushdown automata its definition and its basic diagram." ID="ID_49998026" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Pushdown Automata - web.cs.hacettepe.edu.tr" FOLDED="true" ID="ID_629657129" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://web.cs.hacettepe.edu.tr/~ilyas/Courses/BBM401/lec06_PushdownAutomata.pdf">
<node TEXT="Deterministic Pushdown Automata(DPDA) &#xe2;&#x20ac;&#xa2; While PDAs are by definition allowed to be nondeterministic the deterministic subcase is quite important. &#xe2;&#x20ac;&#xa2; In particular parsers generally behave like deterministic PDAs so the class of languages that can be accepted by these automata is interesting" ID="ID_585524710" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="#38 Pushdown Automata in hindi | pda in hindi | pda " FOLDED="true" ID="ID_1176556050" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://www.youtube.com/watch?v=3wl62-zqa_E">
<node TEXT="In this video you will learn how to convertregular expression to pushdown automata pda in hindi. we will discus pda automata solved examples and problems in urdu. formal definition of pushdown " ID="ID_1967062461" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Theory Of Computation and Automata Tutorials" FOLDED="true" ID="ID_392093650" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://www.geeksforgeeks.org/theory-of-computation-automata-tutorials/">
<node TEXT="Last Minute Notes(LMNs) &#xe2;&#x20ac;&#x2dc;Quizzes&#xe2;&#x20ac;&#x2122; on Theory Of Computation ! &#xe2;&#x20ac;&#x2dc;Practice Problems&#xe2;&#x20ac;&#x2122; on Theory of Computation ! Please write comments if you find anything incorrect or you want to share more information about the topic discussed above." ID="ID_1444379071" CREATED="1566553719191" MODIFIED="1566553719191"/>
</node>
<node TEXT="Automata Theory Tutorial - tutorialspoint.com" FOLDED="true" ID="ID_1305143104" CREATED="1566553719191" MODIFIED="1566553719191" LINK="https://www.tutorialspoint.com/automata_theory/">
<node TEXT="Automata Theory is a branch of computer science that deals with designing abstract selfpropelled computing devices that follow a predetermined sequence of operations automatically. An automaton with a finite number of states is called a Finite Automaton.This is a brief and concise tutorial that introduces the fundamental concepts of Finite Automata Regular Languages and Pushdown Automata " ID="ID_644761666" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="PDA  Context-Free Grammar - tutorialspoint.com" FOLDED="true" ID="ID_48643048" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://www.tutorialspoint.com/automata_theory/pda_context_free_grammar">
<node TEXT="If a grammar G is context-free we can build an equivalent nondeterministic PDA which accepts the language that is produced by the context-free grammar G.A parser can be built for the grammar G.. Also if P is a pushdown automaton an equivalent context-free grammar G can be constructed where. L(G) = L(P) In the next two topics we will discuss how to convert from PDA to CFG and vice versa." ID="ID_549471594" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
</node>
</node>
<node TEXT="Equivalence of Acceptance by Finite State  Empty stack" FOLDED="true" ID="ID_1862151438" CREATED="1566881027719" MODIFIED="1566881027719" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Equivalence of Acceptance by Finite State  Empty stack Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1626531072" CREATED="1566553719192" MODIFIED="1566553719192">
<icon BUILTIN="stop-sign"/>
<node TEXT="Pushdown Automata (Introduction) - YouTube" FOLDED="true" ID="ID_1946011885" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://www.youtube.com/watch?v=4ejIAmp_Atw">
<node TEXT="The interactive transcript could not be loaded.  Difference between pushdown automata and finite state machine 3. Stack in pushdown automata 4. Push and pop operations in stack  Equivalence " ID="ID_1764142774" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="Finite-state machine - Wikipedia" FOLDED="true" ID="ID_1036278321" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://en.wikipedia.org/wiki/Accepting_state">
<node TEXT="A finite-state machine (FSM) or finite-state automaton (FSA plural: automata) finite automaton or simply a state machine is a mathematical model of computation.It is an abstract machine that can be in exactly one of a finite number of states at any given time. The FSM can change from one state to another in response to some external inputs; the change from one state to another is called a " ID="ID_1067811397" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="finite automata - Acceptance of empty  - Stack Exchange" FOLDED="true" ID="ID_25217370" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://cs.stackexchange.com/questions/53005/acceptance-of-empty-string-by-nondeterministic-automaton">
<node TEXT="Acceptance of empty string by nondeterministic automaton. Ask Question 1  Youre confusing the concept of the empty string $\varepsilon$ with the concept of an $\varepsilon$-transition.  Finding the regular expression equivalent for the given finite automaton. 1." ID="ID_525627229" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="TOC Chapter 7 - blogspot.com" FOLDED="true" ID="ID_1443539854" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://girdhargopalbansal.blogspot.com/2013/01/toc-chapter-7.html">
<node TEXT="The pushdown automaton is a finite automaton with an additional tape which behaves like a stack. We consider two ways of acceptance and show the equivalence between them. The equivalence between context-free grammars (CFG) and pushdown automata is also proved." ID="ID_1826710636" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="finite state machines &#xe2;&#x20ac;&#x201c; Math &#xe2;&#x2c6;&#xa9; Programming" FOLDED="true" ID="ID_1994010773" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://jeremykun.com/tag/finite-state-machines/">
<node TEXT="Nondeterministic Finite Automata. Following the colloquial definition of nondeterminism we can design our computational system to make state transitions &#xe2;&#x20ac;&#x153;branch out.&#xe2;&#x20ac;&#xfffd; This will be made clear by a slight modification of the DFA. Definition: A nondeterministic finite automaton abbreviated NFA is a DFA with the following two modifications:" ID="ID_1529842092" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="Mod-01 Lec-36 Example continued. Finiteness of TM " FOLDED="true" ID="ID_583164885" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://www.youtube.com/watch?v=iGv2OjgKOe8">
<node TEXT="Mod-01 Lec-36 Example continued. Finiteness of TM description  Mod-01 Lec-33 Equivalence of acceptance by empty stack and acceptance by final state.  Convert Regular Expression to Finite " ID="ID_1618111416" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="GitHub - caleb531/automata: A Python library for " FOLDED="true" ID="ID_1789786843" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://github.com/caleb531/automata">
<node TEXT="Automata is a Python 3 library which implements the structures and algorithms for finite automata pushdown automata and Turing machines. The library requires Python 3.4 or newer. Reads an input string into the automaton returning the automatons final configuration (according to its subtype). If " ID="ID_723578197" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="Automata - an overview | ScienceDirect Topics" FOLDED="true" ID="ID_1022098441" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://www.sciencedirect.com/topics/computer-science/automata">
<node TEXT="PDA represents the class of push-down automata which accept on empty stack. To present such PDA as a restricted form of rewrite system we first assume that the variable set V is partitioned into disjoint sets Q (finite control states) and &#xce;&#x201c; (stack symbols)." ID="ID_105649646" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="Difference between NFA and DFA - Stack Exchange" FOLDED="true" ID="ID_1873451676" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://math.stackexchange.com/questions/563829/difference-between-nfa-and-dfa">
<node TEXT="2.Both are transition functions of automata. In DFA the next possible state is distinctly a set while in NFA each pair of state and input symbol can have many possible next states. 3.NFA can use empty string transition while DFA cannot use empty string transition. 4.NFA is easier to construct while it is more difficult to construct DFA." ID="ID_299252036" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="C++ Plus Data Structures Flashcards | Quizlet" FOLDED="true" ID="ID_1003498446" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://quizlet.com/115590738/c-plus-data-structures-flash-cards/">
<node TEXT="a design technique used with a hierarchy of classes by which each descendant class inherits the properties (data and operations) of its ancestor class; the language mechanism by which one class acquires the properties&#xe2;&#x20ac;&#x201d;data and operations&#xe2;&#x20ac;&#x201d;of another class; a mechanism for automatically sharing data and methods among members of a class and its subclasses" ID="ID_908259738" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="Model Checking Algorithm - an overview | ScienceDirect Topics" FOLDED="true" ID="ID_78835784" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://www.sciencedirect.com/topics/computer-science/model-checking-algorithm">
<node TEXT="For process theory however where automata are considered as a general computational model acceptance with empty stack provides a much better conceptual match: Reaching a PDA configuration where the stack is empty then simply corresponds to termination of the process associated with the considered pushdown automaton." ID="ID_1439888288" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="Determinism and Finite Automata &#xe2;&#x20ac;&#x201c; A Primer &#xe2;&#x20ac;&#x201c; Math " FOLDED="true" ID="ID_456298516" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://jeremykun.com/2011/07/02/determinism-and-finite-automata-a-primer/">
<node TEXT="Determinism and Finite Automata &#xe2;&#x20ac;&#x201c; A Primer.  (which is always popped) and the right hand represents any modification to the stack during state transition. This modification is always a push and can be an empty push or a push of arbitrarily many symbols.  and pop just 1&#xe2;&#x20ac;&#x2122;s until we see an empty stack. Here is a PDA which does just " ID="ID_1217543502" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
</node>
<node TEXT="Equivalence of Acceptance by Finite State  Empty stack Code#$D$#" FOLDED="true" ID="ID_163873617" CREATED="1566553719192" MODIFIED="1566553719192">
<icon BUILTIN="stop-sign"/>
<node TEXT="12. Pushdown Automata: PDA-DPDA" FOLDED="true" ID="ID_1419562893" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://www.cs.wcupa.edu/rkline/fcs/pdas.html">
<node TEXT="The empty stack is our key new requirement relative to finite state machines. The examples that we generate have very few states; in general there is so much more control from using the stack memory. Acceptance by empty stack only or final state only is addressed in problems 3.3.3 and 3.3.4. Graphical Representation and &#xce;&#xb5;-transition" ID="ID_1074006359" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="Pushdown Automata Acceptance - tutorialspoint.com" FOLDED="true" ID="ID_440541452" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://www.tutorialspoint.com/automata_theory/pushdown_automata_acceptance">
<node TEXT="Initially we put a special symbol &#xe2;&#x20ac;&#x2dc;$&#xe2;&#x20ac;&#x2122; into the empty stack. At state q 2 the w is being read. In state q 3 each 0 or 1 is popped when it matches the input. If any other input is given the PDA will go to a dead state. When we reach that special symbol &#xe2;&#x20ac;&#x2dc;$&#xe2;&#x20ac;&#x2122; we go to the accepting state q 4." ID="ID_138006181" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="Equivalence between two automata - Stack Overflow" FOLDED="true" ID="ID_1372069870" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://stackoverflow.com/questions/6905043/equivalence-between-two-automata">
<node TEXT="Which is the best or easiest method for determining equivalence between two automata? I.e. if given two finite automata A and B how can I determine whether both recognize the same language? They are both deterministic or both nondeterministic." ID="ID_1770611023" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="Pushdown Automata Acceptance by Final State" FOLDED="true" ID="ID_145096624" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://www.geeksforgeeks.org/pushdown-automata-acceptance-final-state/">
<node TEXT="Here from start state q0 and stack symbol Z final state qf &#xc9;&#x203a; F is reached when input w is consumed. The stack can contain string s which is irrelevant as final state is reached and w will be accepted. Example: Define the pushdown automata for language {a^nb^n | n  0} using final state." ID="ID_1374914438" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="Pushdown Automata (Introduction) - YouTube" FOLDED="true" ID="ID_288368415" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://www.youtube.com/watch?v=4ejIAmp_Atw">
<node TEXT="TOC: Pushdown Automata (Introduction) Topics Discussed: 1. Introduction to pushdown automata(PDA) 2. Difference between pushdown automata and finite state machine 3. Stack in pushdown automata 4 " ID="ID_1753206923" CREATED="1566553719192" MODIFIED="1566553719192"/>
</node>
<node TEXT="Pushdown automaton - Wikipedia" FOLDED="true" ID="ID_982010478" CREATED="1566553719192" MODIFIED="1566553719192" LINK="https://en.wikipedia.org/wiki/Pushdown_automaton">
<node TEXT="A finite state machine just looks at the input signal and the current state: it has no stack to work with. It chooses a new state the result of following the transition. A pushdown automaton (PDA) differs from a finite state machine in two ways: . It can use the top of the stack to decide which transition to take. It can manipulate the stack as part of performing a transition." ID="ID_1303791478" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
<node TEXT="Definition of Pushdown Automata" FOLDED="true" ID="ID_145938029" CREATED="1566553719193" MODIFIED="1566553719193" LINK="https://www.theoryofcomputation.co/definition-pushdown-automata/">
<node TEXT="In a given state PDA will read input symbol and stack symbol (top of the stack) and move to a new state and change the symbol of stack. Pushdown automata are nondeterministic finite state machines augmented with additional memory in the form of a stack which is why the term &#xe2;&#x20ac;&#x153;pushdown&#xe2;&#x20ac;&#xfffd; is used as elements are pushed down onto the stack." ID="ID_605565839" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
<node TEXT="Automata for empty language - Computer Science Stack Exchange" FOLDED="true" ID="ID_1791400299" CREATED="1566553719193" MODIFIED="1566553719193" LINK="https://cs.stackexchange.com/questions/65180/automata-for-empty-language/65186">
<node TEXT="Automata for empty language. Ask Question 4 $\begingroup$ I am trying to understand how many states should be there in a Finite Automata which does not accept anything.  Confusion regarding the Definition of 2 Way Finite State Automata? 0. Push down automata acceptance by Empty stack and final state. 3. Equivalent DPDA that always halts for " ID="ID_135032744" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
<node TEXT="Course on Theory of Computation By Professor Somenath " FOLDED="true" ID="ID_341376751" CREATED="1566553719193" MODIFIED="1566553719193" LINK="http://textofvideo.nptel.ac.in/106104028/lec33.pdf">
<node TEXT="language accepted by M by final state and here it is the language accepted by empty stack. Now as it happens one may think this is more natural because you know we are used to acceptance by final state as we had seen in the case of finite state machines but often it is easier to describe a language acceptance by this notion." ID="ID_1345173962" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
<node TEXT="Course Title: Theory of Computation Full Marks: 60+20+20 " FOLDED="true" ID="ID_1486629535" CREATED="1566553719193" MODIFIED="1566553719193" LINK="http://cdcsit.edu.np/userfiles/Theory%20of%20Computation%20(CSC257).pdf">
<node TEXT="covers the details of finite state automata regular expressions context free grammars. More the  Conversion of PDA by Final State to PDA accepting by Empty Stack and vice-versa Conversion of CFG to PDA Conversion of PDA to CFG  o Acceptance by Final State o Acceptance by Empty Stack Unit VI: Turing Machines (12 Hrs) " ID="ID_1356694501" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
<node TEXT="Automata Re-Exam Finite Automata  Regular Expressions " FOLDED="true" ID="ID_1014624729" CREATED="1566553719193" MODIFIED="1566553719193" LINK="https://quizlet.com/158234213/automata-re-exam-finite-automata-regular-expressions-chapter-2-finite-automata-flash-cards/">
<node TEXT="Start studying Automata Re-Exam Finite Automata  Regular Expressions Chapter 2: Finite Automata. Learn vocabulary terms and more with flashcards games and other study tools." ID="ID_74251462" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
<node TEXT="Automata for empty language - Stack Exchange" FOLDED="true" ID="ID_948945562" CREATED="1566553719193" MODIFIED="1566553719193" LINK="https://cs.stackexchange.com/questions/65180/automata-for-empty-language">
<node TEXT="I am trying to understand how many states should be there in a Finite Automata which does not accept anything. I thought it to be containing only one non-final state the starting state with all transitions going to itself. But one of my teachers mentioned that the set of final states cannot be empty." ID="ID_785875599" CREATED="1566553719193" MODIFIED="1566553719193"/>
</node>
</node>
</node>
<node TEXT="PDA  Context Free Language" ID="ID_1015854895" CREATED="1566881027720" MODIFIED="1566881027720" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="Equivalence of PDA and CFG" ID="ID_645981057" CREATED="1566881027720" MODIFIED="1566881027720" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="Parsing  PDA" ID="ID_194662841" CREATED="1566881027720" MODIFIED="1566881027720" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Top-Down Parsing" ID="ID_934333973" CREATED="1566881027721" MODIFIED="1566881027721" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Parsing  Push Down Automata: Top-Down Parsing Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1604745895" CREATED="1566553719195" MODIFIED="1566553719195">
<icon BUILTIN="stop-sign"/>
<node TEXT="Pushdown Automata and Parsing | SpringerLink" FOLDED="true" ID="ID_62678582" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://link.springer.com/chapter/10.1007/978-1-4471-5514-0_4">
<node TEXT="This chapter covers pushdown automata and parsing algorithms with emphasis on the application to syntax analysis. We start by introducing general and deterministic pushdown automata as recognizers of context-free and deterministic context-free languages defined by grammars." ID="ID_436384663" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="Predictive Parsing: LL(1) Table - YouTube" FOLDED="true" ID="ID_223853987" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://www.youtube.com/watch?v=XpZZrQjOAJY">
<node TEXT="CD Unit-3 Part-2 LL(1)parserFIRST  FOLLOW(tricks to find)CS6660 top down parsingpredictive parser - Duration: 21:45. gheetha indoctrinates 7590 views" ID="ID_704278635" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="LLparse and LRparse: Visual and Interactive Tools for Parsing" FOLDED="true" ID="ID_1960503066" CREATED="1566553719195" MODIFIED="1566553719195" LINK="http://www.cs.duke.edu/csed/rodger/papers/cse94.pdf">
<node TEXT="a visualization of the parsing of input strings. These  ment with the application of nite automata and push-down automata in parsing. We have developed instruc-  LL parsing is a top-down method of parsing that begins with the start symbol of a grammar uses looka-" ID="ID_882435814" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="Mod-03 Lec-05 Syntax Analysis: Context-free Grammars " FOLDED="true" ID="ID_1146500063" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://www.youtube.com/watch?v=1qOMlqE6LhU">
<node TEXT="Mod-03 Lec-05 Syntax Analysis: Context-free Grammars Pushdown Automata and Parsing Part - 1  Contex-Free Grammars and Push-Down Automata - Duration:  Top Down Parsing and Bottom Up Parsing " ID="ID_1748864720" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="What is the use of parsing? | AnswersDrive" FOLDED="true" ID="ID_1607274752" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://answersdrive.com/what-is-the-use-of-parsing-3567196">
<node TEXT="In computer science top-down parsing is a parsing strategy where one first looks at the highest level of the parse tree and works down the parse tree by using the rewriting rules of a formal grammar. LL parsers are a type of parser that uses a top-down parsing strategy." ID="ID_1215575839" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="Automata theory - Wikipedia" FOLDED="true" ID="ID_1907569586" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://en.wikipedia.org/wiki/Theory_of_automata">
<node TEXT="Automata theory is the study of abstract machines and automata as well as the computational problems that can be solved using them. It is a theory in theoretical computer science and discrete mathematics (a subject of study in both mathematics and computer science).The word automata (the plural of automaton) comes from the Greek word &#xce;&#xb1;&#xe1;&#xbd;&#xfffd;&#xcf;&#x201e;&#xcf;&#x152;&#xce;&#xbc;&#xce;&#xb1;&#xcf;&#x201e;&#xce;&#xb1; which means self-acting." ID="ID_1910944047" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="(PDF) An LALR Extension for DCGs in Dynamic Programming" FOLDED="true" ID="ID_428255872" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://www.researchgate.net/publication/2258072_An_LALR_Extension_for_DCGs_in_Dynamic_Programming">
<node TEXT="An LALR Extension for DCGs in Dynamic Programming.  LALR Parsing Push-Down Automata. 1 Introduction The popularity of DCGs is often related to natural language processing.  Incremental " ID="ID_1805619321" CREATED="1566553719195" MODIFIED="1566553719195"/>
</node>
<node TEXT="(PDF) Animating parsing algorithms - ResearchGate" FOLDED="true" ID="ID_1981452271" CREATED="1566553719195" MODIFIED="1566553719195" LINK="https://www.researchgate.net/publication/221538720_Animating_parsing_algorithms">
<node TEXT="PDF | The paper describes a package that can be used to present the parsing algorithms. The package fully animates the top-down LL(1) and bottom-up SLR(1) parsing algorithms. By full animation we " ID="ID_1976646308" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
<node TEXT="(PDF) A Comparison for Unification-Based Parsers | David " FOLDED="true" ID="ID_701621903" CREATED="1566553719196" MODIFIED="1566553719196" LINK="https://www.academia.edu/21221869/A_Comparison_for_Unification-Based_Parsers">
<node TEXT="In addition a simple view shows that the best results correspond to Galena a mixed- strategy with static predictions over Earley and classic top-down parsing. Tests using dynamic programming both for the parsing of the sole context-free backbone and whole DCG are shown in Fig. 4." ID="ID_110484539" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
<node TEXT="An Interactive and Visual Approach to Learning Computer " FOLDED="true" ID="ID_1128033942" CREATED="1566553719196" MODIFIED="1566553719196" LINK="https://users.cs.duke.edu/~rodger/talks/houston04/talkhouston04.pdf">
<node TEXT="An Interactive and Visual Approach to Learning Computer Science Susan H. Rodger Department of Computer Science Duke University November 30 2004 This work was supported by: National Science Foundation DUE-9752583 Eli Lilly CRA Distributed Mentor. Why Use an Interactive and Visual Approach? Students Ready to Learn  &#xe2;&#x20ac;&#xa2; push-down automaton " ID="ID_690472935" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
<node TEXT="Parglare - A new LR/GLR parser for Python &#xc2;&#xb7; Random bits " FOLDED="true" ID="ID_1495805625" CREATED="1566553719196" MODIFIED="1566553719196" LINK="http://www.igordejanovic.net/2017/08/09/parglare-python-parser.html">
<node TEXT="LR parsing is invented by Donald Knuth in 1965. It is based on Context-Free Grammars and Push-Down Automata (PDA) construction process which if successful proves that the grammar is indeed LR(1) and that any input that correspond to the grammar can be parsed deterministically. I wanted parglare to be a scannerless parser." ID="ID_69230535" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
<node TEXT="sidBison: A Stepwise Interactive Debugger for Bison Tufts " FOLDED="true" ID="ID_1783834410" CREATED="1566553719196" MODIFIED="1566553719196" LINK="http://siddharthaprasad.com/documents/sidBison.pdf">
<node TEXT="University of Illinois at Chicago. It generates an interactive interface that allows a user to step through the parsing process presenting information in terms of a push-down automaton and its state and token stacks [11]. 10" ID="ID_735621307" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
</node>
<node TEXT="Parsing  Push Down Automata: Top-Down Parsing Code#$D$#" FOLDED="true" ID="ID_922119993" CREATED="1566553719196" MODIFIED="1566553719196">
<icon BUILTIN="stop-sign"/>
<node TEXT="Pushdown Automata and Parsing - tutorialspoint.com" FOLDED="true" ID="ID_1576519994" CREATED="1566553719196" MODIFIED="1566553719196" LINK="https://www.tutorialspoint.com/automata_theory/pda_and_parsing">
<node TEXT="Bottom-Up Parser &#xe2;&#x2c6;&#x2019; Bottom-up parsing starts from the bottom with the string and comes to the start symbol using a parse tree. Design of Top-Down Parser. For top-down parsing a PDA has the following four types of transitions &#xe2;&#x2c6;&#x2019; Pop the non-terminal on the left hand side of the production at the top of the stack and push its right-hand side " ID="ID_165113686" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
<node TEXT="SI413 Class 8: Top-down and Bottom-up parsing" FOLDED="true" ID="ID_1062604989" CREATED="1566553719196" MODIFIED="1566553719196" LINK="https://www.usna.edu/Users/cs/lmcdowel/courses/si413/F10/classes/L08/Class.html">
<node TEXT="In top-down parsing we pop a non-terminal off the stack look for a rule with that symbol on the lef-hand side then push the symbols comprising the righ-hand side of that rule onto the stack (in reverse order actually). If a bottom-up parser successfully parses a string we should finish with" ID="ID_954770046" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
<node TEXT="Syntax Analysis: - Context-free Grammars Pushdown " FOLDED="true" ID="ID_850174932" CREATED="1566553719196" MODIFIED="1566553719196" LINK="https://nptel.ac.in/courses/106108113/module3/Lecture5.pdf">
<node TEXT="Parsing context-free languages: push-down automata Top-down parsing: LL(1) and recursive-descent parsing Bottom-up parsing: LR-parsing Y.N. Srikant Parsing. Grammars Every programming language has precise grammar rules that describe the syntactic structure of well-formed programs" ID="ID_656819170" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
<node TEXT="Pushdown Automata and Parsing | SpringerLink" FOLDED="true" ID="ID_1444275889" CREATED="1566553719196" MODIFIED="1566553719196" LINK="https://link.springer.com/chapter/10.1007/978-1-4471-5514-0_4">
<node TEXT="This chapter covers pushdown automata and parsing algorithms with emphasis on the application to syntax analysis. We start by introducing general and deterministic pushdown automata as recognizers of context-free and deterministic context-free languages defined by grammars." ID="ID_1591907554" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
<node TEXT="Top Down Parsing - YouTube" FOLDED="true" ID="ID_1364981313" CREATED="1566553719196" MODIFIED="1566553719196" LINK="https://www.youtube.com/watch?v=WYb-Iblk7J0">
<node TEXT="Top Down Parsing watch more videos at https://www.tutorialspoint.com/videotutorials/index.htm Lecture By: Mr. Arnab Chakraborty Tutorials Point India Privat" ID="ID_11567344" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
<node TEXT="1 Determinism and Parsing - Computer Science" FOLDED="true" ID="ID_1542475615" CREATED="1566553719196" MODIFIED="1566553719196" LINK="https://www.cs.unc.edu/~plaisted/comp455/slides/parse3.7.pdf">
<node TEXT="&#xe2;&#x20ac;&#xa2; The push-down automaton from lemma 3.4.1 constructs a left-most derivation. &#xe2;&#x20ac;&#xa2; The idea of top-down parsing is to try to make this push-down automa-ton deterministic both by modifying the grammar (left factoring and left recursion removal) and by modifying the push-down automaton (one-symbol look-ahead)." ID="ID_161114580" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
<node TEXT="parsing - LL top-down parser from CST to AST - Stack Overflow" FOLDED="true" ID="ID_481396474" CREATED="1566553719196" MODIFIED="1566553719196" LINK="https://stackoverflow.com/questions/54706455/ll-top-down-parser-from-cst-to-ast">
<node TEXT="I am currently learning about syntax analysis and more especially top-down parsing. I know the terminology and the difference with bottom-up LR parsers and since top-down LL parsers are easier to implement by hand I am looking forward to make my own." ID="ID_1580383228" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
<node TEXT="Compiler Design - Top-Down Parser - tutorialspoint.com" FOLDED="true" ID="ID_1727386567" CREATED="1566553719196" MODIFIED="1566553719196" LINK="https://www.tutorialspoint.com/compiler_design/compiler_design_top_down_parser">
<node TEXT="The types of top-down parsing are depicted below: Recursive Descent Parsing. Recursive descent is a top-down parsing technique that constructs the parse tree from the top and the input is read from left to right. It uses procedures for every terminal and non-terminal entity. This parsing technique recursively parses the input to make a parse " ID="ID_571676422" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
<node TEXT="Top Down Parsing Example - University of Adelaide" FOLDED="true" ID="ID_124496409" CREATED="1566553719196" MODIFIED="1566553719196" LINK="https://cs.adelaide.edu.au/~charles/lt/Lectures/17-TheoryLL1.pdf">
<node TEXT="A top-down parser constructs a leftmost parse &#xe2;&#x20ac;&#x201d;We will always be looking at the leftmost nonterminal. This follows the push down automaton model of the previous lecture The parser must choose the correct production from the set of productions that correspond to the current state of the parse." ID="ID_1997452586" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
<node TEXT="Sample Parsers - Dick Grune" FOLDED="true" ID="ID_1044020181" CREATED="1566553719196" MODIFIED="1566553719196" LINK="https://dickgrune.com/Books/PTAPG_2nd_Edition/SampleParsers/">
<node TEXT="Sample Parsers to Parsing Techniques: A Practical Guide - Second Edition  but some are about push-down automata or other related subjects. The parsers may be interpreters or samples of code a parser generator could generate. The code size of the programs varies between 70 and 1500 lines of code.  Interpreter for the Top-Down Unger Parser " ID="ID_101652300" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
<node TEXT="Syntax Analysis: - Context-free Grammars Pushdown " FOLDED="true" ID="ID_1231351383" CREATED="1566553719196" MODIFIED="1566553719196" LINK="https://nptel.ac.in/courses/106108113/module3/Lecture11.pdf">
<node TEXT="Parsing context-free languages: push-down automata (covered in lectures 1 and 2) Top-down parsing: LL(1) parsing (covered in lectures 2 and 3)  Actions are translated into C-code which are executed just before a reduction is performed by the parser Y.N. Srikant YACC. Lexical Analysis" ID="ID_628550428" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
</node>
</node>
</node>
<node TEXT="Top-down Parsing Using Deterministic PDA" ID="ID_220383283" CREATED="1566881027723" MODIFIED="1566881027723" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Top-down Parsing Using Deterministic Push Down Automata Interactive Visualisation#$D$#" FOLDED="true" ID="ID_148320217" CREATED="1566553719196" MODIFIED="1566553719196">
<icon BUILTIN="stop-sign"/>
<node TEXT="Pushdown Automata and Parsing | SpringerLink" FOLDED="true" ID="ID_1412250192" CREATED="1566553719196" MODIFIED="1566553719196" LINK="https://link.springer.com/chapter/10.1007/978-1-4471-5514-0_4">
<node TEXT="This chapter covers pushdown automata and parsing algorithms with emphasis on the application to syntax analysis. We start by introducing general and deterministic pushdown automata as recognizers of context-free and deterministic context-free languages defined by grammars." ID="ID_1229204825" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
<node TEXT="Increasing Visualization and Interaction in the Automata " FOLDED="true" ID="ID_1785651476" CREATED="1566553719196" MODIFIED="1566553719196" LINK="https://www.researchgate.net/publication/2369575_Increasing_Visualization_and_Interaction_in_the_Automata_Theory_Course">
<node TEXT="This tool is used to design and simulate deterministic and non-deterministic versions of finite automata pushdown automata and Turing machines.  Students can work in an interactive way using a " ID="ID_1807266193" CREATED="1566553719196" MODIFIED="1566553719196"/>
</node>
<node TEXT="Automata theory - Wikipedia" FOLDED="true" ID="ID_768399054" CREATED="1566553719196" MODIFIED="1566553719196" LINK="https://en.wikipedia.org/wiki/Automaton_theory">
<node TEXT="Automata theory is the study of abstract machines and automata as well as the computational problems that can be solved using them. It is a theory in theoretical computer science and discrete mathematics (a subject of study in both mathematics and computer science).The word automata (the plural of automaton) comes from the Greek word &#xce;&#xb1;&#xe1;&#xbd;&#xfffd;&#xcf;&#x201e;&#xcf;&#x152;&#xce;&#xbc;&#xce;&#xb1;&#xcf;&#x201e;&#xce;&#xb1; which means self-acting." ID="ID_1154940439" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="FAdo and GUItar: tools for automata manipulation and " FOLDED="true" ID="ID_1680016206" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://www.researchgate.net/profile/Rogerio_Reis2/publication/267199057_FAdo_and_GUItar_Tools_for_Automata_Manipulation_and_Visualization/links/545532450cf2bccc490ccae8.pdf?inViewer=truepdfJsDownload=truedisableCoverPage=trueorigin=publication_detail">
<node TEXT="FAdo and GUItar: tools for automata manipulation and visualization? Andr e Almeida Marco Almeida?? Jos e Alves Nelma Moreira Rog erio Reis fbernarduhsobuymfanamrvrg@ncc.up.pt" ID="ID_1245439528" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="Visual and Interactive Tools - users.cs.duke.edu" FOLDED="true" ID="ID_1046885555" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://users.cs.duke.edu/~rodger/tools/">
<node TEXT="The conversions are nondeterministic finite automaton (NFA) to deterministic finite automaton (DFA) DFA to minimum state DFA NFA to regular grammar regular grammar to NFA nondeterministic pushdown automaton (NPDA) to context-free grammar (CFG) and three algorithms for CFG to NPDA.   parsing the conversion of an automaton into an " ID="ID_877744648" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="LLparse and LRparse: visual and interactive tools for parsing" FOLDED="true" ID="ID_1408676778" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://www.academia.edu/2792449/LLparse_and_LRparse_visual_and_interactive_tools_for_parsing">
<node TEXT="Both parsing methods can be modeled using References a pushdown automata. Furthermore the LR parsing process contains the construction of a DFA that mod- [1] A. Aho R. Sethi and J. Ullman Compilers: Prin- els the contents of the top of the parsing stack." ID="ID_1932316302" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="A Visual and Interactive Automata Theory Course with JFLAP 4" FOLDED="true" ID="ID_1236738926" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://users.cs.duke.edu/~rodger/jflappapers/Rodger2004.pdf">
<node TEXT="A Visual and Interactive Automata Theory Course with JFLAP 4.0 Ryan Cavalcante Dept of Computer Science  JFLAP automata pushdown automata Turing machine grammar SLR parsing LL parsing L-system 1. INTRODUCTION  JFLAP 4.0 takes a top-down approach. The user works in the same direction the parser does and observes and in- " ID="ID_1261166133" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="MCA SYLLABUS - blogspot.com" FOLDED="true" ID="ID_1489176829" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://student2035.blogspot.com/">
<node TEXT="MCA - MCA 2.1.1 Theory of Computation With effect from 2004-05 admitted batch  &#xe2;&#x20ac;&#x201c; Pushdown Automata and Context-Free Grammar &#xe2;&#x20ac;&#x201c; Properties. of Context-Free Languages &#xe2;&#x20ac;&#x201c; Closure Properties &#xe2;&#x20ac;&#x201c; Periodicity . Properties &#xe2;&#x20ac;&#x201c; Determinism and Parsing &#xe2;&#x20ac;&#x201c; Deterministic Pushdown. Automata and Context &#xe2;&#x20ac;&#x201c; Free Languages &#xe2;&#x20ac;&#x201c; Top- down Parsing " ID="ID_1898006843" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="Using hands-on visualizations to teach computer science " FOLDED="true" ID="ID_1814144862" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://www.academia.edu/2792489/Using_hands-on_visualizations_to_teach_computer_science_from_beginning_courses_to_advanced_courses">
<node TEXT="Using Hands-On Visualizations to Teach Computer Science from Beginning Courses to Advanced Courses Susan H. Rodger&#xe2;&#x2c6;&#x2014; Department of Computer Science Duke University Durham NC 27705 rodger@cs.duke.edu Abstract ton especially if the automaton is nondeterministic." ID="ID_1150228432" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="Parametric Shape Analysis via 3-Valued Logic" FOLDED="true" ID="ID_1052821994" CREATED="1566553719197" MODIFIED="1566553719197" LINK="http://www.cs.tau.ac.il/~maon/teaching/2016-2017/compilation/compilation1617a-lec3-parsing.pptx">
<node TEXT="Pushdown automaton uses. Prediction stack. Input stream. Transition table. nonterminals x tokens - production alternative. Entry indexed by nonterminal N and token t contains the alternative of N that must be predicated when current input starts with t. LL(k) parsing via pushdown automata" ID="ID_1709844629" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="What is the use of parsing? | AnswersDrive" FOLDED="true" ID="ID_389289130" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://answersdrive.com/what-is-the-use-of-parsing-3567196">
<node TEXT="Pushdown Automata  Parsing. Advertisements.  top-down parsing is a parsing strategy where one first looks at the highest level of the parse tree and works down the parse tree by using the  is a program usually part of a compiler that receives input in the form of sequential source program instructions interactive online commands " ID="ID_844271777" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="Preface - cs.duke.edu" FOLDED="true" ID="ID_248364307" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://www2.cs.duke.edu/csed/jflap/jflapbook/preface.pdf">
<node TEXT="for experimenting with pushdown automata and over the years with the help of many undergraduate and graduate students FLAP was created and eventually evolved into JFLAP. Susan Rodger This book is a hands-on guide through the Java Formal Language and Automata Package (JFLAP) an interactive visualization and teaching tool for formal languages." ID="ID_774861264" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
</node>
<node TEXT="Top-down Parsing Using Deterministic Push Down Automata Code#$D$#" FOLDED="true" ID="ID_1791133325" CREATED="1566553719197" MODIFIED="1566553719197">
<icon BUILTIN="stop-sign"/>
<node TEXT="1 Determinism and Parsing - Computer Science" FOLDED="true" ID="ID_1897923277" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://www.cs.unc.edu/~plaisted/comp455/slides/parse3.7.pdf">
<node TEXT="&#xe2;&#x20ac;&#xa2; The push-down automaton from lemma 3.4.1 constructs a left-most derivation. &#xe2;&#x20ac;&#xa2; The idea of top-down parsing is to try to make this push-down automa-ton deterministic both by modifying the grammar (left factoring and left recursion removal) and by modifying the push-down automaton (one-symbol look-ahead)." ID="ID_878451913" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="ALGORITHM to simulate any Deterministic Pushdown Automata " FOLDED="true" ID="ID_1176313633" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://stackoverflow.com/questions/15827390/algorithm-to-simulate-any-deterministic-pushdown-automata-dpda">
<node TEXT="how to write a program that can model any Deterministic Pushdown Automata (DPDA) the user should enter number of states transition functions input symbols the program should model the pda requested for and test for the acceptance or rejection of random strings entered by the user" ID="ID_759046993" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="Pushdown Automata  Parsing in Automata Theory Tutorial " FOLDED="true" ID="ID_1406139716" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://www.wisdomjobs.com/e-university/automata-theory-tutorial-352/pushdown-automata-parsing-25763.html">
<node TEXT="Pushdown Automata  Parsing in Automata Theory - Pushdown Automata  Parsing in Automata Theory courses with reference manuals and examples pdf.  Pushdown Automata Acceptance:  Bottom-Up Parser &#xe2;&#x2c6;&#x2019; Bottom-up parsing starts from the bottom with the string and comes to the start symbol using a parse tree. Design of Top-Down Parser. For top " ID="ID_1261688147" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="Pushdown automaton - Wikipedia" FOLDED="true" ID="ID_31387587" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://en.wikipedia.org/wiki/Push-down_automata">
<node TEXT="In the theory of computation a branch of theoretical computer science a pushdown automaton (PDA) is a type of automaton that employs a stack.. Pushdown automata are used in theories about what can be computed by machines. They are more capable than finite-state machines but less capable than Turing machines. Deterministic pushdown automata can recognize all deterministic context-free " ID="ID_1559374475" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="Pushdown Automata and Parsing - tutorialspoint.com" FOLDED="true" ID="ID_348077977" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://www.tutorialspoint.com/automata_theory/pda_and_parsing">
<node TEXT="Pushdown Automata and Parsing - Learn Automata concepts in simple and easy steps starting from Introduction Deterministic Finite Automata Non-Deterministic Finite Automata NDFA to DFA Conversion DFA Minimization Moore and Mealy Machines Introduction to Grammars Language Generated by Grammars Chomsky Grammar Classification Regular Expressions Regular Sets Ardens Theorem " ID="ID_1148056941" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="Pushdown Automata and Parsing | SpringerLink" FOLDED="true" ID="ID_139238243" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://link.springer.com/chapter/10.1007/978-1-4471-5514-0_4">
<node TEXT="This chapter covers pushdown automata and parsing algorithms with emphasis on the application to syntax analysis. We start by introducing general and deterministic pushdown automata as recognizers of context-free and deterministic context-free languages defined by grammars." ID="ID_876137234" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="Pushdown Automata and Parsing | SpringerLink" FOLDED="true" ID="ID_936652948" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://link.springer.com/chapter/10.1007%2F978-3-030-04879-2_4">
<node TEXT="This large chapter covers pushdown automata and parsing algorithms with emphasis on their application to syntax analysis. We start by introducing general and deterministic pushdown automata as the recognizers of context-free and deterministic context-free languages defined by grammars." ID="ID_356587820" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="Pushdown Automata (Introduction) - YouTube" FOLDED="true" ID="ID_784129196" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://www.youtube.com/watch?v=4ejIAmp_Atw">
<node TEXT="1. Introduction to pushdown automata(PDA) 2. Difference between pushdown automata and finite state machine 3. Stack in pushdown automata 4. Push and pop operations in stack 5. Components of " ID="ID_1538563962" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="C programming source code for push down automata?" FOLDED="true" ID="ID_1340825567" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://www.answers.com/Q/C_programming_source_code_for_push_down_automata">
<node TEXT="Thus to use top-down source code in C++ the code must be written using C-style conventions. Most C++ programs use a combination of object-oriented and procedural programming. It&#xe2;&#x20ac;&#xa6;" ID="ID_1076684196" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="A Guide To Parsing: Algorithms And Terminology" FOLDED="true" ID="ID_1625039267" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://tomassetti.me/guide-parsing-algorithms-terminology/">
<node TEXT="Technically it derives from an old formal grammar called Top-Down Parsing Language  we would like to talk about the use of automatons in parsing algorithms. Automaton are a family of abstract machines among which there is the well known Turing machine. When it comes to parsers you might here the term (Deterministic) Pushdown Automaton " ID="ID_167319334" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="SI413 Class 8: Top-down and Bottom-up parsing" FOLDED="true" ID="ID_1058795834" CREATED="1566553719197" MODIFIED="1566553719197" LINK="https://www.usna.edu/Users/cs/lmcdowel/courses/si413/F10/classes/L08/Class.html">
<node TEXT="Of course in practice we cant really accept non-determinism so our struggle will be to use deterministic control along with a stack. There are two basic approaches to parsing: top-down or bottom-up. They primary difference is how they use the stack." ID="ID_45540173" CREATED="1566553719197" MODIFIED="1566553719197"/>
</node>
<node TEXT="Overview of a Lecture on Parsing Using Push-Down Automata" FOLDED="true" ID="ID_1004676966" CREATED="1566553719197" MODIFIED="1566553719197" LINK="http://www.dickgrune.com/CS/Formal_Languages/DraftLecturePDA.pdf">
<node TEXT="Overview of a Lecture on Parsing Using Push-Down Automata Dick Grune VU University Amsterdam May 2008; DRAFT 1 Grammars A grammar de nes a set of strings through a generative process. Once the string has been generated the details of the generation process which determine the structure of the string are lost but in many applications the " ID="ID_474317382" CREATED="1566553719198" MODIFIED="1566553719198"/>
</node>
</node>
<node TEXT="Bottom-up Parsing Using Deterministic Push Down Automata Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1813633635" CREATED="1566553719198" MODIFIED="1566553719198">
<icon BUILTIN="stop-sign"/>
<node TEXT="Simple Functional Sound and Complete Parsing for All " FOLDED="true" ID="ID_228722754" CREATED="1566553719198" MODIFIED="1566553719198" LINK="https://www.researchgate.net/publication/220818748_Simple_Functional_Sound_and_Complete_Parsing_for_All_Context-Free_Grammars">
<node TEXT="Simple Functional Sound and Complete Parsing for All Context-Free Grammars Conference Paper &#xc2;&#xb7; December 2011 with 13 Reads DOI: 10.1007/978-3-642-25379-9_10" ID="ID_654489798" CREATED="1566553719198" MODIFIED="1566553719198"/>
</node>
<node TEXT="(PDF) An Adaptive Parser for Arabic Language Processing " FOLDED="true" ID="ID_381078549" CREATED="1566553719198" MODIFIED="1566553719198" LINK="https://www.academia.edu/1075914/An_Adaptive_Parser_for_Arabic_Language_Processing">
<node TEXT="The GPARS system generalizes the Augmented Transition Network formalism by allowing top-down bottom-up depth-first breadth-first deterministic and nondeterministic parsing strategies to be freely intermixed." ID="ID_909971074" CREATED="1566553719198" MODIFIED="1566553719198"/>
</node>
<node TEXT="(PDF) The hierarchy of LR-attributed grammars" FOLDED="true" ID="ID_1507409137" CREATED="1566553719198" MODIFIED="1566553719198" LINK="https://www.researchgate.net/publication/226470263_The_hierarchy_of_LR-attributed_grammars">
<node TEXT="The hierarchy of LR-attributed grammars.  we will focus on bottom-up parse generators of the YACC and CUP type.  we investigate the use of interactive storytelling techniques in serious " ID="ID_1455760371" CREATED="1566553719198" MODIFIED="1566553719198"/>
</node>
<node TEXT="Shape grammar compilers - ScienceDirect" FOLDED="true" ID="ID_413585567" CREATED="1566553719198" MODIFIED="1566553719198" LINK="https://www.sciencedirect.com/science/article/pii/0031320386900531">
<node TEXT="One solution to this is an interactive graphical shape grammar speci- fication system; another attractive approach is to generate such grammars directly from a CAD design. There are two other critical issues which we are now studying. First we would like to be able to provide deterministic parse tables for shape grammars." ID="ID_888058698" CREATED="1566553719198" MODIFIED="1566553719198"/>
</node>
<node TEXT="US6915254B1 - Automatically assigning medical codes using " FOLDED="true" ID="ID_685434585" CREATED="1566553719198" MODIFIED="1566553719198" LINK="https://patents.google.com/patent/US6915254B1/en">
<node TEXT="A programmed implementation for automatically assigning medical codes (including diagnosis procedure and level of service&#xe2;&#x20ac;&#x201d;i.e. evaluation and management (EM)&#xe2;&#x20ac;&#x201d;codes) to computer readable physician notes using natural language processing. A system allows hospitals physician management groups and medical billing companies to automatically determine and assign the medical codes that are " ID="ID_868452189" CREATED="1566553719198" MODIFIED="1566553719198"/>
</node>
<node TEXT="Syllabus for Ph.D. Entrance Test - gnauniversity.edu.in" FOLDED="true" ID="ID_1172190318" CREATED="1566553719198" MODIFIED="1566553719198" LINK="http://www.gnauniversity.edu.in/pdf/faculty/phd/PhD-Syllabus-CSE.pdf">
<node TEXT="generators Tests for randomness Random variate generation using inverse transformation direct transformation Convolution method Acceptance-rejection technique. Queuing  Inventory Models: Characteristics of queuing systems Notation Transient and steady-state behavior Simulation of queueing and inventory systems." ID="ID_1486600330" CREATED="1566553719198" MODIFIED="1566553719198"/>
</node>
<node TEXT="A Survey of Three Dialogue Models - MAFIADOC.COM" FOLDED="true" ID="ID_109950943" CREATED="1566553719198" MODIFIED="1566553719198" LINK="https://mafiadoc.com/a-survey-of-three-dialogue-models_5b85b9cc097c4719048b4751.html">
<node TEXT="A dialogue model is an abstract model that is used to describe the structure of the dialogue between a user and an interactive computer system. Dialogue models form the basis of the notations that are used in user interface management systems (UIMS). In this paper three classes of dialogue models are investigated." ID="ID_662681681" CREATED="1566553719198" MODIFIED="1566553719198"/>
</node>
<node TEXT="BibTeX bibliography string-matching.bib" FOLDED="true" ID="ID_1175731534" CREATED="1566553719198" MODIFIED="1566553719198" LINK="http://ftp.math.utah.edu/pub/tex/bib/string-matching.html">
<node TEXT="The general approach is to create in-so-far as possible a bottom-up parse from a top-down   keywords = automata theory; deterministic multitape Turing machine; fast string matching   author = Gu Guoan and John Hobby title = Using {String Matching} to {Compress Chinese " ID="ID_1805816991" CREATED="1566553719198" MODIFIED="1566553719198"/>
</node>
<node TEXT="pupdepartments.ac.in" FOLDED="true" ID="ID_1490865389" CREATED="1566553719198" MODIFIED="1566553719198">
<node TEXT="punjabi university patiala. outlines of tests syllabi and courses of readings. for . mca (master of computer applications) (semester system) 3rd year (v  vi semester)" ID="ID_431242730" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="Hacettepe University Department of Computer Engineering" FOLDED="true" ID="ID_1116198438" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://intern.cs.hacettepe.edu.tr/curriculum_undergraduate.html">
<node TEXT="Course Code Course Name Theoretic-Practical-Credit: ECTS Credit: Course Language; BBM102: Introduction to Programming II: 3 0 3: 8: English: BBM104: Introduction to Programming Laboratory II" ID="ID_1083757802" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="(PDF) Fully lexicalized pregroup grammars | Annie Foret " FOLDED="true" ID="ID_210242426" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://www.academia.edu/2312368/Fully_lexicalized_pregroup_grammars">
<node TEXT="Academia.edu is a platform for academics to share research papers." ID="ID_411562239" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="CSE Syllabus | Welcome to Jawaharlal Nehru University" FOLDED="true" ID="ID_96664965" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://jnu.ac.in/se-cse-syllabus">
<node TEXT="Characteristics of Computers Evolution of Computing Binary Number Systems Types of Computer Software Operating Systems Programming Languages Problem Solving Techniques using Computers: Algorithm Flow Charts Pseudocode. Introduction to Computer Networks Internet World Wide Web Getting Connected to Internet." ID="ID_1517119475" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
</node>
<node TEXT="Bottom-up Parsing Using Deterministic Push Down Automata Code#$D$#" FOLDED="true" ID="ID_121692132" CREATED="1566553719221" MODIFIED="1566553719221">
<icon BUILTIN="stop-sign"/>
<node TEXT="1 Determinism and Parsing - Computer Science" FOLDED="true" ID="ID_1569595333" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://www.cs.unc.edu/~plaisted/comp455/slides/parse3.7.pdf">
<node TEXT="1 Determinism and Parsing The parsing problem is given a string w and a context-free grammar G to decide if w &#xe2;&#x2c6;&#x2c6; L(G) and if so to construct a derivation or a parse tree for w. Parsing is studied in courses in compilers. To be e&#xef;&#xac;&#x192;cient on large programs parsing has to be linear time or nearly linear time." ID="ID_277027424" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="Pushdown Automata  Parsing in Automata Theory Tutorial " FOLDED="true" ID="ID_1068442978" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://www.wisdomjobs.com/e-university/automata-theory-tutorial-352/pushdown-automata-parsing-25763.html">
<node TEXT="Pushdown Automata  Parsing in Automata Theory - Pushdown Automata  Parsing in Automata Theory courses with reference manuals and examples pdf.  Pushdown Automata Introduction:  Top-Down Parser &#xe2;&#x2c6;&#x2019; Top-down parsing starts from the top with the start-symbol and derives a string using a parse tree. Bottom-Up Parser " ID="ID_771906444" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="Pushdown Automata and Parsing - tutorialspoint.com" FOLDED="true" ID="ID_1969229762" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://www.tutorialspoint.com/automata_theory/pda_and_parsing">
<node TEXT="Pushdown Automata and Parsing - Learn Automata concepts in simple and easy steps starting from Introduction Deterministic Finite Automata Non-Deterministic Finite Automata NDFA to DFA Conversion DFA Minimization Moore and Mealy Machines Introduction to Grammars Language Generated by Grammars Chomsky Grammar Classification Regular Expressions Regular Sets Ardens Theorem " ID="ID_1570753397" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="A Guide To Parsing: Algorithms And Terminology" FOLDED="true" ID="ID_1024586888" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://tomassetti.me/guide-parsing-algorithms-terminology/">
<node TEXT="Parsing Algorithms. In theory parsing is a solved problem but it is the kind of problem that keep being solved again and again.  There are two strategies for parsing: top-down parsing and bottom-up parsing. Both terms are defined in relation to the parse tree generated by the parser.  (Deterministic) Pushdown Automaton (PDA) and when you " ID="ID_1161276750" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="Lecture 04 &#xe2;&#x20ac;&#x201c; Syntax analysis: top-down and bottom-up " FOLDED="true" ID="ID_1334895790" CREATED="1566553719221" MODIFIED="1566553719221" LINK="http://www.cs.technion.ac.il/~yahave/courses/tocs2011/compilers-lec04.pdf">
<node TEXT="Lecture 04 &#xe2;&#x20ac;&#x201c; Syntax analysis: top-down and bottom-up parsing EranYahav 1. 2 You are here Executable code exe Source text txt Compiler Lexical Analysis Syntax Analysis Parsing Semantic Analysis Inter. Rep. (IR) Code  deterministic pushdown automaton Parsing can be seen as a search problem" ID="ID_150273230" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="SI413 Class 8: Top-down and Bottom-up parsing" FOLDED="true" ID="ID_602225662" CREATED="1566553719221" MODIFIED="1566553719221" LINK="http://www.usna.edu/Users/cs/lmcdowel/courses/si413/F10/classes/L08/Class.html">
<node TEXT="Of course in practice we cant really accept non-determinism so our struggle will be to use deterministic control along with a stack. There are two basic approaches to parsing: top-down or bottom-up. They primary difference is how they use the stack." ID="ID_1732097068" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="(PDF) Parallel non-deterministic bottom-up parsing" FOLDED="true" ID="ID_1745642790" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://www.researchgate.net/publication/255677839_Parallel_non-deterministic_bottom-up_parsing">
<node TEXT="Parallel non-deterministic bottom-up parsing.  Our parser like most others is based on the pushdown automaton model and thus its generality requires it to be non-deterministic (in the " ID="ID_1349695601" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="BoB: Best of Both in Compiler Construction Bottom-up " FOLDED="true" ID="ID_496572149" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://pdfs.semanticscholar.org/1dd4/6f1f6929be6d7cc67e3fb2c357472490fe87.pdf">
<node TEXT="compilers use deterministic finite automata for scanning bottom-up parsing and top-down semantic evaluation. For the implementation of the semantic evaluator the idea of M&#xc3;&#xb6;ssenb&#xc3;&#xb6;ck incorporated in Smart have been taken up again. 3. State of the Art This chapter gives a short overview of only those tools" ID="ID_1926555180" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="c++ - How to design a pushdown automata - Stack Overflow" FOLDED="true" ID="ID_1557034244" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://stackoverflow.com/questions/13446020/how-to-design-a-pushdown-automata">
<node TEXT="How to design a pushdown automata. Ask Question Asked 6 years 8 months ago.  Could you tell whether the answer contains the code to check for string acceptance.I could only see the code for string rejection &#xe2;&#x20ac;&#x201c; justin Apr 1 16 at 7:11. 1.  ALGORITHM to simulate any Deterministic Pushdown Automata (DPDA) 1490." ID="ID_1995049777" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="Translating a DFA to Program - YouTube" FOLDED="true" ID="ID_709324400" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://www.youtube.com/watch?v=MvoDlrcu1dI">
<node TEXT="This feature is not available right now. Please try again later." ID="ID_1260032247" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="Overview of Parsing Using Push-Down Automata" FOLDED="true" ID="ID_540498544" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://www.academia.edu/7009062/Overview_of_Parsing_Using_Push-Down_Automata">
<node TEXT="Overview of Parsing Using Push-Down Automata Dick Grune VU University Amsterdam May 2008; DRAFT 1 Grammars A grammar defines a set of strings through a generative process." ID="ID_1640414586" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
<node TEXT="09-Regular Expression to Deterministic Finite Automata by " FOLDED="true" ID="ID_626143183" CREATED="1566553719221" MODIFIED="1566553719221" LINK="https://www.youtube.com/watch?v=je5ETYUUSrQ">
<node TEXT="09-Regular Expression to Deterministic Finite Automata by Deeba Kannan. 09-Regular Expression to Deterministic Finite Automata by Deeba Kannan  Shift Reduce Parser in Bottom up Parsing by Deeba " ID="ID_1418271187" CREATED="1566553719221" MODIFIED="1566553719221"/>
</node>
</node>
</node>
<node TEXT="Bottom-up Parsing" ID="ID_978912654" CREATED="1566881027726" MODIFIED="1566881027726" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="Closure properties and Deterministic PDA" ID="ID_657676742" CREATED="1566881027727" MODIFIED="1566881027727" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
</node>
<node TEXT="Undecidability  Intractable Problems " FOLDED="true" POSITION="left" ID="ID_1412432524" CREATED="1566881027727" MODIFIED="1566881027727" Folded="true">
<edge COLOR="#6bf67b"/>
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="A Language that is not recursively enumerable" ID="ID_365939764" CREATED="1566881027727" MODIFIED="1566881027727" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="A Language that is not recursively enumerable Interactive Visualisation#$D$#" FOLDED="true" ID="ID_40500486" CREATED="1566553719223" MODIFIED="1566553719223">
<icon BUILTIN="stop-sign"/>
<node TEXT="computability - Proving that a language is not Recursive " FOLDED="true" ID="ID_214864602" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://cs.stackexchange.com/questions/47214/proving-that-a-language-is-not-recursive">
<node TEXT="I am trying to prove that this language is not recursive and that it is recursive-enumerable. To prove that it is NOT recursive I considered the following steps: 1) Assume that it was recursive 2) Conside input w of infinite length 3) Meaning we get infinite steps that M can perform before halting." ID="ID_1928188913" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="If L and P are two recursively enumerable languages then " FOLDED="true" ID="ID_1623746081" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://www.youtube.com/watch?v=Gr68VUVbotg">
<node TEXT="If L and P are two recursively enumerable languages then they are not closed under. (a) Kleen Star L* of L (b) Intersection L &#xe2;&#x2c6;&#xa9; P (c) Union L U P (d) Set di" ID="ID_100411297" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Decidability and Undecidability - YouTube" FOLDED="true" ID="ID_1523669487" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://www.youtube.com/watch?v=JfX7VK7ocRU">
<node TEXT="TOC: Decidability and Undecidability Topics discussed: 1) Recursive Languages 2) Recursively Enumerable Languages 3) Decidable Languages 4) Partially Decidable Languages 5) Undecidable Languages " ID="ID_531503792" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Recursive Enumerable Language - YouTube" FOLDED="true" ID="ID_1734073962" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://www.youtube.com/watch?v=4D3NXkF611s">
<node TEXT="Recursive Enumerable Language  The interactive transcript could not be loaded.  Part 6.4 Type 0 Grammar Recursively enumerable grammar Phase structured grammar unrestricted Grammar " ID="ID_1947504595" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Recursive and Recursively enumerable languages - YouTube" FOLDED="true" ID="ID_525584069" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://www.youtube.com/watch?v=5-kKlH_Sf_0">
<node TEXT="Here You learn properties of recursive and recursively enumerable languages. Here You learn properties of recursive and recursively enumerable languages.  The interactive transcript could not " ID="ID_1221138380" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Recursive Language - YouTube" FOLDED="true" ID="ID_1941700495" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://www.youtube.com/watch?v=nQkphPCLHig">
<node TEXT="Recursive Language  The interactive transcript could not be loaded.  Part 6.4 Type 0 Grammar Recursively enumerable grammar Phase structured grammar unrestricted Grammar - Duration: " ID="ID_1242811919" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Implementation of Recursively Enumerable Languages using " FOLDED="true" ID="ID_934470102" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://pdfs.semanticscholar.org/7a8a/9f6b07ad774ae0d98736d98cc368483e2d2c.pdf">
<node TEXT="languages that are not accepted by PDAs and hence that are not context free more powerful language families has been formed. This creates the class of Recursively Enumerable Languages (REL). 3. Implementation The Language L is said to be recursively enumerable if there exists a Turing Machine that accepts it." ID="ID_915454142" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Recursively Enumerable Languages (Halting Problem " FOLDED="true" ID="ID_1431580832" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://www.youtube.com/watch?v=s1wcCQmRj14">
<node TEXT="Recursively Enumerable Languages (Halting Problem)  The interactive transcript could not be loaded.  57. RECURSIVE AND RECURSIVE ENUMERABLE LANGUAGES - Duration: 4:05." ID="ID_250412660" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Teaching Computer Science with Interaction and Visualization" FOLDED="true" ID="ID_1635598643" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://users.cs.duke.edu/~rodger/talks/DukeDec06/DukeTalkDec4-2006.pdf">
<node TEXT="Teaching Computer Science with Interaction and Visualization Susan H. Rodger Computer Science Dept. Duke University December 4 2006. Outline  &#xe2;&#x20ac;&#xa2; Build stories and interactive games &#xe2;&#x20ac;&#xa2; Current two year study &#xe2;&#x20ac;&#x201c; several universities  &#xe2;&#x20ac;&#x201c; Recursively Enumerable Languages &#xe2;&#x20ac;&#x201c; Lsystems. Thanks to Students - Worked on" ID="ID_846772467" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Visualization of a Mathematical Model of Computation - ATCM" FOLDED="true" ID="ID_1021532387" CREATED="1566553719223" MODIFIED="1566553719223" LINK="http://atcm.mathandtech.org/EP2012/regular_papers/3472012_19909.pdf">
<node TEXT="Sensitive Grammar (CSG). A recursively enumerable set is defined by an Unrestricted Grammar (UG) or Unrestricted Phrase Structure Grammar. Please note that ALAN is a set which is proven to be not computable [1]. For demonstration purposes we develop dynamic visualization of TMs for two languages (1) { aba* } and (2) { anbnan : n  0 }. The " ID="ID_451970518" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Computability theory - Wikipedia" FOLDED="true" ID="ID_1369164210" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://en.wikipedia.org/wiki/Computability_theory_(computer_science)">
<node TEXT="Computability theory also known as recursion theory is a branch of mathematical logic of computer science and of the theory of computation that originated in the 1930s with the study of computable functions and Turing degrees.The field has since expanded to include the study of generalized computability and definability. In these areas recursion theory overlaps with proof theory and " ID="ID_764130552" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="computability - Prove that $D =\{x \in \mathbb{N} | \Phi_x " FOLDED="true" ID="ID_424870539" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://cs.stackexchange.com/questions/95671/prove-that-d-x-in-mathbbn-phi-xx-uparrow-is-not-recursively/95765">
<node TEXT="Stack Exchange network consists of 176 QA communities including Stack Overflow the largest most trusted online community for developers to learn share their knowledge and build their careers.. Visit Stack Exchange" ID="ID_1617034886" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
</node>
<node TEXT="A Language that is not recursively enumerable Code#$D$#" FOLDED="true" ID="ID_1459119459" CREATED="1566553719223" MODIFIED="1566553719223">
<icon BUILTIN="stop-sign"/>
<node TEXT="What are the languages that are not recursively enumerable " FOLDED="true" ID="ID_900516588" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://www.quora.com/What-are-the-languages-that-are-not-recursively-enumerable">
<node TEXT="The best description of the languages that are not recursively enumerable that I can think to give you is based purely on the definition. A language is recursively enumerable if there is an algorithm that spits out all the strings in that language" ID="ID_1537897557" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Recursive and Recursive Enumerable Languages - GeeksforGeeks" FOLDED="true" ID="ID_1479840689" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://www.geeksforgeeks.org/recursive-and-recursive-enumerable-languages/">
<node TEXT="Recursive Enumerable (RE) or Type -0 Language. RE languages or type-0 languages are generated by type-0 grammars. An RE language can be accepted or recognized by Turing machine which means it will enter into final state for the strings of language and may or may not enter into rejecting state for the strings which are not part of the language." ID="ID_774367265" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Recursively enumerable language - Wikipedia" FOLDED="true" ID="ID_428341366" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://en.wikipedia.org/wiki/Recursively_enumerable_language">
<node TEXT="A recursively enumerable language is a formal language for which there exists a Turing machine (or other computable function) that will halt and accept when presented with any string in the language as input but may either halt and reject or loop forever when presented with a string not in the language." ID="ID_1572295027" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Example of a recursively enumerable language that is not " FOLDED="true" ID="ID_142547445" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://stackoverflow.com/questions/33312648/example-of-a-recursively-enumerable-language-that-is-not-context-free">
<node TEXT="The class of recursively-enumerable is very broad indeed. It includes any language for which there is a Turing machine which will halt and accept any string in the language (without requiring that the Turing machine halt if given a string not in the language)." ID="ID_918523034" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Recursively enumerable set - Wikipedia" FOLDED="true" ID="ID_1362159579" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://en.wikipedia.org/wiki/Recursively_enumerable">
<node TEXT="For recursive sets the algorithm must also say if an input is not in the set &#xe2;&#x20ac;&#x201c; this is not required of recursively enumerable sets. A recursively enumerable language is a recursively enumerable subset of a formal language. The set of all provable sentences in an effectively presented axiomatic system is a recursively enumerable set." ID="ID_186524914" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Example of a not recursively enumerable set $A \\subseteq " FOLDED="true" ID="ID_624981916" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://math.stackexchange.com/questions/37979/example-of-a-not-recursively-enumerable-set-a-subseteq-mathbbn">
<node TEXT="The complement of any recursively enumerable but non-recursive set will do (if a r.e. set has a r.e. complement then it is recursive.) For example the set of numbers which are not the G&#xc3;&#xb6;del numbers of a theorem of Peano Arithmetic is not recursively enumerable." ID="ID_1919490018" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Language which is recursively enumerable but not recursive" FOLDED="true" ID="ID_226334974" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://cs.stackexchange.com/questions/111547/language-which-is-recursively-enumerable-but-not-recursive">
<node TEXT="Recursive Recursively Enumerable and None of the Above 2 answers Can someone provide me with some examples of languages which are recursively enumerable but are not recursive. I know that there exist some languages which are not Recursive but recursively enumerable but couldnt find such examples anywhere.." ID="ID_1325437370" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Turing machines - existence of languages that are not " FOLDED="true" ID="ID_770514129" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://www.reddit.com/r/compsci/comments/5b1jjy/turing_machines_existence_of_languages_that_are/">
<node TEXT="Turing machines - existence of languages that are not recursively enumerable (self.compsci) submitted 2 years ago by splosive_fatass Im currently following the pdf here and I have a couple of (probably elementary) questions about the proof that non-recursively enumerable languages exist on pages 12-14." ID="ID_394210944" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Recursively Enumerable Languages: Examples" FOLDED="true" ID="ID_1093961128" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://www.csie.ntu.edu.tw/~lyuu/complexity/2012/20120918.pdf">
<node TEXT="Recursively Enumerable Languages: Examples &#xe2;&#x20ac;&#xa2; The set of C program-input pairs that do not run into an in&#xef;&#xac;&#xfffd;nite loop is recursively enumerable. { Just run its binary code in a simulator environment. &#xe2;&#x20ac;&#xa2; The set of C programs that contain an in&#xef;&#xac;&#xfffd;nite loop is not recursively enumerable (see p. 134)." ID="ID_1120009561" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Recursively Enumerable Recursive Languages" FOLDED="true" ID="ID_1030397035" CREATED="1566553719224" MODIFIED="1566553719224" LINK="http://www.cs.colostate.edu/~massey/Teaching/cs301/RestrictedAccess/Slides/301lecture23.pdf">
<node TEXT="A language is recursively enumerable if and only if there is an enumeration procedure for it We will prove: 1. There is a specific language which is not recursively enumerable (not accepted by any Turing Machine) 2. There is a specific language which is recursively enumerable but not recursive Recursive Recursively Enumerable" ID="ID_1125018736" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
</node>
</node>
<node TEXT="An un-decidable problem that is RE" ID="ID_1715544082" CREATED="1566881027729" MODIFIED="1566881027729" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="An un-decidable problem that is Regular Expressions Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1467392737" CREATED="1566553719224" MODIFIED="1566553719224">
<icon BUILTIN="stop-sign"/>
<node TEXT="Decidability and Undecidability - YouTube" FOLDED="true" ID="ID_997616058" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://www.youtube.com/watch?v=JfX7VK7ocRU">
<node TEXT="The interactive transcript could not be loaded.  Conversion of Regular Expression to Finite Automata - Examples (Part 1)  Turing  The Halting Problem - Computerphile - Duration: " ID="ID_388081108" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="RegexOne - Learn Regular Expressions - Lesson 1: An " FOLDED="true" ID="ID_855488523" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://regexone.com/">
<node TEXT="Regular expressions are extremely useful in extracting information from text such as code log files spreadsheets or even documents. And while there is a lot of theory behind formal languages the following lessons and examples will explore the more practical uses of regular expressions so that you can use them as quickly as possible." ID="ID_1386831357" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Lightweight Structured Visualization of Assembler Control " FOLDED="true" ID="ID_198983480" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://www.eecis.udel.edu/~cavazos/cisc850-spring2017/papers/Lightweight-Structured-Visualization.pdf">
<node TEXT="Lightweight Structured Visualization of Assembler Control Flow based on Regular Expressions Sibel Toprak Arne Wichmann and Sibylle Schupp  (Interactive Disassembler) either integrated or standalone to view the control &#xef;&#xac;&#x201a;ow graph (CFG) of assembler  CFG into a regular expression is reduced to the problem of converting a DFA to an " ID="ID_281338607" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Power BI and Regular Expressions | RADACAD" FOLDED="true" ID="ID_1218769309" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://radacad.com/power-bi-and-regular-expressions">
<node TEXT="If you are trying to solve a problem with regular expressions&#xe2;&#x20ac;&#xa6; you now have two problems . This seems a little harsh for a useful tool that has been with us for what seems a very long time. Plenty of languages offer support for RegEx string searching and pattern matching but not so far in Power BI Desktop." ID="ID_1740060727" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Theory of Computation - asethome.org" FOLDED="true" ID="ID_865367116" CREATED="1566553719224" MODIFIED="1566553719224" LINK="http://www.asethome.org/mathfoundations/MathFoundations_Regular_Expr.html">
<node TEXT="The expressions we have been using are called regular expressions. The languages they define are called regular languages. Here is a recursive definition of the set of regular expressions over the alphabet : Every element of is a regular expression. ^ is a regular expression. If R 1 and R 2 are regular expressions then so are" ID="ID_497807374" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Pexpect and Regular Expressions - homepages.math.uic.edu" FOLDED="true" ID="ID_172056458" CREATED="1566553719224" MODIFIED="1566553719224" LINK="http://homepages.math.uic.edu/~jan/mcs507f12/pexpect_regular.pdf">
<node TEXT="Pexpect and Regular Expressions 1 Pexpect dialogue with an interactive program  for data visualization and manipulation. Octave is normally used  tools for the solution of chemical reactor design problems which led to an interactive environment. Scienti&#xef;&#xac;&#xfffd;c Software (MCS 507) pexpect and regular expressions 21 November 2012 4 / 33 " ID="ID_1087736608" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="RegExpert : A Tool for Visualization of Regular Expressions" FOLDED="true" ID="ID_1995668057" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://bib.irb.hr/datoteka/330746.RegExpert-A_tool_for_visualization_of_Regular_Expressions.pdf">
<node TEXT="RegExpert : A Tool for Visualization of Regular Expressions Ivan Budiselic * Sinisa Srbljic and Miroslav Popovic * * University of Zagreb School of Electrical Engineering and Computing Zagreb Croatia e-mail: { ivan.budiselic sinisa.srbljic miro.popovic }@fer.hr Abstract In recent years tools for computer aided" ID="ID_1127875721" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="RegexOne - Learn Regular Expressions - C#" FOLDED="true" ID="ID_1774241309" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://regexone.com/references/csharp">
<node TEXT="If you need a refresher on how Regular Expressions work check out our Interactive Tutorial first!. C# supports regular expressions through the classes in the System.Text.RegularExpressions namespace in the standard .NET framework. While there are some differences in advanced features supported by the .NET regular expression library compared to PCRE they both share a large part of the syntax " ID="ID_784648826" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Beginners Tutorial for Regular Expressions in Python " FOLDED="true" ID="ID_1497345551" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://www.analyticsvidhya.com/blog/2015/06/regular-expression-python/">
<node TEXT="This is where Regular Expressions become super useful. Regular expressions are normally the default way of data cleaning and wrangling in most of these tools. Be it extraction of specific parts of text from web pages making sense of twitter data or preparing your data for text mining &#xe2;&#x20ac;&#x201c; Regular expressions are your best bet for all these tasks." ID="ID_1786862973" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Splunk Development - YouTube" FOLDED="true" ID="ID_981245951" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://www.youtube.com/playlist?list=PLSr58-DJdRyb6DfuoXTMXIfJbL62xozXe">
<node TEXT="This Playlist will have videos dedicated to splunk development track." ID="ID_1039379184" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Understanding the Breadth of the Event Space: Learning " FOLDED="true" ID="ID_1171264517" CREATED="1566553719224" MODIFIED="1566553719224" LINK="http://eventevent.github.io/papers/EVENT_2016_paper_17.pdf">
<node TEXT="Index Terms&#xe2;&#x20ac;&#x201d;Sequential Data Interactive Visualization Regular Expressions 1. INTRODUCTION Event processing is an exciting new area for data analytics and visualization. With the rise of telemetry with increasingly ubiquitous logfiles and with phones that continuously log usage patterns there" ID="ID_1251596649" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="SecViz | Security Visualization and Intelligence" FOLDED="true" ID="ID_1221245277" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://www.secviz.org/node?page=10">
<node TEXT="I had created two visualization under the scope of GSoC 2011 Honeynet Project.The main aim was to create a 3D mesh with heat map tiles on a world map. The first visualization is a quick proof of concept though the second one is created by using Processing visualization framework." ID="ID_271865811" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
</node>
<node TEXT="An un-decidable problem that is Regular Expressions Code#$D$#" FOLDED="true" ID="ID_1849612920" CREATED="1566553719224" MODIFIED="1566553719224">
<icon BUILTIN="stop-sign"/>
<node TEXT="Decidable and Undecidable Problems - web.cecs.pdx.edu" FOLDED="true" ID="ID_1382403289" CREATED="1566553719224" MODIFIED="1566553719224" LINK="http://web.cecs.pdx.edu/~sheard/course/CS311/Spring2011/notes/DecidableUndecidableProblems.pdf">
<node TEXT="13 Some other decidable problems &#xe2;&#x20ac;&#xa2; ANFA = { Mw &#xe2;&#x192;&#x2019;M is an NFA that accepts w} &#xe2;&#x20ac;&#xa3;By direct simulation or by reduction to ADFA. &#xe2;&#x20ac;&#xa2; AREX = { Rw &#xe2;&#x192;&#x2019;R is a regular expression that generates w} &#xe2;&#x20ac;&#xa3;By reduction to ANFA. &#xe2;&#x20ac;&#xa2; EDFA = { M &#xe2;&#x192;&#x2019;M is a DFA and L(D) = &#xe2;&#x2c6;&#x2026;} &#xe2;&#x20ac;&#xa3;By inspecting the DFA&#xe2;&#x20ac;&#x2122;s transitions to see if there is any path to a final state." ID="ID_54602586" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Decidability of Is this regular expression prefix-free?" FOLDED="true" ID="ID_1419556203" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://cs.stackexchange.com/questions/41184/decidability-of-is-this-regular-expression-prefix-free">
<node TEXT="So you can decide your problem by converting the regular expression to an equivalent automaton determinising and then performing above mentioned checks. Intuitively this wont work for CFL (that is PDA) because . there is a one-state PDA for every CFL so theres little to see and; not every CFL has a deterministic PDA." ID="ID_1801388376" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Theory of computation | Decidable and undecidable problems" FOLDED="true" ID="ID_1122307558" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://www.geeksforgeeks.org/theory-computation-decidable-undecidable-problems/">
<node TEXT="Prerequisite &#xe2;&#x20ac;&#x201c; Turing Machine A problem is said to be Decidable if we can always construct a corresponding algorithm that can answer the problem correctly. We can intuitively understand Decidable problems by considering a simple example. Suppose we are asked to compute all the prime numbers in the range of 1000 to 2000." ID="ID_1476416355" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="(Un)-Decidability Results for Word Equations with Length " FOLDED="true" ID="ID_1419556872" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://ece.uwaterloo.ca/~vganesh/TEACHING/F2013/SATSMT/lectures/lecture15.pdf">
<node TEXT="(Un)-Decidability Results for Word Equations with Length and Regular Expression Constraints Vijay Ganesh November 22 2013  89-fragment of positive word equations is undecidable Decidability result #2 The SAT problem for word equations in solved form + length constraints is decidable" ID="ID_240461733" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="context free language - G is CFG Is L(G) Regular - Stack " FOLDED="true" ID="ID_1684296882" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://stackoverflow.com/questions/32239691/g-is-cfg-is-lg-regular">
<node TEXT="G is a given CFG is L(G) regular? Its an undecidable problem. But My argument is Language is given and if i can do any of the following things then it will be regular else non-regular: Creatio" ID="ID_1373813040" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Theory of Computation | Decidability and Undecidability " FOLDED="true" ID="ID_644348150" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://www.geeksforgeeks.org/theory-of-computation-decidability/">
<node TEXT="That means that our assumption that there exists an algorithm which solves the State Entry problem and halts and gives us an answer every time is false. Hence the state entry problem is undecidable. 2. Given two regular languages L1 and L2 is the problem of finding whether a string &#xe2;&#x20ac;&#x2dc;w&#xe2;&#x20ac;&#x2122; exists in both L1 and L2 a decidable problem or not." ID="ID_1484388005" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Grammar: Decidable and Undecidable Problems &#xe2;&#x20ac;&#x201c; GATE CSE" FOLDED="true" ID="ID_1946497071" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://gatecse.in/grammar-decidable-and-undecidable-problems/">
<node TEXT="Heads Up! Please do not by heart this table. This is just to check your understanding" ID="ID_1244585927" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="logic - Undecidability of REGULAR_TM - Stack Exchange" FOLDED="true" ID="ID_1081808997" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://math.stackexchange.com/questions/550647/undecidability-of-regular-tm">
<node TEXT="In case you have Sipsers Introduction to the Theory of Computation 3rd edition I am asking specifically about the proof of theorem 5.3 how the language REGULAR_TM is undecidable. \begin{equatio" ID="ID_277741796" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="computability - Decidability of whether a language " FOLDED="true" ID="ID_175591552" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://cs.stackexchange.com/questions/85231/decidability-of-whether-a-language-described-by-turing-machine-is-regular">
<node TEXT="I am trying to prove decidability of problem whether language described by Turing machine is regular. My idea is that I can simulate finite automaton with a subset of Turing machine instructions namely ones that check for symbol and then move right." ID="ID_1509886101" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Decidability and Undecidability - YouTube" FOLDED="true" ID="ID_1129437523" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://www.youtube.com/watch?v=JfX7VK7ocRU">
<node TEXT="TOC: Decidability and Undecidability Topics discussed: 1) Recursive Languages 2) Recursively Enumerable Languages 3) Decidable Languages 4) Partially Decidable Languages 5) Undecidable Languages " ID="ID_1352052340" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Regular Expressions - DreamBank" FOLDED="true" ID="ID_1026046184" CREATED="1566553719224" MODIFIED="1566553719224" LINK="http://dreambank.net/regex.html">
<node TEXT="Regular Expressions. Regular expressions are a set of codes that are used to match patterns of letters in many programming languages. The DreamBank search engine lets you use the complete set of regular expressions (with a few exceptions) in your searches so that you can refine your queries to find exactly what you want." ID="ID_1647889752" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="regular language - Determining whether a regex is a subset " FOLDED="true" ID="ID_1041241066" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://stackoverflow.com/questions/18729015/determining-whether-a-regex-is-a-subset-of-another">
<node TEXT="Determining whether a regex is a subset of another  Python Ruby etc.) that allow accepting languages that arent regular then you are out of luck. The problem is in general undecidable. E.g. the problem of whether one pushdown automaton recognizes the same context free (CF) language as another is undecidable. Extended regular expressions " ID="ID_952822804" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
</node>
</node>
<node TEXT="Post Correspondence Problem" ID="ID_628154412" CREATED="1566881027731" MODIFIED="1566881027731" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Post Correspondence Problem Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1013487692" CREATED="1566553719224" MODIFIED="1566553719224">
<icon BUILTIN="stop-sign"/>
<node TEXT="Post Correspondence Problem by Deeba Kannan - YouTube" FOLDED="true" ID="ID_1400885199" CREATED="1566553719224" MODIFIED="1566553719224" LINK="https://www.youtube.com/watch?v=B5D3x3zz9D4">
<node TEXT="59 - Post Correspondence Problem Introduction by Deeba Kannan. This feature is not available right now. Please try again later." ID="ID_1719261894" CREATED="1566553719224" MODIFIED="1566553719224"/>
</node>
<node TEXT="Post Correspondence Problem - YouTube" FOLDED="true" ID="ID_1259567598" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://www.youtube.com/watch?v=cJ6BhsODCuM">
<node TEXT="This feature is not available right now. Please try again later." ID="ID_1504468758" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="Data and Visualizations | Federal Trade Commission" FOLDED="true" ID="ID_1867357006" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://www.ftc.gov/enforcement/data-visualizations">
<node TEXT="Explore Data lets you dig into consumer data on fraud identity theft unwanted calls and other consumer problems based on reports from the public to the FTC&#xe2;&#x20ac;&#x2122;s Consumer Sentinel Network database and complaints to FTC about unwanted calls. You can explore interactive dashboards to spot trends find out about top reports and see what people in your state and around the country are telling us." ID="ID_144771130" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="Supporting Asynchronous Interactive Visualization for " FOLDED="true" ID="ID_403766787" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://www2.eecs.berkeley.edu/Pubs/TechRpts/2017/EECS-2017-97.pdf">
<node TEXT="Supporting Asynchronous Interactive Visualization . for Exploratory Data Analysis . by Larry Xu . Research Project . Submitted to the Department of Electrical Engineering and Computer Sciences University of California at Berkeley in partial satisfaction of the requirements for the degree of Master of Science Plan II." ID="ID_1712469209" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="How to Use Data Visualization to Improve Your Customer " FOLDED="true" ID="ID_1486059260" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://blogs.opentext.com/how-to-use-data-visualization-to-improve-your-customer-communications/">
<node TEXT="How to Use Data Visualization to Improve Your Customer Communications. OpenText February 26 2015.  correspondence  In this post we will examine how data visualization will give you a more effective communication and a better likelihood of engaging with your customers." ID="ID_1543036685" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="10 Best Data Visualization Projects of 2017 | FlowingData" FOLDED="true" ID="ID_1165926476" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://flowingdata.com/2017/12/28/10-best-data-visualization-projects-of-2017/">
<node TEXT="10 Best Data Visualization Projects of 2017. By Nathan Yau. This year was a weird one.  interactive graphic. The project seemed to trail off midway but hopefully the gaps get filled. [See  There were a lot of graphics for the total solar eclipse but this one by Denise Lu for The Washington Post was my favorite. It starts with you and " ID="ID_641095856" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="DATA VISUALIZATION: THE STATE OF THE ART Proceedings of " FOLDED="true" ID="ID_1450933398" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://www.researchgate.net/profile/Frits_Post/publication/242505367_Data_Visualization_The_State_of_the_Art/links/0046352f1192794047000000.pdf">
<node TEXT="DATA VISUALIZATION: THE STATE OF THE ART Proceedings of the 4th Dagstuhl Seminar on Scienti&#xef;&#xac;&#xfffd;c Visualization CD-ROM Edited by FRITS H. POST Delft University of Technology The Netherlands" ID="ID_1354056300" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="(PDF) One Binary Horn Clause is Enough - researchgate.net" FOLDED="true" ID="ID_1418611690" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://www.researchgate.net/publication/220994869_One_Binary_Horn_Clause_is_Enough">
<node TEXT="One Binary Horn Clause is Enough.  or the Post correspondence problem.  The proposed project consists in the interactive visualization of such traces of executions to allow the analysis of " ID="ID_440155332" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="Data Visualization with Tim Bock: Using Sparklines to Show " FOLDED="true" ID="ID_155959252" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://greenbookblog.org/2017/11/30/data-visualization-best-practices-with-tim-bock-using-sparklines-to-show-trends-in-bar-and-column-charts/">
<node TEXT="Data Visualization with Tim Bock: Using Sparklines to Show Trends in Bar and Column Charts  An interactive example involving sparklines.  The basic idea in this post is a simple one. Rather than try and create one chart to serve multiple purposes we can instead deconstruct the data into multiple separate charts: using easy-to-read column " ID="ID_666641930" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="EHDViz: clinical dashboard development using open-source " FOLDED="true" ID="ID_1397337528" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://bmjopen.bmj.com/content/6/3/e010579">
<node TEXT="Objective To design develop and prototype clinical dashboards to integrate high-frequency health and wellness data streams using interactive and real-time data visualisation and analytics modalities. Materials and methods We developed a clinical dashboard development framework called electronic healthcare data visualization (EHDViz) toolkit for generating web-based real-time clinical " ID="ID_1320232503" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="DATA VISUALIZATION The State of the Art - Springer" FOLDED="true" ID="ID_1862968604" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://link.springer.com/content/pdf/bfm%3A978-1-4615-1177-9%2F1.pdf">
<node TEXT="DATA VISUALIZATION The State of the Art edited by Frits H. Post Delft University of Technology The Netherlands  B. Vrolijk F. Reinders F.H. Post Correspondence analysis: visualizing property-profiles of time-dependent 3D datasets 53  Interactive unstructured volume rendering and classification C.M. Wittenbrink " ID="ID_871042175" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="A Fun Position (#1) &#xe2;&#x20ac;&#x201c; Distance Chess" FOLDED="true" ID="ID_603917886" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://distancechess.com/2019/06/20/a-fun-problem-1/">
<node TEXT="This position is from a recent correspondence chess game of mine. Can you find the move which forces mate for Black? How many moves would it take with best play? Try to figure it out without using an engine to assist you&#xe2;&#x20ac;&#xa6;" ID="ID_1807303587" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
</node>
<node TEXT="Post Correspondence Problem Code#$D$#" FOLDED="true" ID="ID_1788039814" CREATED="1566553719225" MODIFIED="1566553719225">
<icon BUILTIN="stop-sign"/>
<node TEXT="Post correspondence problem - Wikipedia" FOLDED="true" ID="ID_1617059819" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://en.wikipedia.org/wiki/Post_correspondence_problem">
<node TEXT="The Post correspondence problem is an undecidable decision problem that was introduced by Emil Post in 1946. Because it is simpler than the halting problem and the Entscheidungsproblem it is often used in proofs of undecidability." ID="ID_1415160308" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="6.8 The Post Correspondence Problem" FOLDED="true" ID="ID_1552090599" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://www.cis.upenn.edu/~jean/gbooks/PCPh04.pdf">
<node TEXT="6.8 The Post Correspondence Problem The Post correspondence problem (due to Emil Post) is another undecidable problem that turns out to be a very helpful tool for proving problems in logic or in formal language theory to be undecidable. Let &#xce;&#xa3; be an alphabet with at least two letters. An instance of the Post Correspondence problem (for short " ID="ID_188807171" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="Post Correspondence Problem - tutorialspoint.com" FOLDED="true" ID="ID_911567328" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://www.tutorialspoint.com/automata_theory/post_correspondence_problem">
<node TEXT="Post Correspondence Problem - Learn Automata concepts in simple and easy steps starting from Introduction Deterministic Finite Automata Non-Deterministic Finite Automata NDFA to DFA Conversion DFA Minimization Moore and Mealy Machines Introduction to Grammars Language Generated by Grammars Chomsky Grammar Classification Regular Expressions Regular Sets Ardens Theorem Constructing " ID="ID_406322215" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="Posts Correspondence Problem - GitHub" FOLDED="true" ID="ID_756310362" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://github.com/dcatteeu/pcpsolver/">
<node TEXT="PCP Solver is a Java application which (tries to) solve instances of Posts Correspondence Problem. Posts Correspondence Problem. Posts Correspondence Problem PCP for short is mostly of theoretical importance.It is an example of a problem computers cannot solve and goes as follows." ID="ID_735442628" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="Post Correspondence Problem - YouTube" FOLDED="true" ID="ID_1651271268" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://www.youtube.com/watch?v=cJ6BhsODCuM">
<node TEXT="This feature is not available right now. Please try again later." ID="ID_1982142545" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="Post Correspondence Problem by Deeba Kannan - YouTube" FOLDED="true" ID="ID_1353852198" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://www.youtube.com/watch?v=B5D3x3zz9D4">
<node TEXT="59 - Post Correspondence Problem Introduction by Deeba Kannan. This feature is not available right now. Please try again later." ID="ID_1762207176" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="Post correspondence problem - Encyclopedia of Mathematics" FOLDED="true" ID="ID_26354256" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://www.encyclopediaofmath.org/index.php/Post_correspondence_problem">
<node TEXT="The Post correspondence problem remains undecidable if consists of 9 letters. The decidability status is open if the cardinality of is a fixed number between 3 and 8 (inclusive). The Post correspondence problem is closely linked with equality sets which are important in the representation theory of formal languages." ID="ID_687683716" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="6.8. The Post Correspondence Problem - cis.upenn.edu" FOLDED="true" ID="ID_1858651617" CREATED="1566553719225" MODIFIED="1566553719225" LINK="http://www.cis.upenn.edu/~jean/gbooks/PCP.pdf">
<node TEXT="6.8. The Post Correspondence Problem The Post correspondence problem (due to Emil Post) is another undecid-able problem that turns out to be a very helpful tool for proving problems in logic or in formal language theory to be undecidable. Let &#xce;&#xa3; be an alphabet with at least two letters. An instance of the Post Correspondence problem (for short " ID="ID_482580459" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="Welcome to the Posts Correspondence Problem!" FOLDED="true" ID="ID_1572146796" CREATED="1566553719225" MODIFIED="1566553719225" LINK="http://webdocs.cs.ualberta.ca/~games/PCP/">
<node TEXT="PCP News. PCPSolver version 0.0.3 is released with source code. README (Nov 16 2003) ; PCPSolver version 0.0.2 is released with source code. (April 25 2003) I published a paper named Tackling Posts Correspondence Problem in the Third International Conference on Computer and Games in 2002. (July 26 2002) My Masters thesis about solving PCP is now available." ID="ID_750789500" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="ZIP Code&#xe2;&#x201e;&#xa2; Lookup | USPS" FOLDED="true" ID="ID_1543449748" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://tools.usps.com/go/ZipLookupAction!input.action">
<node TEXT="Cities by ZIP Code&#xe2;&#x201e;&#xa2; For more rapid delivery please use the recommended or recognized city names whenever possible for this ZIP Code &#xe2;&#x201e;&#xa2;." ID="ID_1676936393" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="Welcome | USPS" FOLDED="true" ID="ID_888137440" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://www.usps.com/">
<node TEXT="Welcome to USPS.com. Find information on our most convenient and affordable shipping and mailing services. Use our quick tools to find locations calculate prices look up a ZIP Code and get Track  Confirm info." ID="ID_90212572" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="Chapter 8 The Post Correspondence Problem; Applications to " FOLDED="true" ID="ID_1017294683" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://www.seas.upenn.edu/~cis511/notes/cis511-sl13.pdf">
<node TEXT="The Post Correspondence Problem; Applications to Undecidability Results 8.1 The Post Correspondence Problem The Post correspondence problem (due to Emil Post) is another undecidable problem that turns out to be a very helpful tool for proving problems in logic or in formal language theory to be undecidable. Let&#xce;&#xa3;be an alphabet with at least two " ID="ID_199532811" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
</node>
</node>
<node TEXT="The Classes P and NP " ID="ID_1775651453" CREATED="1566881027732" MODIFIED="1566881027732" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Problems Solvable in Polynomial Time" ID="ID_1337813399" CREATED="1566881027732" MODIFIED="1566881027732" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Undecidability  Intractable Problems  Interactive Visualisation#$D$#" FOLDED="true" ID="ID_72178611" CREATED="1566553719222" MODIFIED="1566553719222">
<icon BUILTIN="stop-sign"/>
<node TEXT="Undecidability of the Halting Problem - YouTube" FOLDED="true" ID="ID_843984839" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://www.youtube.com/watch?v=_eM0-KfAmhQ">
<node TEXT="TOC: Undecidability of the Halting Problem Topics discussed: This lecture shows how can we prove the Undecidability of the Halting problem. Contribute: http:" ID="ID_299810753" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Undecidability and Intractability Problems - YouTube" FOLDED="true" ID="ID_1908520711" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://www.youtube.com/watch?v=R2I57aEKqhM">
<node TEXT="How to build your own swimming pool. All process step by step (in only 30 minutes). - Duration: 31:22. Alexander Fedorov 10106421 views" ID="ID_356212261" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Stephen G. Kobourov: Teaching - University of Arizona" FOLDED="true" ID="ID_521136770" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://www2.cs.arizona.edu/~kobourov/teaching.html">
<node TEXT="Unsolvable problems and reducibility are studied. The bulk of the course focuses complexity theory the interrelationships among complexity classes and the study of both NP complete and provably intractable problems. Topics covered include Churchs thesis undecidability complexity theory and intractable problems." ID="ID_1771713616" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Computational complexity theory - Wikipedia" FOLDED="true" ID="ID_695917662" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://en.wikipedia.org/wiki/Intractable_problem">
<node TEXT="Computational complexity theory focuses on classifying computational problems according to their inherent difficulty and relating these classes to each other. A computational problem is a task solved by a computer. A computation problem is solvable by mechanical application of mathematical steps such as an algorithm.. A problem is regarded as inherently difficult if its solution requires " ID="ID_1580740105" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="data visualization - mashable.com" FOLDED="true" ID="ID_1526133172" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://mashable.com/category/data-visualization/">
<node TEXT="The latest articles about data visualization from Mashable the media and tech company  offers an interactive primer on the intractable problem across the U.S.  launched an interactive map " ID="ID_1906452800" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="P NP and NP-Completeness - cs.princeton.edu" FOLDED="true" ID="ID_1040285397" CREATED="1566553719222" MODIFIED="1566553719222" LINK="http://www.cs.princeton.edu/courses/archive/spr11/cos423/Lectures/NP-completeness.pdf">
<node TEXT="Problems solvable in p-time are considered tractable NP-complete problems have no known p-time solution considered intractable. Tractability Difference between tractability and intractability can be slight Can find shortest path in graph in O(m + nlgn) time" ID="ID_952739580" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Halting Problem | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_575884151" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://brilliant.org/wiki/halting-problem/">
<node TEXT="The halting problem is a decision problem in computability theory. It asks given a computer program and an input will the program terminate or will it run forever? For example consider the following Python program: 1 2 3x = input() while x: pass It reads the input and if its not empty the program will loop forever. Thus if the input is empty the program will terminate and the answer to " ID="ID_1750565838" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Computer Science Courses | Catalogue | Colby College" FOLDED="true" ID="ID_1498491753" CREATED="1566553719222" MODIFIED="1566553719222" LINK="http://www.colby.edu/catalogue/courses/CS/">
<node TEXT="Data visualization is the interactive visual exploration of 2-D and 3-D graphic information using techniques that highlight patterns and relationships. Data analysis incorporates data management data transformations statistical analysis data mining and machine learning." ID="ID_48369836" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Introduction to Automata Theory Languages and " FOLDED="true" ID="ID_1823400094" CREATED="1566553719222" MODIFIED="1566553719222" LINK="http://www.pearsoned.co.in/prc/book/john-e-hopcroft-introduction-automata-theory-languages-computation-3e--3/9788131720479">
<node TEXT="This classic book on formal languages automata theory and computational complexity has been updated to present theoretical concepts in a concise and straightforward manner with the increase of hands-on practical applications." ID="ID_1934864399" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Readings | Theory of Computation | Mathematics | MIT " FOLDED="true" ID="ID_1889386210" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://ocw.mit.edu/courses/mathematics/18-404j-theory-of-computation-fall-2006/readings/">
<node TEXT="Dont show me this again. Welcome! This is one of over 2200 courses on OCW. Find materials for this course in the pages linked along the left. MIT OpenCourseWare is a free  open publication of material from thousands of MIT courses covering the entire MIT curriculum.. No enrollment or registration." ID="ID_1807441726" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="These engaging hyper-visual maps can help us better " FOLDED="true" ID="ID_211835345" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://mashable.com/2017/04/18/understanding-homelessness-map-data-viz/">
<node TEXT="And for the site Understanding Homelessness thats the goal &#xe2;&#x20ac;&#x201d; to explore solutions to this intractable problem across the U.S. through compelling data visualizations maps and human-centered " ID="ID_507671199" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Tamara Munzner 2 7 - Computer Science at UBC" FOLDED="true" ID="ID_1812143194" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://www.cs.ubc.ca/labs/imager/tr/2009/VisChapter/akp-vischapter.pdf">
<node TEXT="Tamara Munzner Visualization A major application area of computer graphics isvisualization where computer-generated images are used to help people understand both spatial and non-spatial data. Visualization is used when the goal is to augment human capabilities in situations where the problem is not suf&#xef;&#xac;&#xfffd;ciently well de&#xef;&#xac;&#xfffd;ned for a computer to" ID="ID_975208409" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
</node>
<node TEXT="Undecidability  Intractable Problems  Code#$D$#" FOLDED="true" ID="ID_155209426" CREATED="1566553719222" MODIFIED="1566553719222">
<icon BUILTIN="stop-sign"/>
<node TEXT="Undecidability of the Halting Problem - YouTube" FOLDED="true" ID="ID_1786855853" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://www.youtube.com/watch?v=_eM0-KfAmhQ">
<node TEXT="TOC: Undecidability of the Halting Problem Topics discussed: This lecture shows how can we prove the Undecidability of the Halting problem. Contribute: http:" ID="ID_1811076939" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Undecidability and Intractability Problems - YouTube" FOLDED="true" ID="ID_299482561" CREATED="1566553719222" MODIFIED="1566553719222" LINK="https://www.youtube.com/watch?v=R2I57aEKqhM">
<node TEXT="Decierdo and Feliscuzo: Assignment #7 Undecidability (Word Problem) Intractability (Travelling Salesman)" ID="ID_555094971" CREATED="1566553719222" MODIFIED="1566553719222"/>
</node>
<node TEXT="Lecture 17: Proofs of Proving Undecidability - cs.virginia.edu" FOLDED="true" ID="ID_1366501603" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://www.cs.virginia.edu/cs302/classes/class17.pdf">
<node TEXT="3 Lecture 17: Proving Undecidability 13 Acceptance Language A TM= {  M w | M is a TM description and M accepts input w} We proved ATM is undecidable last class. Since we know ATM is undecidable we can show a new language B is undecidable if a machine that can decide B could be used to build a machine that can decide ATM. Lecture 17: Proving Undecidability 14" ID="ID_672398640" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Halting problem - Wikipedia" FOLDED="true" ID="ID_208282703" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://en.wikipedia.org/wiki/Halting_problem">
<node TEXT="The halting problem is historically important because it was one of the first problems to be proved undecidable. (Turings proof went to press in May 1936 whereas Alonzo Churchs proof of the undecidability of a problem in the lambda calculus had already been published in April 1936 [Church 1936].) Subsequently many other undecidable " ID="ID_1653887970" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Intractable Problems in Malware Analysis and Practical " FOLDED="true" ID="ID_548710193" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://comodemia.comodo.com/repository/Intractable-Problems-in-Malware-Analysis-and-Practical-Solutions.pdf">
<node TEXT="Intractable Problems in Malware Analysis and Practical Solutions Ali Ayd&#xc4;&#xb1;n Sel&#xc3;&#xa7;uk  undecidability results in malware analysis and discuss what can be done in practice. 1. Introduction  code C were to detect W there is at least one instance of this polymorphic virus where the " ID="ID_314955169" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Undecidability and Reduciblity - GeeksforGeeks" FOLDED="true" ID="ID_375131975" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://www.geeksforgeeks.org/undecidability-and-reducibility/">
<node TEXT="A problem is decidable if we can construct a Turing machine which will halt in finite amount of time for every input and give answer as &#xe2;&#x20ac;&#x2dc;yes&#xe2;&#x20ac;&#x2122; or &#xe2;&#x20ac;&#x2dc;no&#xe2;&#x20ac;&#x2122;. A decidable problem has an algorithm to determine the answer for a given input. Note: Two popular undecidable problems are halting problem of " ID="ID_1330374881" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="undecidability-intractability-theoretical-physics.pdf " FOLDED="true" ID="ID_1294328172" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://www.coursehero.com/file/41392964/undecidability-intractability-theoretical-physicspdf/">
<node TEXT="VOLUME 54 NUMBER 8 PHYSICAL REVIEW LETTERS 25 FEBRUARY 1985 Undecidability and Intractability in Theoretical Physics Stephen Wolfram The Institute for Advanced Study Princeton New Jersey 08540 (Received 26 October 1984) Physical processes are viewed as computations and the difficulty of answering questions about them is characterized in terms of the difficulty of performing the " ID="ID_1841891037" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Undecidability and Intractability in Theoretical Physics" FOLDED="true" ID="ID_1686113425" CREATED="1566553719223" MODIFIED="1566553719223" LINK="http://www.stephenwolfram.com/publications/cellular-automata-complexity/pdfs/undecidability-intractability-theoretical-physics.pdf">
<node TEXT="Undecidability and Intractability in Theoretical Physics 11985) There are many physical systems in which it is known to be possible to construct universal computers. Apart from those modeled by CA some examples are electric circuits hard-sphere gases with obstructions and networks of chemical reactions. 19" ID="ID_1601216149" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Computability: Tractable Intractable and Non-computable " FOLDED="true" ID="ID_1679949980" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://docs.google.com/presentation/d/1I-F2F9ntZzfZTk15yBcpMHEMqBK3VNezVOmiU2kKGnA/edit#!">
<node TEXT="Suppose there is a town with one male barber; and that every man in the town keeps himself clean-shaven: some shave themselves and some are shaved by the barber." ID="ID_680440154" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Intractable Problems - University of Missouri&#xe2;&#x20ac;&#x201c;St. Louis" FOLDED="true" ID="ID_1040080773" CREATED="1566553719223" MODIFIED="1566553719223" LINK="http://umsl.edu/~siegelj/information_theory/classassignments/Lombardo/04_intractableproblems.html">
<node TEXT="Intractable problems . From a computational complexity stance intractable problems are problems for which there exist no efficient algorithms to solve them. Most intractable problems have an algorithm &#xe2;&#x20ac;&#x201c; the same algorithm &#xe2;&#x20ac;&#x201c; that provides a solution and that algorithm is the brute-force search." ID="ID_840687301" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="What is the difference between decidable and undecidable " FOLDED="true" ID="ID_162891646" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://www.quora.com/What-is-the-difference-between-decidable-and-undecidable-problems-in-theory-of-computation">
<node TEXT="A problem is a yes/no question about a given input. For example given a positive integer is it even? Or given a string of zeros and ones is it a palindrome? If you can figure out a systematic way (an algorithm) to answer the question correctly" ID="ID_745562802" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
<node TEXT="Theory of Computation | Decidability and Undecidability " FOLDED="true" ID="ID_1895113139" CREATED="1566553719223" MODIFIED="1566553719223" LINK="https://www.geeksforgeeks.org/theory-of-computation-decidability/">
<node TEXT="Theory of Computation | Decidability and Undecidability Identifying languages (or problems*) as decidable undecidable or partially decidable is a very common question in GATE. With correct knowledge and ample experience this question becomes very easy to solve." ID="ID_1457478228" CREATED="1566553719223" MODIFIED="1566553719223"/>
</node>
</node>
<node TEXT="The Classes P and NP : Problems Solvable in Polynomial Time Interactive Visualisation#$D$#" FOLDED="true" ID="ID_451634930" CREATED="1566553719225" MODIFIED="1566553719225">
<icon BUILTIN="stop-sign"/>
<node TEXT="P AND NP CLASS PROBLEM - YouTube" FOLDED="true" ID="ID_984899386" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://www.youtube.com/watch?v=Ig0ESj4NmAk">
<node TEXT="P AND NP CLASS PROBLEM  The interactive transcript could not be loaded.  P and NP Class Problem and Polynomial Time Solvable (English+Hindi) - Duration: 9:07." ID="ID_831969190" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="P versus NP problem Explained ! - YouTube" FOLDED="true" ID="ID_84774355" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://www.youtube.com/watch?v=8omCR5skgtI">
<node TEXT="P versus NP problem Explained ! The P versus NP problem is a major unsolved problem in computer science. Informally it asks whether every problem whose solution can be quickly verified by a " ID="ID_919264249" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="NP (complexity) - Wikipedia" FOLDED="true" ID="ID_711949017" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://en.wikipedia.org/wiki/Class_NP">
<node TEXT="In computational complexity theory NP (nondeterministic polynomial time) is a complexity class used to classify decision problems.NP is the set of decision problems for which the problem instances where the answer is yes have proofs verifiable in polynomial time.. An equivalent definition of NP is the set of decision problems solvable in polynomial time by a non-deterministic Turing machine." ID="ID_71591138" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="List of complexity classes - Wikipedia" FOLDED="true" ID="ID_1037120915" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://en.wikipedia.org/wiki/List_of_complexity_classes">
<node TEXT="This is a list of complexity classes in computational complexity theory.For other computational and complexity subjects see list of computability and complexity topics.. Many of these classes have a co partner which consists of the complements of all languages in the original class. For example if a language L is in NP then the complement of L is in co-NP." ID="ID_831911543" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="Complexity Classes | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1637602579" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://brilliant.org/wiki/complexity-classes/">
<node TEXT="Complexity classes are the heart of complexity theory which is a central topic in theoretical computer science. A complexity class contains a set of problems that take a similar range of space and time to solve for example all problems solvable in polynomial time with respect to input size all problems solvable with exponential space with respect to input size and so on." ID="ID_1600102964" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="NP (complexity) &#xe2;&#x20ac;&#x201d; Wikipedia Republished // WIKI 2" FOLDED="true" ID="ID_604684727" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://wiki2.org/en/NP_(complexity)">
<node TEXT="The two definitions of NP as the class of problems solvable by a nondeterministic Turing machine (TM) in polynomial time and the class of problems verifiable by a deterministic Turing machine in polynomial time are equivalent. The proof is described by many textbooks for example Sipsers Introduction to the Theory of Computation section 7.3.. To show this first suppose we have a " ID="ID_1719002968" CREATED="1566553719225" MODIFIED="1566553719225"/>
</node>
<node TEXT="provable security - PPT vs NP problems - Cryptography " FOLDED="true" ID="ID_699584416" CREATED="1566553719225" MODIFIED="1566553719225" LINK="https://crypto.stackexchange.com/q/48008">
<node TEXT="$\begingroup$ The class P describes problems solvable in polynomial time. NP is only verifiable in polynomial time the solving requires the non-deterministic magic to come up with a candidate. This is what PPT cannot. $\endgroup$ &#xe2;&#x20ac;&#x201c; eckes Jun 6 17 at 8:30" ID="ID_176470491" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="Path Problems and Complexity Classes - cs.umb.edu" FOLDED="true" ID="ID_1067558726" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://www.cs.umb.edu/~henryzlo/cs310/notes/complexity.pdf">
<node TEXT="Figure 5: Visualization of the problem classes P NP NP-complete and NP-hard if P6=NP and if P=NP.  Most of the problems we have studied are in P the class of polynomial-time solvable problems. P algorithms are also NP because anything solvable in polynomial time without parallelism is also solvable in polynomial time with it." ID="ID_1104202458" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="P. vs. NP vs NP Completeness vs. NP hard - sites.cs.ucsb.edu" FOLDED="true" ID="ID_149660642" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://sites.cs.ucsb.edu/~yfwang/courses/cs130b/notes/NPC.pdf">
<node TEXT="Complexity Classes P: solvable in polynomial time NP: Decision problem Solvable in nondeterministic time Verifiable in polynomial time NP hard: all NP problem can be reduced to (NP  NP hard) Does not have to be a decision problem Does not even need to have a solution NP complete Every NP problem can be reduced to (NP  NP complete)" ID="ID_224718775" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="NP-Completeness | Set 1 (Introduction) - GeeksforGeeks" FOLDED="true" ID="ID_1547852655" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://www.geeksforgeeks.org/np-completeness-set-1/">
<node TEXT="P is subset of NP (any problem that can be solved by deterministic machine in polynomial time can also be solved by non-deterministic machine in polynomial time). Informally NP is set of decision problems which can be solved by a polynomial time via a &#xe2;&#x20ac;&#x153;Lucky Algorithm&#xe2;&#x20ac;&#xfffd; a magical algorithm that always makes a right guess among the given " ID="ID_1049567067" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="NP (complexity) : Wikis (The Full Wiki)" FOLDED="true" ID="ID_734870675" CREATED="1566553719226" MODIFIED="1566553719226" LINK="http://www.thefullwiki.org/NP_(complexity)">
<node TEXT="In an equivalent formal definition NP is the set of decision problems solvable in polynomial time by a non-deterministic Turing machine. The complexity class P is contained in NP but NP contains many important problems the hardest of which are called NP-complete problems for which no polynomial-time algorithms are known." ID="ID_1434859609" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="complexity theory - What is the definition of $P$ $NP " FOLDED="true" ID="ID_162921333" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://cs.stackexchange.com/questions/9556/what-is-the-definition-of-p-np-np-complete-and-np-hard">
<node TEXT="Simplest of them is P problems solvable in polynomial time belongs here. Then comes NP. Problems solvable in polynomial time on a non-deterministic Turing machine belongs here. The hardness and completeness has to with reductions. A problem A is hard for a class C if every problem in C reduces to A." ID="ID_1687569063" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
</node>
<node TEXT="The Classes P and NP : Problems Solvable in Polynomial Time Code#$D$#" FOLDED="true" ID="ID_297898592" CREATED="1566553719226" MODIFIED="1566553719226">
<icon BUILTIN="stop-sign"/>
<node TEXT="Complexity class of problems solvable in polynomial-time " FOLDED="true" ID="ID_1627751905" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://stackoverflow.com/questions/47657473/complexity-class-of-problems-solvable-in-polynomial-time-which-are-not-decision">
<node TEXT="Complexity class P ~ set of all decision problems that can be solved by a deterministic Turing machine in polynomial time. A decision problem is a problem which can be stated as a yes/no question.. So how would you formally classify problems such as: find the maximum number in an unsorted list of length n?" ID="ID_1793650636" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="P (complexity) - Wikipedia" FOLDED="true" ID="ID_560459471" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://en.wikipedia.org/wiki/P_(complexity)">
<node TEXT="In computational complexity theory P also known as PTIME or DTIME(n O(1)) is a fundamental complexity class.It contains all decision problems that can be solved by a deterministic Turing machine using a polynomial amount of computation time or polynomial time.. Cobhams thesis holds that P is the class of computational problems that are efficiently solvable or tractable." ID="ID_1784291152" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="Design and Analysis of Algorithms P and NP Class" FOLDED="true" ID="ID_59248711" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://www.tutorialspoint.com/design_and_analysis_of_algorithms/design_and_analysis_of_algorithms_p_np_class">
<node TEXT="These problems belong to an interesting class of problems called the NP-Complete problems whose status is unknown. In this context we can categorize the problems as follows &#xe2;&#x2c6;&#x2019; P-Class. The class P consists of those problems that are solvable in polynomial time i.e. these problems can be solved in time O(n k) in worst-case where k is constant." ID="ID_1649118425" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="NP (complexity) - Wikipedia" FOLDED="true" ID="ID_70971333" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://en.wikipedia.org/wiki/NP_(complexity)">
<node TEXT="In computational complexity theory NP (nondeterministic polynomial time) is a complexity class used to classify decision problems.NP is the set of decision problems for which the problem instances where the answer is yes have proofs verifiable in polynomial time.. An equivalent definition of NP is the set of decision problems solvable in polynomial time by a non-deterministic Turing machine." ID="ID_1285762038" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="Does NP mean verifiable in polynomial time or solvable in " FOLDED="true" ID="ID_1567549151" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://cs.stackexchange.com/questions/77034/does-np-mean-verifiable-in-polynomial-time-or-solvable-in-polynomial-time">
<node TEXT="$\begingroup$ I would say these definitions are different but result in the same class of problems NP. You can easily prove that any problem verifiable in polynomial time on a deterministic TM is solvable on in polynomial time on a nondeterministic TM and vise versa." ID="ID_1331555912" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="P AND NP CLASS PROBLEM - YouTube" FOLDED="true" ID="ID_1808976320" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://www.youtube.com/watch?v=Ig0ESj4NmAk">
<node TEXT="P AND NP CLASS PROBLEM  P and NP Class Problem and Polynomial Time Solvable (English+Hindi) - Duration: 9:07. University Academy- Formerly-IP University CSE/IT 81539 views." ID="ID_1330785773" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="P versus NP problem Explained ! - YouTube" FOLDED="true" ID="ID_513906555" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://www.youtube.com/watch?v=8omCR5skgtI">
<node TEXT="P versus NP problem Explained ! The P versus NP problem is a major unsolved problem in computer science. Informally it asks whether every problem whose solution can be quickly verified by a " ID="ID_1413823532" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="Complexity Classes | Brilliant Math  Science Wiki" FOLDED="true" ID="ID_1489938774" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://brilliant.org/wiki/complexity-classes/">
<node TEXT="Complexity classes are the heart of complexity theory which is a central topic in theoretical computer science. A complexity class contains a set of problems that take a similar range of space and time to solve for example all problems solvable in polynomial time with respect to input size all problems solvable with exponential space with respect to input size and so on." ID="ID_1328483411" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="algorithm - What is an NP-complete in computer science " FOLDED="true" ID="ID_990629018" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://stackoverflow.com/questions/210829/what-is-an-np-complete-in-computer-science">
<node TEXT="NP-Complete is a class of problems. The class P consists of those problems that are solvable in polynomial time. For example they could be solved in O(n k) for some constant k where n is the size of the input. Simply put you can write a program that will run in reasonable time." ID="ID_1183681228" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="Is there a task that is solvable in polynomial time but " FOLDED="true" ID="ID_1229140849" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://cs.stackexchange.com/questions/67054/is-there-a-task-that-is-solvable-in-polynomial-time-but-not-verifiable-in-polyno/67057">
<node TEXT="A colleague of mine and I have just hit some notes of one of our professors. The notes state that there are tasks that are possible to solve in polynomial time (are in the class of PF) but that are NOT verifiable in polynomial time (are NOT in the class of NPF)." ID="ID_1949290082" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="NP-Completeness | Set 1 (Introduction) - GeeksforGeeks" FOLDED="true" ID="ID_1434589340" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://www.geeksforgeeks.org/np-completeness-set-1/">
<node TEXT="P is subset of NP (any problem that can be solved by deterministic machine in polynomial time can also be solved by non-deterministic machine in polynomial time). Informally NP is set of decision problems which can be solved by a polynomial time via a &#xe2;&#x20ac;&#x153;Lucky Algorithm&#xe2;&#x20ac;&#xfffd; a magical algorithm that always makes a right guess among the given " ID="ID_194382137" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="If You Solve This Math Problem You Could Steal All the " FOLDED="true" ID="ID_1351538754" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://www.boxcollider.com/2019/07/03/if-you-solve-this-math-problem-you-could-steal-all-the-bitcoin-in-the-world/">
<node TEXT="Share this: A diagram showing the relevant complexity classes in the P vs NP problem. &#xe2;&#x20ac;&#x153;P&#xe2;&#x20ac;&#xfffd; problems are solvable in polynomial time; &#xe2;&#x20ac;&#x153;NP&#xe2;&#x20ac;&#xfffd; problems might be solvable in polynomial time and are checkable in polynomial time. &#xe2;&#x20ac;&#x153;NP-complete&#xe2;&#x20ac;&#xfffd; problems are NP problems such that finding a solution to them would let you solve every NP problem." ID="ID_1880451670" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
</node>
</node>
</node>
<node TEXT="An Example" ID="ID_156073938" CREATED="1566881027735" MODIFIED="1566881027735" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Kruskals Algorithm" ID="ID_1573153392" CREATED="1566881027735" MODIFIED="1566881027735" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="An Example Kruskals Algorithm Interactive Visualisation#$D$#" FOLDED="true" ID="ID_194931437" CREATED="1566553719226" MODIFIED="1566553719226">
<icon BUILTIN="stop-sign"/>
<node TEXT="Kruskal MST Visualzation" FOLDED="true" ID="ID_290346616" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://www.cs.usfca.edu/~galles/visualization/Kruskal.html">
<node TEXT="Kruskal Minimum Cost Spanning Treeh. Algorithm Visualizations" ID="ID_808259623" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="Kruskal&#xe2;&#x20ac;&#x2122;s Algorithm - MUSoC&#xe2;&#x20ac;&#x2122;17 - Visualization of popular " FOLDED="true" ID="ID_1757459661" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://medium.com/musoc17-visualization-of-popular-algorithms/kruskals-algorithm-43e6ae27034a">
<node TEXT="Kruskal&#xe2;&#x20ac;&#x2122;s algorithm is a greedy algorithm that finds a minimum spanning tree for a weighted undirected garph. The algorithm operates by adding the egdes one by one in the order of their " ID="ID_847289276" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="Data Structure Visualization" FOLDED="true" ID="ID_1235919271" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://www.cs.usfca.edu/~galles/visualization/java/visualization.html">
<node TEXT="Data Structure Visualizations The best way to understand complex data structures is to see them in action. Weve developed interactive animations for a variety of data structures and algorithms. Our visualization tool is written in Java using Swing and runs well under OS X most flavors of Linux and most flavors of Windows." ID="ID_1578769654" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="Kruskal&#xe2;&#x20ac;&#x2122;s Minimum Spanning Tree Algorithm | Greedy Algo-2" FOLDED="true" ID="ID_1812655574" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://www.geeksforgeeks.org/kruskals-minimum-spanning-tree-algorithm-greedy-algo-2/">
<node TEXT="Kruskal&#xe2;&#x20ac;&#x2122;s Minimum Spanning Tree Algorithm | Greedy Algo-2 What is Minimum Spanning Tree? Given a connected and undirected graph a spanning tree of that graph is a subgraph that is a tree and connects all the vertices together." ID="ID_75910180" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="Animated Algorithms - Algomation" FOLDED="true" ID="ID_1680328029" CREATED="1566553719226" MODIFIED="1566553719226" LINK="http://www.algomation.com/">
<node TEXT="New Algomation Tutorials. A guided introduction to developing algorithms on algomation with source code and example algorithms. Step by step introductions to the entire API. Click to Get Started. Featured Algorithms All Featured Algorithms &#xe2;&#x2019;&#xb8; Duncan Meech - Algomation 2014." ID="ID_1919962643" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="Kruskals algorithm in 2 minutes &#xe2;&#x20ac;&#x201d; Review and example " FOLDED="true" ID="ID_1078884215" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://www.youtube.com/watch?v=71UQH7Pr9kU">
<node TEXT="Step by step instructions showing how to run Kruskals algorithm on a graph.  Kruskals algorithm in 2 minutes &#xe2;&#x20ac;&#x201d; Review and example Michael Sambol.  The interactive transcript could not be " ID="ID_754536867" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="Prims Algorithm: An Interactive Example - Inicio" FOLDED="true" ID="ID_1956132771" CREATED="1566553719226" MODIFIED="1566553719226" LINK="http://profesores.elo.utfsm.cl/~agv/elo320/animation/prim/prim_kruskal.html">
<node TEXT="NOTE: The example graph below is used to show how Kruskals Algorithm works for the determining of the minimum spanning tree (MST).It is highly recommended in order for you to see the difference between Kruskals Algorithm and Prims Algorithm that you draw the below graph for the Prim applet and go through it step by step." ID="ID_1810014829" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="Kruskal Algorithm." FOLDED="true" ID="ID_1135322534" CREATED="1566553719226" MODIFIED="1566553719226" LINK="http://students.ceid.upatras.gr/~papagel/project/kruskal.htm">
<node TEXT="The Kruskal Algorithm starts with a forest which consists of n trees.Each and everyone treeconsists only by one node and nothing else.In every step of the algorithmtwo different trees of this forest are connected to a bigger tree.Therefore we keep having less and bigger trees in our forest until we end up in a tree which is the minimum genetic tree (m.g.t.)." ID="ID_364008212" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="VisuAlgo - Minimum Spanning Tree (Prims Kruskals)" FOLDED="true" ID="ID_1075621252" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://visualgo.net/en/mst">
<node TEXT="Kruskals algorithm: An O(E log V) greedy MST algorithm that grows a forest of minimum spanning trees and eventually combine them into one MST. Kruskals requires a good sorting algorithm to sort edges of the input graph by increasing weight and another data structure called Union-Find Disjoint Sets (UFDS) to help in checking/preventing cycle." ID="ID_713894681" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="Minimum Spanning Tree - Kruskal and Prim algorithms" FOLDED="true" ID="ID_1060595144" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://www.youtube.com/watch?v=3fU0w9XZjAA">
<node TEXT="Minimum Spanning Tree - Kruskal and Prim algorithms explained. Author: Fabrizio Demaria student at Politecnico di Torino Italy." ID="ID_1557135846" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="Kruskals Algorithm - Properties  Examples | TutorVista" FOLDED="true" ID="ID_1135917632" CREATED="1566553719226" MODIFIED="1566553719226" LINK="https://www.tutorvista.com/content/math/kruskals-algorithm/">
<node TEXT="Kruskal&#xe2;&#x20ac;&#x2122;s algorithms is one of the types of greedy algorithms which is used to solve a minimal spanning tree (MST) by choosing the best possible choice at each step and then this decision leads to the best over all solution. Greedy algorithms do not always yield the optimal solutions. But still they provide the best possible solutions." ID="ID_1431342249" CREATED="1566553719226" MODIFIED="1566553719226"/>
</node>
<node TEXT="Cheapest Link and Kruskals Algorithms: an Interactive Gizmo" FOLDED="true" ID="ID_304677003" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://cut-the-knot.org/Curriculum/Combinatorics/WGraphs.shtml">
<node TEXT="Cheapest Link and Kruskals Algorithms. The Cheapest-Link and Kruskals are similar algoritms that perform dissimilar tasks on weighted graphs.A weighted graph is a graph whose edges have been assigned numbers - their weights. Any weighted graph in particular a subgraph of a weighted graph is also assigned weight - the sum of weights of all its edges." ID="ID_1733308281" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
</node>
<node TEXT="An Example Kruskals Algorithm Code#$D$#" FOLDED="true" ID="ID_1443262422" CREATED="1566553719227" MODIFIED="1566553719227">
<icon BUILTIN="stop-sign"/>
<node TEXT="Kruskal&#xe2;&#x20ac;&#x2122;s Minimum Spanning Tree Algorithm | Greedy Algo-2" FOLDED="true" ID="ID_1593320949" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://www.geeksforgeeks.org/kruskals-minimum-spanning-tree-algorithm-greedy-algo-2/">
<node TEXT="Below are the steps for finding MST using Kruskal&#xe2;&#x20ac;&#x2122;s algorithm. 1. Sort all the edges in non-decreasing order of their weight. 2.  Let us understand it with an example: Consider the below input graph.  code // C program for Kruskals algorithm to find Minimum Spanning Tree" ID="ID_746080052" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="Kruskals algorithm - Wikipedia" FOLDED="true" ID="ID_906910677" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://en.wikipedia.org/wiki/Kruskal%27s_algorithm">
<node TEXT="Kruskals algorithm is a minimum-spanning-tree algorithm which finds an edge of the least possible weight that connects any two trees in the forest. It is a greedy algorithm in graph theory as it finds a minimum spanning tree for a connected weighted graph adding increasing cost arcs at each step. This means it finds a subset of the edges that forms a tree that includes every vertex where the " ID="ID_1756194455" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="Kruskals Algorithm Code - YouTube" FOLDED="true" ID="ID_726080651" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://www.youtube.com/watch?v=6j-vHQMXXiA">
<node TEXT="Kruskals Algorithm Code. By: Nidhi Agarwal Online course insight for Foundation Course in C++.  Kruskals Algorithm to Find Minimum Spanning Tree Example - Duration: 6:55. Tutorials Point " ID="ID_302044477" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="Kruskals Algorithm &#xe2;&#x20ac;&#x201c; Minimum Spanning Tree (MST " FOLDED="true" ID="ID_1439349607" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://algorithms.tutorialhorizon.com/kruskals-algorithm-minimum-spanning-tree-mst-complete-java-implementation/">
<node TEXT="What is Kruskal Algorithm? Kruskal&#xe2;&#x20ac;&#x2122;s algorithm for finding the Minimum Spanning Tree(MST) which finds an edge of the least possible weight that connects any two trees in the forest; It is a greedy algorithm. It finds a subset of the edges that forms a tree that includes every vertex where the total weight of all the edges in the tree is minimized." ID="ID_1404451778" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="Kruskal&#xe2;&#x20ac;&#x2122;s Algorithm in C [Program  Algorithm] - The Crazy " FOLDED="true" ID="ID_1248868976" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://www.thecrazyprogrammer.com/2014/03/kruskals-algorithm-for-finding-minimum-cost-spanning-tree.html">
<node TEXT="It is an algorithm for finding the minimum cost spanning tree of the given graph. In kruskal&#xe2;&#x20ac;&#x2122;s algorithm edges are added to the spanning tree in increasing order of cost. If the edge E forms a cycle in the spanning it is discarded." ID="ID_1464439592" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="3.5 Prims and Kruskals Algorithms - Greedy Method - YouTube" FOLDED="true" ID="ID_820940336" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://www.youtube.com/watch?v=4ZlRH0eK-qQ">
<node TEXT="Whats a Spanning Tree ? What is a Minimum Cost Spanning Tree? Prims Algorithm Kruskals Algorithm Problems for Spanning Tree PATREON : https://www.patreon.com" ID="ID_1907522487" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="Minimum Spanning Tree (Kruskals Algorithm)" FOLDED="true" ID="ID_290150514" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://www.codesdope.com/course/algorithms-minimum-spanning-tree/">
<node TEXT="Lets take an example to understand this procedure. Correctness of Kruskals Algorithm. Lets first check if the Kruskals algorithm is giving a spanning tree or not. The tree we are getting is acyclic because in the entire algorithm we are avoiding cycles. The tree is also spanning all the vertices." ID="ID_749690224" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="Kruskals algorithm (Minimum spanning tree) with real-life " FOLDED="true" ID="ID_1543769615" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://www.hackerearth.com/blog/developers/kruskals-minimum-spanning-tree-algorithm-example/">
<node TEXT="Kruskal&#xe2;&#x20ac;&#x2122;s algorithm example in detail. I am sure very few of you would be working for a cable network company so let&#xe2;&#x20ac;&#x2122;s make the Kruskal&#xe2;&#x20ac;&#x2122;s minimum spanning tree algorithm problem more relatable. On your trip to Venice you plan to visit all the important world heritage sites but are short on time. To make your itinerary work you decide " ID="ID_1658539626" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="Kruskals Spanning Tree Algorithm - tutorialspoint.com" FOLDED="true" ID="ID_195483262" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://www.tutorialspoint.com/data_structures_algorithms/kruskals_spanning_tree_algorithm">
<node TEXT="Kruskals algorithm to find the minimum cost spanning tree uses the greedy approach. This algorithm treats the graph as a forest and every node it has as an individual tree. A tree connects to another only and only if it has the least cost among all available options and does not violate MST " ID="ID_74873068" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="Kruskals Algorithm - programiz.com" FOLDED="true" ID="ID_585803451" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://www.programiz.com/dsa/kruskal-algorithm">
<node TEXT="Kruskals vs Prims Algorithm. Prims algorithm is another popular minimum spanning tree algorithm that uses a different logic to find the MST of a graph. Instead of starting from an edge Prims algorithm starts from a vertex and keeps adding lowest-weight edges which arent in the tree until all vertices have been covered." ID="ID_1037923159" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="Kruskals Algorithm | Kruskals Algorithm Example | Gate " FOLDED="true" ID="ID_624758873" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://www.gatevidyalay.com/kruskals-algorithm-kruskals-algorithm-example/">
<node TEXT="Kruskal&#xe2;&#x20ac;&#x2122;s Algorithm- Like Prim&#xe2;&#x20ac;&#x2122;s Algorithm Kruskal&#xe2;&#x20ac;&#x2122;s Algorithm is another greedy algorithm used for finding the Minimum Spanning Tree (MST) of a given graph.; The graph must be weighted connected and undirected. Steps for implementing Kruskal&#xe2;&#x20ac;&#x2122;s Algorithm- Step-01: Sort all the edges from low weight to high weight." ID="ID_333307158" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="C Program To Implement Kruskals Algorithm For Minimum " FOLDED="true" ID="ID_103082459" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://www.codingalpha.com/kruskals-algorithm-c-program/">
<node TEXT="Must Read: C Program To Implement Warshall&#xe2;&#x20ac;&#x2122;s Algorithm Output. In case you get any Compilation Errors or any doubts in this Code To Make Minimum Spanning Tree using Kruskal&#xe2;&#x20ac;&#x2122;s Algorithm in C Programming let us know about it in the Comment Section below." ID="ID_818451704" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
</node>
</node>
</node>
<node TEXT="Nondeterministic Polynomial Time" ID="ID_1990953393" CREATED="1566881027737" MODIFIED="1566881027737" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Nondeterministic Polynomial Time Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1918742333" CREATED="1566553719227" MODIFIED="1566553719227">
<icon BUILTIN="stop-sign"/>
<node TEXT="NP (complexity) - Wikipedia" FOLDED="true" ID="ID_230589791" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://en.wikipedia.org/wiki/NP_(complexity)">
<node TEXT="In computational complexity theory NP (nondeterministic polynomial time) is a complexity class used to classify decision problems.NP is the set of decision problems for which the problem instances where the answer is yes have proofs verifiable in polynomial time.. An equivalent definition of NP is the set of decision problems solvable in polynomial time by a non-deterministic Turing machine." ID="ID_1739531682" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="Non-deterministic Polynomial Time Decidable Problem " FOLDED="true" ID="ID_1587971392" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://www.youtube.com/watch?v=DoGIm5jNAtc">
<node TEXT="Non-deterministic Polynomial Time Decidable Problem - Intro to Algorithms  The interactive transcript could not be loaded.  Nondeterministic Turing Machine (Part 1) - Duration: " ID="ID_1524017195" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="P versus NP problem - Wikipedia" FOLDED="true" ID="ID_1522959077" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://en.wikipedia.org/wiki/Complexity_classes_P_and_NP">
<node TEXT="The P versus NP problem is a major unsolved problem in computer science.It asks whether every problem whose solution can be quickly verified (technically verified in polynomial time) can also be solved quickly (again in polynomial time).. It is one of the seven Millennium Prize Problems selected by the Clay Mathematics Institute each of which carries a US$1000000 prize for the first " ID="ID_29042086" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="added visuals for TSP &#xc2;&#xb7; MUSoC/Visualization-of-popular " FOLDED="true" ID="ID_1585638057" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://github.com/MUSoC/Visualization-of-popular-algorithms-in-Python/commit/b74bac90a6c603bd93b899bd10f920364cd286f9">
<node TEXT="Visualization of popular algorithms using NetworkX Graph libray - MUSoC/Visualization-of-popular-algorithms-in-Python" ID="ID_1683597952" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="Non-deterministic exponential time has two-prover " FOLDED="true" ID="ID_457898314" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://www.researchgate.net/profile/Lance_Fortnow/publication/3505565_Nondeterministic_exponential_time_has_two-prover_interactiveprotocols/links/02e7e52bd7adde3ed6000000.pdf?disableCoverPage=true">
<node TEXT="NON-DETERMINISTIC EXPONENTIAL TIME HAS  convince a randomizing polynomial time verifier in polynomial time that  guages having two-prover interactive proof systems is nondeterministic " ID="ID_172584212" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="Visualization-of-popular-algorithms-in-Python/Travelling " FOLDED="true" ID="ID_1506111958" CREATED="1566553719227" MODIFIED="1566553719227" LINK="https://github.com/MUSoC/Visualization-of-popular-algorithms-in-Python/tree/master/Travelling%20Salesman%20Problem">
<node TEXT="First let us understand the definition of NP- hard. NP (nondeterministic polynomial time) problem is the one whose solution could be verified in polynomial time but the problem is not guaranteed to be solved in polynomial time. Now NP - hard problem are those which are atleast as hard as any NP problem." ID="ID_178204447" CREATED="1566553719227" MODIFIED="1566553719227"/>
</node>
<node TEXT="Difference between Deterministic and Non-deterministic " FOLDED="true" ID="ID_12972831" CREATED="1566553719245" MODIFIED="1566553719245" LINK="https://www.geeksforgeeks.org/difference-between-deterministic-and-non-deterministic-algorithms/">
<node TEXT="In deterministic algorithm for a given particular input the computer will always produce the same output going through the same states but in case of non-deterministic algorithm for the same input the compiler may produce different output in different runs.In fact non-deterministic algorithms can&#xe2;&#x20ac;&#x2122;t solve the problem in polynomial time and can&#xe2;&#x20ac;&#x2122;t determine what is the next step." ID="ID_1978100318" CREATED="1566553719245" MODIFIED="1566553719245"/>
</node>
<node TEXT="Why do deterministic and non-deterministic Turing machines " FOLDED="true" ID="ID_1895218123" CREATED="1566553719245" MODIFIED="1566553719245" LINK="https://www.quora.com/Why-do-deterministic-and-non-deterministic-Turing-machines-have-the-same-power">
<node TEXT="First I think that you mean by &#xe2;&#x20ac;&#x153;having the same power&#xe2;&#x20ac;&#xfffd; that the two models of computation are equivalent that is they recognize (accept) the same class of languages. So my answer will try to answer that. I assume that you know what is a Turing " ID="ID_1813256886" CREATED="1566553719245" MODIFIED="1566553719245"/>
</node>
<node TEXT="Nondeterministic Circuit Lower Bounds from Mildly " FOLDED="true" ID="ID_1063623024" CREATED="1566553719245" MODIFIED="1566553719245" LINK="http://pages.cs.wisc.edu/~dieter/Papers/r-nlb-ccc.pdf">
<node TEXT="Nondeterministic Circuit Lower Bounds from Mildly Derandomizing Arthur-Merlin Games  Randomized polynomial-time decision procedures can be simulated in NSUBEXP (the subexponential version of NP)  [10]: prBPP can be simulated in nondeterministic subex-ponential time (NSUBEXP) with subpolynomial advice " ID="ID_1694715869" CREATED="1566553719245" MODIFIED="1566553719245"/>
</node>
<node TEXT="Polynomial derivatives: 3D visualization - YouTube" FOLDED="true" ID="ID_1466348361" CREATED="1566553719245" MODIFIED="1566553719245" LINK="https://www.youtube.com/watch?v=tWnvt-8wSeA">
<node TEXT="How to visualize the derivatives of polynomials.  Polynomial derivatives: 3D visualization Physics Videos by Eugene Khutoryansky  Gravitys effect on the flow of time in General Relativity " ID="ID_349834623" CREATED="1566553719245" MODIFIED="1566553719245"/>
</node>
<node TEXT="CiteSeerX &#xe2;&#x20ac;&#x201d; Non-Deterministic Exponential Time has Two " FOLDED="true" ID="ID_1820276374" CREATED="1566553719245" MODIFIED="1566553719245" LINK="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.130.9311">
<node TEXT="CiteSeerX - Document Details (Isaac Councill Lee Giles Pradeep Teregowda): We determine the exact power of two-prover inter-active proof systems introduced by Ben-Or Goldwasser Kilian and Wigderson (1988). In this system two all-powerful non-communicating provers convince a randomizing polynomial time verifier in polynomial time that the input z belongs to the language L." ID="ID_1290498181" CREATED="1566553719245" MODIFIED="1566553719245"/>
</node>
<node TEXT="The Flying Dutchman: Big Numbers - blogspot.com" FOLDED="true" ID="ID_678094664" CREATED="1566553719245" MODIFIED="1566553719245" LINK="https://chrislaffra.blogspot.com/2016/12/big-numbers.html">
<node TEXT="O(log n) O(n) and even O(n log n) stay linear for a long time. The big P refers to algorithms that can be solved in polynomial time while NP refers to nondeterministic polynomial time. When interviewing you definitely do not want to be nondeterministic. Already for n=10 the purple line for O(n^2) is off the scale in the above chart." ID="ID_1430798504" CREATED="1566553719245" MODIFIED="1566553719245"/>
</node>
</node>
<node TEXT="Nondeterministic Polynomial Time Code#$D$#" FOLDED="true" ID="ID_805279788" CREATED="1566553719245" MODIFIED="1566553719245">
<icon BUILTIN="stop-sign"/>
<node TEXT="NP (complexity) - Wikipedia" FOLDED="true" ID="ID_1240415326" CREATED="1566553719245" MODIFIED="1566553719245" LINK="https://en.wikipedia.org/wiki/NP_(complexity)">
<node TEXT="In computational complexity theory NP (nondeterministic polynomial time) is a complexity class used to classify decision problems.NP is the set of decision problems for which the problem instances where the answer is yes have proofs verifiable in polynomial time.. An equivalent definition of NP is the set of decision problems solvable in polynomial time by a non-deterministic Turing machine." ID="ID_742854324" CREATED="1566553719245" MODIFIED="1566553719245"/>
</node>
<node TEXT="What is meant by solvable by non deterministic algorithm " FOLDED="true" ID="ID_891290605" CREATED="1566553719245" MODIFIED="1566553719245" LINK="https://cs.stackexchange.com/questions/1243/what-is-meant-by-solvable-by-non-deterministic-algorithm-in-polynomial-time">
<node TEXT="Informally the main difference between nondeterministic algorithms and the normal deterministic algorithms is that when provided with multiple choices to take the deterministic solution will have to check one of them at a time in sequence while the nondeterministic version can cheat a bit." ID="ID_1526922187" CREATED="1566553719245" MODIFIED="1566553719245"/>
</node>
<node TEXT="algorithm - Non deterministic Polynomial(NP) vs Polynomial " FOLDED="true" ID="ID_658229919" CREATED="1566553719245" MODIFIED="1566553719245" LINK="https://stackoverflow.com/questions/38673541/non-deterministic-polynomialnp-vs-polynomialp">
<node TEXT="NP(nondeterministic polynomial Problem):-Now there are a lot of programs that dont (necessarily) run in polynomial time on a regular computer but do run in polynomial time on a nondeterministic Turing machine. These programs solve problems in NP which stands for nondeterministic polynomial time." ID="ID_1159192422" CREATED="1566553719245" MODIFIED="1566553719245"/>
</node>
<node TEXT="Difference between Deterministic and Non-deterministic " FOLDED="true" ID="ID_1179968477" CREATED="1566553719245" MODIFIED="1566553719245" LINK="https://www.geeksforgeeks.org/difference-between-deterministic-and-non-deterministic-algorithms/">
<node TEXT="In deterministic algorithm for a given particular input the computer will always produce the same output going through the same states but in case of non-deterministic algorithm for the same input the compiler may produce different output in different runs.In fact non-deterministic algorithms can&#xe2;&#x20ac;&#x2122;t solve the problem in polynomial time and can&#xe2;&#x20ac;&#x2122;t determine what is the next step." ID="ID_1867006043" CREATED="1566553719245" MODIFIED="1566553719245"/>
</node>
<node TEXT="Nondeterministic polynomial time factoring in the tile " FOLDED="true" ID="ID_1100142698" CREATED="1566553719245" MODIFIED="1566553719245" LINK="https://people.cs.umass.edu/~brun/pubs/pubs/Brun08factor.pdf">
<node TEXT="Nondeterministic polynomial time factoring in the tile  Other early attempts at nondeterministic computation include a proposal by Lagoudakis et al. to solve the satis&#xef;&#xac;&#xfffd;ability problem [26]. They informally de&#xef;&#xac;&#xfffd;ne a system that nondeterministically computes whether or not an" ID="ID_1653815931" CREATED="1566553719245" MODIFIED="1566553719245"/>
</node>
<node TEXT="nondeterministic polynomial time from FOLDOC" FOLDED="true" ID="ID_1552184771" CREATED="1566553719245" MODIFIED="1566553719245" LINK="http://foldoc.org/nondeterministic%20polynomial%20time">
<node TEXT="nondeterministic polynomial time complexity (NP) A set or property of computational decision problems solvable by a nondeterministic Turing Machine in a number of steps that is a polynomial function of the size of the input. The word nondeterministic suggests a method of generating potential solutions using some form of nondeterminism or trial and error." ID="ID_31924217" CREATED="1566553719245" MODIFIED="1566553719245"/>
</node>
<node TEXT="Non-deterministic algorithms" FOLDED="true" ID="ID_767788081" CREATED="1566553719245" MODIFIED="1566553719245" LINK="http://artemis.cs.yale.edu/classes/cs460/Spring98/chap5/nondet.html">
<node TEXT="The single most important non-deterministic complexity class is nondeterministic polynomial time denoted by NP. Its relationship with the class P (deterministic polynomial time) is perhaps the most important unsolved problem in the theory of computing. This is the famous P=NP problem." ID="ID_1720252287" CREATED="1566553719245" MODIFIED="1566553719245"/>
</node>
<node TEXT="NP-completeness - Wikipedia" FOLDED="true" ID="ID_1904308089" CREATED="1566553719245" MODIFIED="1566553719245" LINK="https://en.wikipedia.org/wiki/NP-completeness">
<node TEXT="The concept of NP-completeness was introduced in 1971 (see Cook&#xe2;&#x20ac;&#x201c;Levin theorem) though the term NP-complete was introduced later. At the 1971 STOC conference there was a fierce debate between the computer scientists about whether NP-complete problems could be solved in polynomial time on a deterministic Turing machine." ID="ID_1300842341" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="P versus NP for dummies @ Things Of Interest - qntm" FOLDED="true" ID="ID_1266071048" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://qntm.org/pnp">
<node TEXT="Clearly any nondeterministic Turing machine can masquerade as a deterministic Turing machine by simply not splitting at any step. So any problem solvable by a deterministic Turing machine in polynomial time is also solvable by a nondeterministic Turing machine in polynomial time. Thus P &#xe2;&#x160;&#x2020; NP." ID="ID_417278137" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="algorithm - I do not understand the concept of Non " FOLDED="true" ID="ID_1300553088" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://stackoverflow.com/questions/13524011/i-do-not-understand-the-concept-of-non-deterministic-turing-machine">
<node TEXT="The concept of Non Deterministic Turing Machine is purely theoretical - there is no non-deterministic turing machine available. Bonus: Note that everything that can be done with Non Deterministic Turing Machine - can be done with a Deterministic Turing Machine (and vise versa) - for example the Halting Problem is not decideable in either " ID="ID_1405814246" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="Nondeterministic polynomial time | Article about " FOLDED="true" ID="ID_168217089" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://encyclopedia2.thefreedictionary.com/nondeterministic+polynomial+time">
<node TEXT="nondeterministic polynomial time (complexity) (NP) A set or property of computational decision problems solvable by a nondeterministic Turing Machine in a number of steps that is a polynomial function of the size of the input. The word nondeterministic suggests a method of generating potential solutions using some form of nondeterminism or trial and " ID="ID_1690077945" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="np complete - Non-Deterministic Polynomial Time Algorithm " FOLDED="true" ID="ID_603504864" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://math.stackexchange.com/questions/954092/non-deterministic-polynomial-time-algorithm">
<node TEXT="My understanding is that for problems where there are an exponential number of possible solutions a non-deterministic turing machine (NTM) is able to solve it in polynomial time because an NTM can generate and test all possibilities in parallel. The examples Ive seen of non-deterministic polynomial time algorithms are generally of the form:" ID="ID_1322953843" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
</node>
</node>
<node TEXT="An NP Example" ID="ID_1410841483" CREATED="1566881027740" MODIFIED="1566881027740" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="The Traveling Salesman Problem" ID="ID_1853577796" CREATED="1566881027740" MODIFIED="1566881027740" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="An NP Example: The Traveling Salesman Problem Interactive Visualisation#$D$#" FOLDED="true" ID="ID_242655486" CREATED="1566553719246" MODIFIED="1566553719246">
<icon BUILTIN="stop-sign"/>
<node TEXT="Traveling Salesman Problem Visualization - YouTube" FOLDED="true" ID="ID_1249897917" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://www.youtube.com/watch?v=SC5CX8drAtU">
<node TEXT="Visually compares Greedy Local Search and Simulated Annealing strategies for addressing the Traveling Salesman problem. Thanks to the Discrete Optimization course on Coursera by Pascal Van " ID="ID_239359927" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="3D example--TSP visualisation-Zhang Chao.avi - YouTube" FOLDED="true" ID="ID_1990646495" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://www.youtube.com/watch?v=8-UaP3Iz1Ww">
<node TEXT="un 3D random example of TSP visualisation- written by Zhang Chao&#xe5;&#xbc;&#xa0;&#xe8;&#xb6;&#x2026; UCBL (send me a message if you need other videos.) The travelling salesman problem (TSP) or travelling salesperson problem " ID="ID_1544577655" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="Travelling salesman problem - Wikipedia" FOLDED="true" ID="ID_901604656" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://en.wikipedia.org/wiki/Travelling_salesman_problem">
<node TEXT="The travelling salesman problem (TSP) asks the following question: Given a list of cities and the distances between each pair of cities what is the shortest possible route that visits each city and returns to the origin city?It is an NP-hard problem in combinatorial optimization important in operations research and theoretical computer science. " ID="ID_1173144828" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="Chapter 10" FOLDED="true" ID="ID_1534214439" CREATED="1566553719246" MODIFIED="1566553719246" LINK="http://www.csd.uoc.gr/~hy583/papers/ch11.pdf">
<node TEXT="10.2 Methods to solve the traveling salesman problem 10.2.1 Using the triangle inequality to solve the traveling salesman problem Definition: If for the set of vertices a b c &#xe2;&#x2c6;&#x2c6; V it is true that t (a c) &#xe2;&#x2030;&#xa4; t(a b) + t(b c) where t is the cost function we say that t satisfies the triangle inequality." ID="ID_838507644" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="The Traveling Salesman Problem - examples.gurobi.com" FOLDED="true" ID="ID_1574612446" CREATED="1566553719246" MODIFIED="1566553719246" LINK="http://examples.gurobi.com/traveling-salesman-problem/">
<node TEXT="Problem Description. The Traveling Salesman Problem (TSP) is a classic problem in combinatorial optimization. It was first formulated as an integer program by Dantzig Fulkerson and Johnson in 1954. In this example we consider a salesman traveling in the US." ID="ID_1324797730" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="The travelling salesman | plus.maths.org" FOLDED="true" ID="ID_1062898404" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://plus.maths.org/content/travelling-salesman">
<node TEXT="This would then mean that every problem in NP could be solved in polynomial time you would have proved that P=NP and could go and collect your $1 million. (And the same would be true if you found such an algorithm for the harder general version of the travelling salesman problem.) But there are other implications too." ID="ID_27228486" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="Traveling Salesman - Local Search | Coursera" FOLDED="true" ID="ID_961351464" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://www.coursera.org/lecture/discrete-optimization/traveling-salesman-syCkX">
<node TEXT="Awesome course learned a lot for solving NP hard problem. It could be hard for people without basic algorithm and data structure background.  So remember you know what a traveling salesman problem is is that you have a .  If you can build a visualization to see . how your algorithm is doing. You know? Modeling various aspects of the " ID="ID_647382488" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="python - Travelling Salesman in scipy - Stack Overflow" FOLDED="true" ID="ID_650769845" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://stackoverflow.com/questions/25585401/travelling-salesman-in-scipy">
<node TEXT="The scipy.optimize functions are not constructed to allow straightforward adaptation to the traveling salesman problem (TSP). For a simple solution I recommend the 2-opt algorithm which is a well-accepted algorithm for solving the TSP and relatively straightforward to implement." ID="ID_298981596" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="Traveling salesman portrait in Python | Dr. Randal S. Olson" FOLDED="true" ID="ID_311485645" CREATED="1566553719246" MODIFIED="1566553719246" LINK="http://www.randalolson.com/2018/04/11/traveling-salesman-portrait-in-python/">
<node TEXT="Last week Antonio S. Chinch&#xc3;&#xb3;n made an interesting post showing how to create a traveling salesman portrait in R. Essentially the idea is to sample a bunch of dark pixels in an image solve the well-known traveling salesman problem for those pixels then draw the optimized route between the pixels to create a unique portrait from the image. Antonio is a fan of Frankenstein so he created a " ID="ID_1223138454" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="An Interactive Tutorial for NP-Completeness" FOLDED="true" ID="ID_584362177" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://vtechworks.lib.vt.edu/bitstream/handle/10919/52973/Maji_N_T_2015.pdf">
<node TEXT="An Interactive Tutorial for NP-Completeness Nabanita Maji (ABSTRACT) A Theory of Algorithms course is essential to any Computer Science curriculum at both the undergraduate" ID="ID_313897000" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="Process visualization to solve the travelling Salesman problem" FOLDED="true" ID="ID_1021965439" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://www.researchgate.net/publication/247929506_Process_visualization_to_solve_the_travelling_Salesman_problem">
<node TEXT="Download Citation on ResearchGate | Process visualization to solve the travelling Salesman problem | The Traveling Salesman Problem (TSP) is one of the well studied combinatorial optimization " ID="ID_931721878" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="Traveling Salesman Problem and TSP Art - Statistics How To" FOLDED="true" ID="ID_618462895" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://www.statisticshowto.datasciencecentral.com/traveling-salesman-problem-and-tsp-art/">
<node TEXT="The first known appearance of the traveling salesman problem was in an 1832 handbook Der Handlungsreisende for traveling salesmen although it wasn&#xe2;&#x20ac;&#x2122;t stated as a mathematical problem until the 1930s. The book suggests five routes for the traveling salesman through Germany and Switzerland." ID="ID_149915315" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
</node>
<node TEXT="An NP Example: The Traveling Salesman Problem Code#$D$#" FOLDED="true" ID="ID_919378662" CREATED="1566553719246" MODIFIED="1566553719246">
<icon BUILTIN="stop-sign"/>
<node TEXT="Traveling Salesman Problem (TSP) Implementation " FOLDED="true" ID="ID_798862715" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://www.geeksforgeeks.org/traveling-salesman-problem-tsp-implementation/">
<node TEXT="Travelling Salesman Problem (TSP): Given a set of cities and distance between every pair of cities the problem is to find the shortest possible route that visits every city exactly once and returns back to the starting point. Note the difference between Hamiltonian Cycle and TSP. The Hamiltoninan cycle problem is to find if there exist a tour that visits every city exactly once." ID="ID_386803030" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="Travelling salesman problem - Wikipedia" FOLDED="true" ID="ID_1296644286" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://en.wikipedia.org/wiki/Travelling_salesman_problem">
<node TEXT="The travelling salesman problem (TSP) asks the following question: Given a list of cities and the distances between each pair of cities what is the shortest possible route that visits each city and returns to the origin city?It is an NP-hard problem in combinatorial optimization important in operations research and theoretical computer science. " ID="ID_245188610" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="Why is the traveling salesman problem NP complete? - Quora" FOLDED="true" ID="ID_1963126791" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://www.quora.com/Why-is-the-traveling-salesman-problem-NP-complete">
<node TEXT="We must show two things namely that Traveling Salesman (TSP) is in NP and that TSP is NP-Hard. These requirements follow from the definition of NP-Completeness. Note that NP is the complexity class of decision problems thus we need the decision" ID="ID_574181175" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="Solution to Travelling Salesman Problem - CodeProject" FOLDED="true" ID="ID_507117079" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://www.codeproject.com/articles/9372/solution-to-travelling-salesman-problem">
<node TEXT="I agree with Capn Code. To achieve such a big task (show that P=NP) you need to do more than: as far as i am concered i think this algorithms yields the optimal hamiltonion circuit. You must produce a prove; testing wont be enough. There is an almost optimal solution to the Traveling Salesman Problem. It is known as the triangle " ID="ID_1677322032" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="Travelling Salesman Problem C Program - codingalpha.com" FOLDED="true" ID="ID_207790578" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://www.codingalpha.com/travelling-salesman-problem-c-program/">
<node TEXT="Solve Travelling Salesman Problem Algorithm in C Programming using Dynamic Backtracking and Branch and Bound approach with explanation.  Great compilation of travelling salesman algorithm code and explanation.  The TSP Problem is one of the best examples for NP Problems. This problem can be solved in Non Deterministic Polynomial Time." ID="ID_866310886" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="Evolution of a salesman: A complete genetic algorithm " FOLDED="true" ID="ID_1784305567" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://towardsdatascience.com/evolution-of-a-salesman-a-complete-genetic-algorithm-tutorial-for-python-6fe5d2b3ca35">
<node TEXT="The problem. In this tutorial we&#xe2;&#x20ac;&#x2122;ll be using a GA to find a solution to the traveling salesman problem (TSP). The TSP is described as follows: &#xe2;&#x20ac;&#x153;Given a list of cities and the distances between each pair of cities what is the shortest possible route that visits each city and returns to the origin city?&#xe2;&#x20ac;&#xfffd;" ID="ID_1452509652" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="Travelling Salesman Problem | Set 1 (Naive and Dynamic " FOLDED="true" ID="ID_1659739439" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://www.geeksforgeeks.org/travelling-salesman-problem-set-1/">
<node TEXT="Travelling Salesman Problem (TSP):  For example consider the graph shown in figure on right side. A TSP tour in the graph is 1-2-4-3-1. The cost of the tour is 10+25+30+15 which is 80. The problem is a famous NP hard problem. There is no polynomial time know solution for this problem." ID="ID_482807420" CREATED="1566553719246" MODIFIED="1566553719246"/>
</node>
<node TEXT="The Traveling Salesman Problem Is Not NP-complete" FOLDED="true" ID="ID_1648326581" CREATED="1566553719246" MODIFIED="1566553719246" LINK="https://eklitzke.org/the-traveling-salesman-problem-is-not-np-complete">
<node TEXT="Since it takes exponential time to solve NP the solution cannot be checked in polynomial time. Thus this problem is NP-hard but not in NP. In general for a problem to be NP-complete it has to be a &#xe2;&#x20ac;&#x153;decision problem&#xe2;&#x20ac;&#xfffd; meaning that the problem is to decide if something is true or not." ID="ID_808311815" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="Understanding the reduction from Hamiltonian cycle to the " FOLDED="true" ID="ID_1113751423" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://math.stackexchange.com/questions/1077436/understanding-the-reduction-from-hamiltonian-cycle-to-the-traveling-salesman-pro">
<node TEXT="The traveling salesman problem is NP-complete. Proof First we have to prove that TSP belongs to NP. If we want to check a tour for credibility we check that the tour contains each vertex once" ID="ID_852972039" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="The traveling salesman and 10 lines of Python | EPH" FOLDED="true" ID="ID_1103656316" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://ericphanson.com/blog/2016/the-traveling-salesman-and-10-lines-of-python/">
<node TEXT="Update (21 May 18): It turns out this post is one of the top hits on google for &#xe2;&#x20ac;&#x153;python travelling salesmen&#xe2;&#x20ac;&#xfffd;! That means a lot of people who want to solve the travelling salesmen problem in python end up here. While I tried to do a good job explaining a simple algorithm for this it was for a challenge to make a progam in 10 lines of code or fewer." ID="ID_1350910964" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="How to Solve Travelling Salesman Problems - TSP - YouTube" FOLDED="true" ID="ID_1781440570" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://www.youtube.com/watch?v=BmsC6AEbkrw">
<node TEXT="A short tutorial on finding intervals for optimal routes using nearest neighbour for upper bounds and using minimum spanning trees to find lower bounds for optimal routes. This is part 3 of 3 in " ID="ID_1564592009" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="Travelling Salesman Problem using Dynamic Programming " FOLDED="true" ID="ID_1029732177" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://www.youtube.com/watch?v=JE0JE8ce1V0">
<node TEXT="Travelling Salesman Problem using Dynamic Programming - Easiest Approach with Code  Travelling Salesman Problem in Operations  Introduction to Traveling Sales Man Problem (TSP) n why it is " ID="ID_180803445" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
</node>
</node>
</node>
<node TEXT="Polynomial-Time Reductions NP Complete Problems" ID="ID_1274286860" CREATED="1566881027743" MODIFIED="1566881027743" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Polynomial-Time Reductions NP Complete Problems Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1815849092" CREATED="1566553719247" MODIFIED="1566553719247">
<icon BUILTIN="stop-sign"/>
<node TEXT="16. Complexity: P NP NP-completeness Reductions" FOLDED="true" ID="ID_1869265704" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://www.youtube.com/watch?v=mr1FMrwi6Ew">
<node TEXT="The interactive transcript could not be loaded.  NP Completeness II  Reductions - Lecture 16 - Duration:  NP-Hard and NP-Complete Problems - Duration: " ID="ID_1890421108" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="NP-completeness - Wikipedia" FOLDED="true" ID="ID_764234227" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://en.wikipedia.org/wiki/NP-completeness">
<node TEXT="To the right is a diagram of some of the problems and the reductions typically used to prove their NP-completeness. In this diagram problems are reduced from bottom to top. Note that this diagram is misleading as a description of the mathematical relationship between these problems as there exists a polynomial-time reduction between any two NP-complete problems; but it indicates where " ID="ID_615918081" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="NP-hardness - Wikipedia" FOLDED="true" ID="ID_728580384" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://en.wikipedia.org/wiki/NP-hardness">
<node TEXT="NP-hardness (non-deterministic polynomial-time hardness) in computational complexity theory is the defining property of a class of problems that are informally at least as hard as the hardest problems in NP.A simple example of an NP-hard problem is the subset sum problem.. A more precise specification is: a problem H is NP-hard when every problem L in NP can be reduced in polynomial time " ID="ID_190872481" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="NP-Completeness | Set 1 (Introduction) - GeeksforGeeks" FOLDED="true" ID="ID_388678737" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://www.geeksforgeeks.org/np-completeness-set-1/">
<node TEXT="NP-complete problems are the hardest problems in NP set. A decision problem L is NP-complete if: 1) L is in NP (Any given solution for NP-complete problems can be verified quickly but there is no efficient known solution). 2) Every problem in NP is reducible to L in polynomial time (Reduction is defined below)." ID="ID_176380734" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="An Interactive Tutorial for NP-Completeness" FOLDED="true" ID="ID_191270179" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://vtechworks.lib.vt.edu/bitstream/handle/10919/52973/Maji_N_T_2015.pdf">
<node TEXT="An Interactive Tutorial for NP-Completeness Nabanita Maji  understand visualizations for standard NP Complete problems reductions and proofs. In this thesis we  we present a visualization of a reduction as a part of the proof for NP-Completeness. Our work has been delivered as a collection of modules in OpenDSA an interactive " ID="ID_697823801" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="Can NP-hard be verified in polynomial time? - Quora" FOLDED="true" ID="ID_1727071171" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://www.quora.com/Can-NP-hard-be-verified-in-polynomial-time">
<node TEXT="NP-Hard is the set of the problems that are at least as hard as NP-Complete problems. And NP-Complete problems are the NP problems that are the hardest of NP problems. And NP problems are are the ones that have polynomial time certifications. Thus" ID="ID_1938501823" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="NP Completeness for Dummies: Reduction of NP Complete " FOLDED="true" ID="ID_741669473" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://www.youtube.com/watch?v=1QeHNctSveU">
<node TEXT="This video lecture is produced by S. Saurabh. He is B.Tech from IIT and MS from USA. Reduction in Polynomial Time To study interview questions on Linked List" ID="ID_629497703" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="376 Flashcards | Quizlet" FOLDED="true" ID="ID_343987084" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://quizlet.com/112602909/376-flash-cards/">
<node TEXT="1. Independent set in NP 2. It reduces to some NP-Complete problem (and thus all other NP complete problems) A=p B 2.a: Create a mapping that runs in polynomial time 2.b: Show that if input exists in language A the mapping of input exists in B 2.c. Show that if mapping exists in B then the reverse (or original) exists in A 2.d." ID="ID_633110564" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="On Isomorphisms and Density of $NP$ and Other Complete " FOLDED="true" ID="ID_1646291434" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://epubs.siam.org/doi/10.1137/0206023">
<node TEXT="Interactive Features. Journal / E-book / Proceedings TOC Alerts;  NP complete problems polynomial time isomorphisms sparse sets. Publication Data. ISSN (print): 0097-5397. ISSN (online): 1095-7111. Publisher: Society  Closure of Polynomial Time Partial Information Classes under Polynomial Time Reductions. Fundamentals of Computation " ID="ID_859667642" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="Using Interactive Visualization for Teaching the Theory of " FOLDED="true" ID="ID_930060686" CREATED="1566553719247" MODIFIED="1566553719247" LINK="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.27.1163">
<node TEXT="CiteSeerX - Document Details (Isaac Councill Lee Giles Pradeep Teregowda): In this paper we investigate the potential of interactive visualization for teaching the theory of NP-completeness to undergraduate students of computer science. Based on this analysis we developed some interactive Java applets which we use to present an NP-complete tiling problem PUZZLE in our lecture." ID="ID_403235621" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="On the (Non) NP-Hardness of Computing Circuit Complexity" FOLDED="true" ID="ID_172499095" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://eccc.weizmann.ac.il/report/2014/164/download/">
<node TEXT="randomized polynomial time a separation that appears quite far from a proof at the present time. MCSP is Not Hard Under &#xe2;&#x20ac;&#x153;Local&#xe2;&#x20ac;&#xfffd; Reductions. Many NP-complete problems are still complete under polynomial-time reductions with severe-looking restrictions such as reductions which only need O(logc n) time to output an arbitrary bit of the output." ID="ID_168976804" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="Lecture 4 (Jan 17): NP Completeness" FOLDED="true" ID="ID_210004110" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://webdocs.cs.ualberta.ca/~zacharyf/courses/complexity_2019/notes/complexity-w19-lec04.pdf">
<node TEXT="interesting NP-complete problem since its de nition is closely tied to the notion of Turing Machine. In this  number of variables so this still results in a polynomial-time reduction. For a more streamlined approach use facts like a^b)c^dis equivalent to (a_b_c) ^(a_b_d)." ID="ID_1517868897" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
</node>
<node TEXT="Polynomial-Time Reductions NP Complete Problems Code#$D$#" FOLDED="true" ID="ID_1997002605" CREATED="1566553719247" MODIFIED="1566553719247">
<icon BUILTIN="stop-sign"/>
<node TEXT="NP-completeness - Wikipedia" FOLDED="true" ID="ID_403443729" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://en.wikipedia.org/wiki/NP-completeness">
<node TEXT="To the right is a diagram of some of the problems and the reductions typically used to prove their NP-completeness. In this diagram problems are reduced from bottom to top. Note that this diagram is misleading as a description of the mathematical relationship between these problems as there exists a polynomial-time reduction between any two NP-complete problems; but it indicates where " ID="ID_1662467944" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="16. Complexity: P NP NP-completeness Reductions - YouTube" FOLDED="true" ID="ID_867444450" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://www.youtube.com/watch?v=mr1FMrwi6Ew">
<node TEXT="Complexity: P NP NP-completeness Reductions MIT OpenCourseWare. Loading Unsubscribe from MIT OpenCourseWare?  NP-Hard and NP-Complete Problems - Duration: 31:53. Abdul Bari 323819 views." ID="ID_1095294845" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="Polynomial-time reduction - Wikipedia" FOLDED="true" ID="ID_395440274" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://en.wikipedia.org/wiki/Polynomial-time_reduction">
<node TEXT="A problem that belongs to NP can be proven to be NP-complete by finding a single polynomial-time many-one reduction to it from a known NP-complete problem. Polynomial-time many-one reductions have been used to define complete problems for other complexity classes including the PSPACE-complete languages and EXPTIME-complete languages." ID="ID_1587631609" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="NP-Completeness And Reduction - personal.kent.edu" FOLDED="true" ID="ID_1563155817" CREATED="1566553719247" MODIFIED="1566553719247" LINK="http://personal.kent.edu/~rmuhamma/Algorithms/MyAlgorithms/Complexity/npComplete.htm">
<node TEXT="NP-Completeness And Reduction . There are many problems for which no polynomial-time algorithms ins known. Some of these problems are traveling salesperson optimal graph coloring the knapsack problem Hamiltonian cycles integer programming finding the longest simple path in a graph and satisfying a Boolean formula." ID="ID_1539701885" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="CMSC 451: Reductions  NP-completeness - cs.cmu.edu" FOLDED="true" ID="ID_278968053" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://www.cs.cmu.edu/~ckingsf/bioinfo-lectures/npcomplete.pdf">
<node TEXT="solve Y in polynomial time using the reduction contradicting the assumption. So: If we could nd one hard problem Y we could prove that  NP. We can solve Y in polynomial time: reduce it to X. Therefore every problem in NP has a polytime algorithm and  Finding the rst NP-complete problem was the result of the Cook-Levin theorem." ID="ID_1275616124" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="What is polynomial-time reduction? - Quora" FOLDED="true" ID="ID_1217378166" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://www.quora.com/What-is-polynomial-time-reduction-2">
<node TEXT="To understand polynomial reduction you should first understand reduction. Heres a joke that could help. A mathematician is given an empty pot and is asked to made a pot of boiled water. He proceeds to fill (unboiled) water into the pot put it " ID="ID_529586115" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="Polynomial -time Reduction - Imperial College London" FOLDED="true" ID="ID_1583166291" CREATED="1566553719247" MODIFIED="1566553719247" LINK="http://www.doc.ic.ac.uk/~mrc/Computability%20%20Complexity/Lectures/C240Lec18.pdf">
<node TEXT="Polynomial -time Reduction We formalise reduction by defining p-time reduction in terms of Turing Machines. fast non-deterministic solutions to old yes/no problems Definition of p-time reduction &#xe2;&#x20ac;&#x2dc; &#xe2;&#x2030;&#xa4; &#xe2;&#x20ac;&#x2122; let A B be any two yes/no problems X a deterministic Turing Machine X reduces A to B if: for every yes-instance w of A fX(w) is defined" ID="ID_1801786224" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="DAA | Polynomial Time Verification - javatpoint" FOLDED="true" ID="ID_127663191" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://www.javatpoint.com/daa-polynomial-time-verification">
<node TEXT="Reductions: The class NP-complete (NPC) problems consist of a set of decision problems (a subset of class NP) that no one knows how to solve efficiently. But if there were a polynomial solution for even a single NP-complete problem then every problem in NPC will be solvable in polynomial time. For this we need the concept of reductions." ID="ID_1183138379" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="Reductions - Princeton University Computer Science" FOLDED="true" ID="ID_1585736196" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://www.cs.princeton.edu/~rs/AlgsDS07/23Reductions.pdf">
<node TEXT="Polynomial-time reductions for classifying problems Goal. Classify and separate problems according to relative difficulty. &#xe2;&#x20ac;&#xa2; tractable problems: can be solved in polynomial time. &#xe2;&#x20ac;&#xa2; intractable problems: seem to require exponential time. Establish tractability. If X P Y and Y is tractable then so is X. &#xe2;&#x20ac;&#xa2; Solve Y in polynomial time." ID="ID_906587817" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="Polynomial-Time Reductions Contents. Polynomial-time " FOLDED="true" ID="ID_433872350" CREATED="1566553719247" MODIFIED="1566553719247" LINK="http://www.cs.princeton.edu/~wayne/cs423/lectures/reductions-poly-4up.pdf">
<node TEXT="Polynomial-Time Reduction Purpose. Classify problems according to relative difficulty. Design algorithms. If X &#xe2;&#x2030;&#xa4;P Y and Y can be solved in polynomial-time then X can be solved in polynomial time. Establish intractability. If X &#xe2;&#x2030;&#xa4;P Y and X cannot be solved in polynomial-time then X cannot be solved in polynomial time. Anti-symmetry." ID="ID_384693850" CREATED="1566553719247" MODIFIED="1566553719247"/>
</node>
<node TEXT="NP-Completeness | Set 1 (Introduction) - GeeksforGeeks" FOLDED="true" ID="ID_1536374559" CREATED="1566553719247" MODIFIED="1566553719247" LINK="https://www.geeksforgeeks.org/np-completeness-set-1/">
<node TEXT="NP-complete problems are the hardest problems in NP set. A decision problem L is NP-complete if: 1) L is in NP (Any given solution for NP-complete problems can be verified quickly but there is no efficient known solution). 2) Every problem in NP is reducible to L in polynomial time (Reduction is defined below)." ID="ID_474017654" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="Reductions - NP-complete Problems | Coursera" FOLDED="true" ID="ID_1589336456" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://www.coursera.org/lecture/advanced-algorithms-and-complexity/reductions-cCdHQ">
<node TEXT="In this module you will study the classical NP-complete problems and the reductions between them. You will also practice solving large instances of some of these problems despite their hardness using very efficient specialized software based on tons of research in the area of NP-complete problems.  as a polynomial time algorithm for an NP " ID="ID_1182205238" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
</node>
</node>
<node TEXT="An NP-Complete Problem" ID="ID_481525284" CREATED="1566881027746" MODIFIED="1566881027746" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="The Satisfiability Problem" ID="ID_367628160" CREATED="1566881027746" MODIFIED="1566881027746" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="An NP-Complete Problem: The Satisfiability Problem Interactive Visualisation#$D$#" FOLDED="true" ID="ID_573579052" CREATED="1566553719248" MODIFIED="1566553719248">
<icon BUILTIN="stop-sign"/>
<node TEXT="Boolean Satisfiability Problem - Intro to Theoretical " FOLDED="true" ID="ID_1977087395" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://www.youtube.com/watch?v=uAdVzz1hKYY">
<node TEXT="Boolean Satisfiability Problem - Intro to Theoretical Computer Science  The interactive transcript could not be loaded.  (The Halting Problem) - Duration: 7:52." ID="ID_1502849574" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="NP completeness of SAT Problem || English ||By Studies " FOLDED="true" ID="ID_1561312448" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://www.youtube.com/watch?v=VaTSWN9JnzY">
<node TEXT="NP completeness of SAT Problem explained P NP NP-HARD NP-COMPLETE NP completeness of SAT Problem and solution SAT is NP complete proof NP completeness of SAT Problem Satisfiability problem 3 " ID="ID_1206322525" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="An Interactive Tutorial for NP-Completeness" FOLDED="true" ID="ID_907967880" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://vtechworks.lib.vt.edu/bitstream/handle/10919/52973/Maji_N_T_2015.pdf">
<node TEXT="understand visualizations for standard NP Complete problems reductions and proofs. In this thesis we present a set of visualizations that we developed using the OpenDSA framework for certain NP-Complete problems. Our paradigm is a three step process. We &#xef;&#xac;&#xfffd;rst use an AV to illustrate a particular NP-Complete problem." ID="ID_729077336" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="NP-completeness - Wikipedia" FOLDED="true" ID="ID_806488894" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://en.wikipedia.org/wiki/NP_completeness">
<node TEXT="Overview. NP-complete problems are in NP the set of all decision problems whose solutions can be verified in polynomial time; NP may be equivalently defined as the set of decision problems that can be solved in polynomial time on a non-deterministic Turing machine.A problem p in NP is NP-complete if every other problem in NP can be transformed (or reduced) into p in polynomial time." ID="ID_239471282" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="P versus NP problem - Wikipedia" FOLDED="true" ID="ID_341658399" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://en.wikipedia.org/wiki/P_vs._NP_problem">
<node TEXT="The Boolean satisfiability problem is one of many such NP-complete problems. If any NP-complete problem is in P then it would follow that P = NP. However many important problems have been shown to be NP-complete and no fast algorithm for any of them is known." ID="ID_1549363624" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="NP-Completeness | Set 1 (Introduction) - GeeksforGeeks" FOLDED="true" ID="ID_1533901007" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://www.geeksforgeeks.org/np-completeness-set-1/">
<node TEXT="NP-complete problems are the hardest problems in NP set. A decision problem L is NP-complete if: 1) L is in NP (Any given solution for NP-complete problems can be verified quickly but there is no efficient known solution). 2) Every problem in NP is reducible to L in polynomial time (Reduction is defined below)." ID="ID_1329811588" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="NP-complete - The Full Wiki" FOLDED="true" ID="ID_1806777991" CREATED="1566553719248" MODIFIED="1566553719248" LINK="http://www.thefullwiki.org/NP-complete">
<node TEXT="Formal overview. NP-complete is a subset of NP the set of all decision problems whose solutions can be verified in polynomial time; NP may be equivalently defined as the set of decision problems that can be solved in polynomial time on a nondeterministic Turing machine.A problem p in NP is also in NPC if and only if every other problem in NP can be transformed into p in polynomial time." ID="ID_1801351017" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="NP-completeness - Infogalactic: the planetary knowledge core" FOLDED="true" ID="ID_706606466" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://infogalactic.com/info/NP-completeness">
<node TEXT="Overview. NP-complete problems are in NP the set of all decision problems whose solutions can be verified in polynomial time; NP may be equivalently defined as the set of decision problems that can be solved in polynomial time on a non-deterministic Turing machine.A problem p in NP is NP-complete if every other problem in NP can be transformed (or reduced) into p in polynomial time." ID="ID_1501602040" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="NP-completeness - IPFS" FOLDED="true" ID="ID_1297453804" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://ipfs.io/ipfs/QmXoypizjW3WknFiJnKLwHCnL72vedxjQkDDP1mXWo6uco/wiki/NP-complete.html">
<node TEXT="A decision problem is NP-complete if:. is in NP and; Every problem in NP is reducible to in polynomial time. [1] can be shown to be in NP by demonstrating that a candidate solution to can be verified in polynomial time.. Note that a problem satisfying condition 2 is said to be NP-hard whether or not it satisfies condition 1. [2]" ID="ID_710920456" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="AI Lab Areas - Satisfiability" FOLDED="true" ID="ID_802179027" CREATED="1566553719248" MODIFIED="1566553719248" LINK="http://www.cs.utexas.edu/users/ai-lab/?Satisfiability">
<node TEXT="The problem of propositional satisfiability (SAT) is the classic NP-complete problem. It asks whether a Boolean expression is satisfiable: whether an assignment of Boolean values to its variables exists that makes the expression true." ID="ID_929441015" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="Constraint Satisfiability Algorithms for Interactive " FOLDED="true" ID="ID_1933619017" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://www.ijcai.org/Proceedings/89-2/Papers/026.pdf">
<node TEXT="constraint satisfiability problems are in general NP-complete it is of interest to compare the effec&#xc2;&#xad; tiveness and efficiency of heuristic algorithms as applied in particular to our application. Our research effort attempts to determine which algorithms perform best in solving the student scheduling problem (SSP) and under what condi&#xc2;&#xad; tions." ID="ID_1687938331" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="Solving SAT Problem Based on Hybrid Differential Evolution " FOLDED="true" ID="ID_450324668" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://www.researchgate.net/publication/226875484_Solving_SAT_Problem_Based_on_Hybrid_Differential_Evolution_Algorithm">
<node TEXT="Request PDF on ResearchGate | Solving SAT Problem Based on Hybrid Differential Evolution Algorithm | Satisfiability (SAT) problem is an NP-complete problem. Based on the analysis about it SAT " ID="ID_1443666995" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
</node>
<node TEXT="An NP-Complete Problem: The Satisfiability Problem Code#$D$#" FOLDED="true" ID="ID_827780976" CREATED="1566553719248" MODIFIED="1566553719248">
<icon BUILTIN="stop-sign"/>
<node TEXT="Boolean satisfiability problem - Wikipedia" FOLDED="true" ID="ID_1005861683" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://en.wikipedia.org/wiki/Boolean_satisfiability_problem">
<node TEXT="Like the satisfiability problem for arbitrary formulas determining the satisfiability of a formula in conjunctive normal form where each clause is limited to at most three literals is NP-complete also; this problem is called 3-SAT 3CNFSAT or 3-satisfiability." ID="ID_224053110" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="Satisfiability - Wikipedia" FOLDED="true" ID="ID_1605585115" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://en.wikipedia.org/wiki/Satisfiability_and_validity">
<node TEXT="In the case of classical propositional logic satisfiability is decidable for propositional formulae.In particular satisfiability is an NP-complete problem and is one of the most intensively studied problems in computational complexity theory.. Satisfiability in first-order logic. Satisfiability is undecidable and indeed it isnt even a semidecidable property of formulae in first-order logic " ID="ID_1845307011" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="The Satisfiability Problem - Stanford University" FOLDED="true" ID="ID_1795763497" CREATED="1566553719248" MODIFIED="1566553719248" LINK="http://infolab.stanford.edu/~ullman/ialc/spr10/slides/pnp2.pdf">
<node TEXT="The Satisfiability Problem (SAT) Study of boolean functions generally is concerned with the set of truth assignments (assignments of 0 or 1 to each of the variables) that make the function true. NP-completeness needs only a simpler question (SAT): does there exist a truth assignment making the function true?" ID="ID_581797635" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="Satisfiability: Algorithms Applications and Extensions" FOLDED="true" ID="ID_800993586" CREATED="1566553719248" MODIFIED="1566553719248" LINK="http://sat.inesc-id.pt/~ines/sac10.pdf">
<node TEXT="&#xe2;&#x20ac;&#x201c; At the beginning is was simply the &#xef;&#xac;&#xfffd;rst known NP-complete problem [Stephen Cook 1971] &#xe2;&#x20ac;&#x201c; After that mostly theoretical contributions followed &#xe2;&#x20ac;&#x201c; In the 90&#xe2;&#x20ac;&#x2122;s practical algorithms were developed and made available &#xe2;&#x20ac;&#x201c; Currently SAT founds many practical applications &#xe2;&#x20ac;&#x201c; SAT extensions found even more applications" ID="ID_1930572448" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="2-Satisfiability (2-SAT) Problem - GeeksforGeeks" FOLDED="true" ID="ID_599502450" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://www.geeksforgeeks.org/2-satisfiability-2-sat-problem/">
<node TEXT="Note : Boolean satisfiability problem is NP-complete (For proof refer lank&#xe2;&#x20ac;&#xfffd;Cook&#xe2;&#x20ac;&#x2122;s Theorem). What is 2-SAT Problem 2-SAT is a special case of Boolean Satisfiability Problem and can be solved in polynomial time.. To understand this better first let us see what is Conjunctive Normal Form (CNF) or also known as Product of Sums (POS)." ID="ID_1322409477" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="The Boolean Satisfiability Problem (SAT) - Donald Pederson" FOLDED="true" ID="ID_1959064504" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://embedded.eecs.berkeley.edu/eecsx44/fall2011/lectures/SATSolving.pdf">
<node TEXT="&#xe2;&#x20ac;&#x201c; First NP-complete problem (Cook 1971) &#xe2;&#x20ac;&#xa2; Many practical applications: &#xe2;&#x20ac;&#x201c; Model Checking &#xe2;&#x20ac;&#x201c; Automatic Test Pattern Generation &#xe2;&#x20ac;&#x201c; Combinational Equivalence Checking &#xe2;&#x20ac;&#x201c; Planning in AI &#xe2;&#x20ac;&#x201c; Automated Theorem Proving &#xe2;&#x20ac;&#x201c; Software Verification &#xe2;&#x20ac;&#x201c;&#xe2;&#x20ac;&#xa6; 4 An Example &#xe2;&#x20ac;&#xa2; Inputs to SAT solvers are usually represented in CNF" ID="ID_1329218997" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="Boolean Satisfiability Problem - Intro to Theoretical " FOLDED="true" ID="ID_103865173" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://www.youtube.com/watch?v=uAdVzz1hKYY">
<node TEXT="Boolean Satisfiability Problem - Intro to Theoretical Computer Science  (The Halting Problem) - Duration: 7:52.  NP-Hard and NP-Complete Problems - Duration: 31:53. Abdul Bari 324841 views." ID="ID_1497415438" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="3-SAT Certifier (3 Satisfiability Problem) - github.com" FOLDED="true" ID="ID_920713642" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://github.com/SleekPanther/3-sat-certifier">
<node TEXT="3-SAT Certifier (3 Satisfiability Problem) A certifier algorithm for the NP-Complete 3-Satisfiability Problem. Problem Statement. Given a Conjunctive Normal Form formula is there a satisfying truth assignment so that it evaluates to true?" ID="ID_537646216" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="Boolean satisfiability problem | Wiki | Everipedia" FOLDED="true" ID="ID_189176748" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://everipedia.org/wiki/lang_en/Boolean_satisfiability_problem/">
<node TEXT="Boolean satisfiability problems wiki: In computer science the Boolean satisfiability problem (sometimes called Propositional Satisfiability Problem and abbreviated as SATISFIABILITY or SAT ) is the problem of determining if there exists an interpretation that satisfies a given Boolean formula. In other words it asks whether the variables of a given Boolean formula can be consistently " ID="ID_1663353302" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="NP-Completeness | Set 1 (Introduction) - GeeksforGeeks" FOLDED="true" ID="ID_601106477" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://www.geeksforgeeks.org/np-completeness-set-1/">
<node TEXT="NP-complete problems are the hardest problems in NP set. A decision problem L is NP-complete if: 1) L is in NP (Any given solution for NP-complete problems can be verified quickly but there is no efficient known solution). 2) Every problem in NP is reducible to L in polynomial time (Reduction is defined below)." ID="ID_510366866" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="Lecture 20 - Satisfiability is NP-complete" FOLDED="true" ID="ID_1033832791" CREATED="1566553719248" MODIFIED="1566553719248" LINK="http://www.cs.columbia.edu/~aho/cs3261/Lectures/L20-Satisfiability.html">
<node TEXT="Lecture 20 - Satisfiability is NP-complete 1. The Classes P and NP; NP-complete problems. P is the class of languages that can be recognized in polynomial time by a one-tape deterministic TM." ID="ID_1182484794" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="NP completeness of SAT Problem || English ||By Studies " FOLDED="true" ID="ID_98027089" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://www.youtube.com/watch?v=VaTSWN9JnzY">
<node TEXT="NP completeness of SAT Problem explained P NP NP-HARD NP-COMPLETE NP completeness of SAT Problem and solution SAT is NP complete proof NP completeness of SAT Problem Satisfiability problem 3 " ID="ID_1587877234" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
</node>
<node TEXT="The Node Cover Problem Interactive Visualisation#$D$#" FOLDED="true" ID="ID_584828348" CREATED="1566553719254" MODIFIED="1566553719254">
<icon BUILTIN="stop-sign"/>
<node TEXT="VisuAlgo - Minimum Vertex Cover (Bruteforce Approximation " FOLDED="true" ID="ID_1204863959" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://visualgo.net/en/mvc">
<node TEXT="A Vertex Cover (VC) of a connected undirected (un)weighted graph G is a subset of vertices V of G such that for every edge in G at least one of its endpoints is in V. A Minimum Vertex Cover (MVC) of G is a VC that has the smallest cardinality (if unweighted) or total weight (if weighted) among all possible VCs. A graph can have multiple VC but the value of MVC is unique.There is another " ID="ID_1076782181" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="Vertex cover - Wikipedia" FOLDED="true" ID="ID_946368402" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://en.wikipedia.org/wiki/Vertex_cover">
<node TEXT="In the mathematical discipline of graph theory a vertex cover (sometimes node cover) of a graph is a set of vertices such that each edge of the graph is incident to at least one vertex of the set. The problem of finding a minimum vertex cover is a classical optimization problem in computer science and is a typical example of an NP-hard optimization problem that has an approximation algorithm." ID="ID_1009305800" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="Vertex Cover Problem | Set 2 (Dynamic Programming Solution " FOLDED="true" ID="ID_1329483874" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://www.geeksforgeeks.org/vertex-cover-problem-set-2-dynamic-programming-solution-tree/">
<node TEXT="A vertex cover of an undirected graph is a subset of its vertices such that for every edge (u v) of the graph either &#xe2;&#x20ac;&#x2dc;u&#xe2;&#x20ac;&#x2122; or &#xe2;&#x20ac;&#x2dc;v&#xe2;&#x20ac;&#x2122; is in vertex cover. Although the name is Vertex Cover the set covers all edges of the given graph. The problem to find minimum size vertex cover of a graph is NP complete.But it can be solved in polynomial time for trees." ID="ID_797149547" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="Vertex Cover Problem | Set 1 (Introduction and Approximate " FOLDED="true" ID="ID_1693909411" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://www.geeksforgeeks.org/vertex-cover-problem-set-1-introduction-approximate-algorithm-2/">
<node TEXT="A vertex cover of an undirected graph is a subset of its vertices such that for every edge (u v) of the graph either &#xe2;&#x20ac;&#x2dc;u&#xe2;&#x20ac;&#x2122; or &#xe2;&#x20ac;&#x2dc;v&#xe2;&#x20ac;&#x2122; is in vertex cover. Although the name is Vertex Cover the set covers all edges of the given graph. Given an undirected graph the vertex cover problem is to find " ID="ID_1419481929" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="iVIBRATE: Interactive Visualization Based Framework for " FOLDED="true" ID="ID_1702690931" CREATED="1566553719254" MODIFIED="1566553719254" LINK="http://www.cc.gatech.edu/~lingliu/papers/2006/ivibrate-TOIS-rv3.pdf">
<node TEXT="iVIBRATE: Interactive Visualization Based Framework for Clustering Large Datasets (Version 3) Keke Chen Ling Liu College of Computing Georgia Institute of Technology fkekechen lingliug@cc.gatech.edu Abstract With continued advances in communication network technology and sensing technology there is an" ID="ID_23871673" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="What are the best tools for creating dynamic interactive " FOLDED="true" ID="ID_1899485499" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://www.quora.com/What-are-the-best-tools-for-creating-dynamic-interactive-graph-visualizations-in-Python">
<node TEXT="I would go for Bokeh one of the most popular Python scientific libraries. It is an awesome Python visualization library especially if you want to create interactive visualizations or dashboards. Thanks to the so-called Bokeh Server feature you " ID="ID_1038890154" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="GitHub - ParasolJS/parasol-es: ES6 module for interactive " FOLDED="true" ID="ID_345586717" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://github.com/ParasolJS/parasol-es">
<node TEXT="Parasol is a JavaScript library for visualization of multi-objective optimization problems. It features interacitve linked plots a data grid and an array of clutter reduction techniques allowing for efficient visualization of trade-off in high-dimensional data." ID="ID_308413488" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="Network Visualization and Filter - appsource.microsoft.com" FOLDED="true" ID="ID_1500635888" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://appsource.microsoft.com/en-us/product/power-bi-visuals/WA104381419">
<node TEXT="Seeing the relations makes it easier to find the problems and outliers. Clicking on any node acts as filter for the rest of the dashboard making it easy to drill-through data and boosting Power BI productivity.  Build an intuitive and interactive network visualization from tabular data. Advanced Combo Visual. By ZoomCharts Power BI visuals." ID="ID_1129136971" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="Gephi Tutorial on Network Visualization and Analysis - YouTube" FOLDED="true" ID="ID_589066715" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://www.youtube.com/watch?v=HJ4Hcq3YX4k">
<node TEXT="This tutorial goes from import through the whole analysis phase for a citation network.  Gephi Tutorial on Network Visualization and Analysis jengolbeck.  The interactive transcript could " ID="ID_941808624" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="How to create jaw dropping Data Visualizations on the web " FOLDED="true" ID="ID_1529428457" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://www.analyticsvidhya.com/blog/2017/08/visualizations-with-d3-js/">
<node TEXT="Data Visualization is the way a data scientist expresses himself / herself. Creating a meaningful visualization requires you to think about the story the aesthetics of the visualization and various other aspects. If you are planning to create custom visualizations on the web chances are that you " ID="ID_1122547845" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="graph - How to visualize a large network in R? - Stack " FOLDED="true" ID="ID_734203225" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://stackoverflow.com/questions/22453273/how-to-visualize-a-large-network-in-r">
<node TEXT="How to visualize a large network in R? Ask Question 52. 42.  Plot it up! For best results make the PDF in the same # aspect ratio as the network though a little extra height # covers the top labels. Given the size of the network # a PDF width of 100 gives us good resolution.  Django and interactive graph/network visualization. 0." ID="ID_369056724" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="visjs.org" FOLDED="true" ID="ID_150872869" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://visjs.org/">
<node TEXT="A dynamic browser based visualization library. The library is designed to be easy to use to handle large amounts of dynamic data and to enable manipulation of and interaction with the data. The library consists of the components DataSet Timeline Network Graph2d and Graph3d. Here is a backup of the old (vis@4.21) website: almende.github.io " ID="ID_288099578" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
</node>
<node TEXT="The Node Cover Problem Code#$D$#" FOLDED="true" ID="ID_118975864" CREATED="1566553719254" MODIFIED="1566553719254">
<icon BUILTIN="stop-sign"/>
<node TEXT="Vertex cover - Wikipedia" FOLDED="true" ID="ID_1925858562" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://en.wikipedia.org/wiki/Vertex_cover">
<node TEXT="In the mathematical discipline of graph theory a vertex cover (sometimes node cover) of a graph is a set of vertices such that each edge of the graph is incident to at least one vertex of the set. The problem of finding a minimum vertex cover is a classical optimization problem in computer science and is a typical example of an NP-hard optimization problem that has an approximation algorithm." ID="ID_494849448" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="Vertex Cover Problem | Set 1 (Introduction and Approximate " FOLDED="true" ID="ID_274321431" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://www.geeksforgeeks.org/vertex-cover-problem-set-1-introduction-approximate-algorithm-2/">
<node TEXT="A vertex cover of an undirected graph is a subset of its vertices such that for every edge (u v) of the graph either &#xe2;&#x20ac;&#x2dc;u&#xe2;&#x20ac;&#x2122; or &#xe2;&#x20ac;&#x2dc;v&#xe2;&#x20ac;&#x2122; is in vertex cover. Although the name is Vertex Cover the set covers all edges of the given graph. Given an undirected graph the vertex cover problem is to find " ID="ID_1378574267" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="The Vertex Cover Problem - CodeProject - For those who code" FOLDED="true" ID="ID_734285540" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://www.codeproject.com/articles/33735/the-vertex-cover-problem">
<node TEXT="Using the code. A solution for the Vertex Cover problem is decomposition and search. It consists of decomposing the problem and searching for the vertex cover. We use a tree structure where each node represents a choice. The user should know the expected cover and the algorithm checks if this cover is possible with any combination." ID="ID_814003333" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="Microsoft Failover Cluster Fails With Error Code " FOLDED="true" ID="ID_1438626537" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://www.bytesizedalex.com/microsoft-failover-cluster-fails-with-error-code-0x80071398/">
<node TEXT="Again we see that only two nodes are listed as owners. I don&#xe2;&#x20ac;&#x2122;t know why these boxes failed to select &#xe2;&#x20ac;&#x201c; as mentioned about the installs all completed successfully following the same procedure. The resolution for this problem is simple &#xe2;&#x20ac;&#x201c; ensure all nodes are selected as possible owners under all instance resources." ID="ID_184484007" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="What does the ELIFECYCLE Node.js error mean  - Stack " FOLDED="true" ID="ID_1805814377" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://stackoverflow.com/questions/30744964/what-does-the-elifecycle-node-js-error-mean">
<node TEXT="@Matthew Read - How did you reformat that code block? Its a definite improvement but Im not sure how to do it myselfI think I used to use 3 back ticks hit enter for a new line then my code (followed by enter and 3 back ticks to close the code block) but that doesnt seem to work for me anymore." ID="ID_502641994" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="Node.js Errors &#xe2;&#x20ac;&#x201d; Changes you need to know about - Medium" FOLDED="true" ID="ID_1120461104" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://medium.com/the-node-js-collection/node-js-errors-changes-you-need-to-know-about-dc8c82417f65">
<node TEXT="Well that happens in the Node.js code base as well. The problem is when we notice the typo and want to fix it we currently mark the change as SemVer major." ID="ID_668531237" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="Vertex Cover Problem | Set 2 (Dynamic Programming Solution " FOLDED="true" ID="ID_937560499" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://www.geeksforgeeks.org/vertex-cover-problem-set-2-dynamic-programming-solution-tree/">
<node TEXT="A vertex cover of an undirected graph is a subset of its vertices such that for every edge (u v) of the graph either &#xe2;&#x20ac;&#x2dc;u&#xe2;&#x20ac;&#x2122; or &#xe2;&#x20ac;&#x2dc;v&#xe2;&#x20ac;&#x2122; is in vertex cover. Although the name is Vertex Cover the set covers all edges of the given graph. The problem to find minimum size vertex cover of a graph is NP complete.But it can be solved in polynomial time for trees." ID="ID_346493301" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="node.js - npm install with error: `gyp` failed with exit " FOLDED="true" ID="ID_349827892" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://stackoverflow.com/questions/49348482/npm-install-with-error-gyp-failed-with-exit-code-1">
<node TEXT="Thanks for contributing an answer to Stack Overflow! Please be sure to answer the question.Provide details and share your research! But avoid &#xe2;&#x20ac;&#xa6;. Asking for help clarification or responding to other answers." ID="ID_1711308721" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="Common Error Cases - Visual Studio Code" FOLDED="true" ID="ID_785578349" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://code.visualstudio.com/docs/supporting/errors">
<node TEXT="Manually launch your program in debug mode by passing a --inspect or --inspect-brk option to Node.js and then attach the VS Code debugger to port 9229 on localhost. 20003 Error: Attribute program is not absolute; consider adding ${workspaceFolder}/ as a prefix to make it absolute." ID="ID_56932102" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="Allen-Bradley EtherNet/IP  ENI Adapter Error Codes" FOLDED="true" ID="ID_1690530643" CREATED="1566553719254" MODIFIED="1566553719254" LINK="https://www.automationdirect.com/microsites/c-more/software-help/Content/401.htm">
<node TEXT="PLC Errors for Allen-Bradley EtherNet/IP Protocol -CIP Errors-(Error Code 0xaabbbb returned from the PLC) Panel Error Code. PLC-497 Hex Value" ID="ID_664039254" CREATED="1566553719255" MODIFIED="1566553719255"/>
</node>
<node TEXT="Set cover problem - Wikipedia" FOLDED="true" ID="ID_572377394" CREATED="1566553719255" MODIFIED="1566553719255" LINK="https://en.wikipedia.org/wiki/Set_cover_problem">
<node TEXT="The set cover problem is a classical question in combinatorics computer science operations research and complexity theory. It is one of Karps 21 NP-complete problems shown to be NP-complete in 1972. It is a problem whose study has led to the development of fundamental techniques for the entire field of approximation algorithms." ID="ID_1053521938" CREATED="1566553719255" MODIFIED="1566553719255"/>
</node>
<node TEXT="Node.js error handling - snmaynard.com" FOLDED="true" ID="ID_1586891282" CREATED="1566553719255" MODIFIED="1566553719255" LINK="http://snmaynard.com/2012/12/21/node-error-handling/">
<node TEXT="About the Author. Im Simon Maynard co-founder of Bugsnag the best exception tracking service for your web and mobile apps with James Smith.. You should sign up for a free Bugsnag account today!" ID="ID_680084145" CREATED="1566553719255" MODIFIED="1566553719255"/>
</node>
</node>
</node>
</node>
<node TEXT="Tractable and Intractable" ID="ID_1311624033" CREATED="1566881027752" MODIFIED="1566881027752" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Tractable and Intractable Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1023875687" CREATED="1566553719248" MODIFIED="1566553719248">
<icon BUILTIN="stop-sign"/>
<node TEXT="Tractable and Intractable Problems (A-Level) - YouTube" FOLDED="true" ID="ID_1904459461" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://www.youtube.com/watch?v=QZavxz8qrxg">
<node TEXT="The interactive transcript could not be loaded.  In this video tutorial I go through tractable and intractable problems in the detail you need to know for A-Level Computer Science. " ID="ID_735430262" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="Tractable And Intractable Problems - Intro to Theoretical " FOLDED="true" ID="ID_1009941805" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://www.youtube.com/watch?v=3d1yM0rSphQ">
<node TEXT="Tractable And Intractable Problems - Intro to Theoretical Computer Science  The interactive transcript could not be loaded.  2015. This video is part of an online course Intro to " ID="ID_1912812689" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="Intractable | Definition of Intractable at Dictionary.com" FOLDED="true" ID="ID_802188323" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://www.dictionary.com/browse/intractable">
<node TEXT="Intractable definition not easily controlled or directed; not docile or manageable; stubborn; obstinate: an intractable disposition. See more." ID="ID_1824200925" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="Intractable | Definition of Intractable by Merriam-Webster" FOLDED="true" ID="ID_1269777148" CREATED="1566553719248" MODIFIED="1566553719248" LINK="https://www.merriam-webster.com/dictionary/intractable">
<node TEXT="Intractable definition is - not easily governed managed or directed. How to use intractable in a sentence. Synonym Discussion of intractable.  Latin intractabilis from in-+ tractabilis tractable . Keep scrolling for more. Learn More about intractable. Share intractable." ID="ID_1535993925" CREATED="1566553719248" MODIFIED="1566553719248"/>
</node>
<node TEXT="inference - What does a tractable distribution mean " FOLDED="true" ID="ID_800161408" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://stats.stackexchange.com/questions/277953/what-does-a-tractable-distribution-mean">
<node TEXT="Intractable Problem: a problem that cannot be solved by a polynomial-time algorithm. The lower bound is exponential. From this perspective a definition for tractable distribution is that it takes polynomial-time to calculate the probability of this distribution at any given point." ID="ID_890006558" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="Intractable Epilepsy - Conditions - For Patients - UR " FOLDED="true" ID="ID_389704456" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://www.urmc.rochester.edu/neurosurgery/for-patients/conditions/intractable-epilepsy.aspx">
<node TEXT="Intractable epilepsy is a seizure disorder in which a patient&#xe2;&#x20ac;&#x2122;s seizures fail to come under control with treatment. These seizures are sometimes also called &#xe2;&#x20ac;&#x153;uncontrolled&#xe2;&#x20ac;&#xfffd; or &#xe2;&#x20ac;&#x153;refractory.&#xe2;&#x20ac;&#xfffd; Frequently intractable epilepsy interferes with a patient&#xe2;&#x20ac;&#x2122;s quality of life. People who are not " ID="ID_151212782" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="Computational complexity theory - Wikipedia" FOLDED="true" ID="ID_148882051" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://en.wikipedia.org/wiki/Computational_complexity_theory">
<node TEXT="Computational complexity theory focuses on classifying computational problems according to their inherent difficulty and relating these classes to each other. A computational problem is a task solved by a computer. A computation problem is solvable by mechanical application of mathematical steps such as an algorithm.. A problem is regarded as inherently difficult if its solution requires " ID="ID_826559492" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="Chapter 17. Tractable and Non-Tractable Problems - Design " FOLDED="true" ID="ID_1780402850" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://www.oreilly.com/library/view/design-and-analysis/9788177585957/xhtml/chapter017.xhtml">
<node TEXT="Chapter 17 Tractable and Non-tractable Problems Objectives After reading this chapter you should understand: The need for problem classification: Tractable and Intractable Upper and Lower Bounds Algorithmic Gap: Why the  - Selection from Design and Analysis of Algorithms [Book]" ID="ID_68234418" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="Intractable Headache | American Migraine Foundation" FOLDED="true" ID="ID_1890822496" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://americanmigrainefoundation.org/resource-library/intractable-headache/">
<node TEXT="Intractable headache is doctor speak for that headache that just doesn&#xe2;&#x20ac;&#x2122;t seem to go away. Typically it is an episodic headache that for a variety of reasons spins out of control. The solution is to break down the headache into things you can control and systematically work through the process of putting them in order" ID="ID_677453379" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="intractable - definition and meaning - Wordnik.com" FOLDED="true" ID="ID_927639669" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://www.wordnik.com/words/intractable">
<node TEXT="This pattern has developed into a state that conflict scholars label intractable and that mathematicians call an attractor: the Israel-Palestinian conflict has thus become an intractable attractor. Peter T. Coleman PhD: The Mathematics of Middle East Conflict and Peace. This society does not deal well with long-term intractable problems of any " ID="ID_673271942" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="bayesian - Intractable posterior distributions - Cross " FOLDED="true" ID="ID_1082883404" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://stats.stackexchange.com/questions/4417/intractable-posterior-distributions">
<node TEXT="The integral is computationally intractable. He recommended that I sit down with a pen and paper and actually work out the marginal evidence for the Bayesian mixture of Gaussians. Youll see that it is computationally intractable i.e. exponential. He gives a nice example of this in a recent paper (See 2.1 The problem of approximate inference)." ID="ID_455184568" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="What is Intractable Vomiting? (with pictures) - wisegeek.com" FOLDED="true" ID="ID_184403171" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://www.wisegeek.com/what-is-intractable-vomiting.htm">
<node TEXT="Intractable vomiting is repeated vomiting that resists medical treatment. People can develop this symptom for a number of reasons and treatment is focused on providing supportive care to keep the patient as comfortable as possible until the cause can be resolved. There are some risks associated with " ID="ID_267906556" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
</node>
<node TEXT="Tractable and Intractable Code#$D$#" FOLDED="true" ID="ID_1744704262" CREATED="1566553719249" MODIFIED="1566553719249">
<icon BUILTIN="stop-sign"/>
<node TEXT="Computational complexity theory - Wikipedia" FOLDED="true" ID="ID_107196066" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://en.wikipedia.org/wiki/Computational_complexity_theory">
<node TEXT="Computational complexity theory focuses on classifying computational problems according to their inherent difficulty and relating these classes to each other. A computational problem is a task solved by a computer. A computation problem is solvable by mechanical application of mathematical steps such as an algorithm.. A problem is regarded as inherently difficult if its solution requires " ID="ID_1395438883" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="Tractable And Intractable Problems - Intro to Theoretical " FOLDED="true" ID="ID_675384493" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://www.youtube.com/watch?v=3d1yM0rSphQ">
<node TEXT="This video is part of an online course Intro to Theoretical Computer Science. Check out the course here: https://www.udacity.com/course/cs313." ID="ID_1403572935" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="Computability: Tractable Intractable and Non-computable " FOLDED="true" ID="ID_991113656" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://docs.google.com/presentation/d/1I-F2F9ntZzfZTk15yBcpMHEMqBK3VNezVOmiU2kKGnA/edit#!">
<node TEXT="Suppose there is a town with one male barber; and that every man in the town keeps himself clean-shaven: some shave themselves and some are shaved by the barber." ID="ID_1172785947" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="Terminology Check: All Migraines Are Not the Same " FOLDED="true" ID="ID_1970009812" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://www.supercoder.com/coding-newsletters/my-anesthesia-coding-alert/terminology-check-all-migraines-are-not-the-same-3008-article">
<node TEXT="Intractable vs. non-intractable can set your reimbursement success Before coding for migraine treatment be sure you&#xe2;&#x20ac;&#x2122;re using the correct diagnosis. ICD-9 includes several choices in the 346.xx (Migraine) family with fifth-digit classifications of 0 (without mention of intractable migraine) and 1 (with intractable migraine so stated)." ID="ID_978243055" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="Status Migrainosus: What Is an Intractable Migraine?" FOLDED="true" ID="ID_345991178" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://www.healthline.com/health/migraine/status-migrainosus">
<node TEXT="It&#xe2;&#x20ac;&#x2122;s also called an intractable migraine. Status migrainosus headaches affect less than 1 percent of people with migraines. However they&#xe2;&#x20ac;&#x2122;re intense and they stick around for longer than 72 " ID="ID_599041357" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="ICD-10 Code G43.11 - Migraine with aura intractable" FOLDED="true" ID="ID_1206919079" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://icdlist.com/icd-10/G43.11">
<node TEXT="Not Valid for Submission. ICD-10 G43.11 is a header nonspecific and non-billable code code consider using a code with a higher level of specificity for a diagnosis of migraine with aura intractable. The code is NOT valid for the year 2019 for the submission of HIPAA-covered transactions." ID="ID_257892485" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="What is intractable epilepsy - answers.com" FOLDED="true" ID="ID_1845510417" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://www.answers.com/Q/What_is_intractable_epilepsy">
<node TEXT="The root word if intractable is tractable. Tractable is an adjective meaning easy to guide and order controllable compliant. From tractable comes the word intractable which means difficult " ID="ID_1205665814" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="Intractable | Definition of Intractable at Dictionary.com" FOLDED="true" ID="ID_770571948" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://www.dictionary.com/browse/intractable">
<node TEXT="Intractable definition not easily controlled or directed; not docile or manageable; stubborn; obstinate: an intractable disposition. See more." ID="ID_261193563" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="G43.901 - ICD-10-CM Migraine unsp not intractable with " FOLDED="true" ID="ID_1281647682" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://icd10coded.com/cm/G43.901/">
<node TEXT="G43.901 is a valid billable ICD-10 diagnosis code for Migraine unspecified not intractable with status migrainosus.It is found in the 2019 version of the ICD-10 Clinical Modification (CM) and can be used in all HIPAA-covered transactions from Oct 01 2018 - Sep 30 2019. &#xe2;&#x2020;&#x201c; See below for any exclusions inclusions or special notations" ID="ID_1070151298" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="2019 ICD-10-CM Diagnosis Code G43.909: Migraine " FOLDED="true" ID="ID_598162417" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://www.icd10data.com/ICD10CM/Codes/G00-G99/G40-G47/G43-/G43.909">
<node TEXT="G43.909 is a billable/specific ICD-10-CM code that can be used to indicate a diagnosis for reimbursement purposes. Short description: Migraine unsp not intractable without status migrainosus The 2019 edition of ICD-10-CM G43.909 became effective on October 1 2018." ID="ID_363595449" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="2019 ICD-10-CM Diagnosis Code G43.A1: Cyclical vomiting " FOLDED="true" ID="ID_1065572774" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://www.icd10data.com/ICD10CM/Codes/G00-G99/G40-G47/G43-/G43.A1">
<node TEXT="G43.A1 is a billable/specific ICD-10-CM code that can be used to indicate a diagnosis for reimbursement purposes. The 2019 edition of ICD-10-CM G43.A1 became effective on October 1 2018. This is the American ICD-10-CM version of G43.A1 - other international versions of ICD-10 G43.A1 may differ." ID="ID_556106408" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="Tractable and Intractable - E-STUDy" FOLDED="true" ID="ID_941621048" CREATED="1566553719249" MODIFIED="1566553719249" LINK="http://toccomp.weebly.com/uploads/3/8/9/3/38938075/6.tractableintractable-unit6.pdf">
<node TEXT="Tractable and Intractable  If we have code for Dijkstra&#xe2;&#x20ac;&#x2122;salgorithm to find shortest path we can take log of all weights and use Dijkstra&#xe2;&#x20ac;&#x2122;salgorithm to find the minimum product path rather than writing a fresh code for this new problem. Prepared by Prof.T.H.Gurav SKNCOEPUNE." ID="ID_1811298708" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
</node>
</node>
<node TEXT="Representing Satisfiability" ID="ID_826069854" CREATED="1566881027754" MODIFIED="1566881027754" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Representing Satisfiability Interactive Visualisation#$D$#" FOLDED="true" ID="ID_482905774" CREATED="1566553719249" MODIFIED="1566553719249">
<icon BUILTIN="stop-sign"/>
<node TEXT="15 Data Visualizations That Will Blow Your Mind | Udacity" FOLDED="true" ID="ID_827512558" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://blog.udacity.com/2015/01/15-data-visualizations-will-blow-mind.html">
<node TEXT="If a picture is worth a thousand words a data visualization is worth at least a million. As inspiration for your own work with data check out these 15 data visualizations that will wow you. Taken together this roundup is an at-a-glance representation of the range of uses data analysis has from " ID="ID_1270035825" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="35 incredible dataviz tools | Creative Bloq" FOLDED="true" ID="ID_1404324202" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://www.creativebloq.com/design-tools/data-visualization-712402">
<node TEXT="Another mapping tool Leaflet makes it easy to use OpenStreetMap data and integrate fully interactive data visualisation in an HTML5/CSS3 wrapper. The core library itself is very small but there are a wide range of plugins available that extend the functionality with specialist functionality such as animated markers masks and heatmaps." ID="ID_1038351101" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="Five Interactive R Visualizations With D3 ggplot2  RStudio" FOLDED="true" ID="ID_792855605" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://moderndata.plot.ly/interactive-r-visualizations-with-d3-ggplot2-rstudio/">
<node TEXT="Five Interactive R Visualizations With D3 ggplot2  RStudio Published August 24 2015 January 4  The API lets you produce interactive D3.js graphs with R. This post has five examples. Head to our docs to get a key and you can start making embedding and sharing plots. The code below produces our first plot." ID="ID_167756989" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="Data visualization - Wikipedia" FOLDED="true" ID="ID_608877548" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://en.wikipedia.org/wiki/Data_visualization">
<node TEXT="Data visualization is viewed by many disciplines as a modern equivalent of visual communication.It involves the creation and study of the visual representation of data.. To communicate information clearly and efficiently data visualization uses statistical graphics plots information graphics and other tools. Numerical data may be encoded using dots lines or bars to visually communicate a " ID="ID_434157708" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="50 Great Examples of Data Visualization | Webdesigner Depot" FOLDED="true" ID="ID_907902461" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://www.webdesignerdepot.com/2009/06/50-great-examples-of-data-visualization/">
<node TEXT="Tuneglue is another music visualization service. Just type any artist or band into the search box and hit enter. A circle comes up representing that band. You can then expand from there clicking on any new additions after each expansion to expand further. By click on &#xe2;&#x20ac;&#x153;releases&#xe2;&#x20ac;&#xfffd; you can order their albums from Amazon." ID="ID_1586186261" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="Asia Pacific Symposium on Information Visualisation - INFORMS" FOLDED="true" ID="ID_1890475262" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://www.informs.org/Meetings-Conferences/INFORMS-Conference-Calendar/Past-Events/Asia-Pacific-Symposium-on-Information-Visualisation">
<node TEXT="Haptic Shoes: Representing Information By Vibration Tim DWYER Extending the WilmaScope 3D Graph Visualisation System - Software Demonstration Bruce THOMAS and Andrew CUNNINGHAM Target Motion Analysis Visualisation Colin MURRAY and Carsten Friedrich Visualisation of Satisfiability using the Logic Engine Lanbo ZHENG Le SONG and Peter EADES" ID="ID_925499174" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="A pick of the best R packages for interactive plots and " FOLDED="true" ID="ID_1767827622" CREATED="1566553719249" MODIFIED="1566553719249" LINK="http://enhancedatascience.com/2017/07/06/pick-best-r-packages-interactive-plot-visualisation-22/">
<node TEXT="In the first part of A pick of the best R packages for interactive plots and visualizations we saw the best packages to do interactive plot in R.Now let&#xe2;&#x20ac;&#x2122;s see what are the best packages for interactive and complex visualizations. While plots tend are representing &#xe2;&#x20ac;&#x2dc;classic&#xe2;&#x20ac;&#x2122; data." ID="ID_1262524820" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="Big Data and Visualization: Methods Challenges and " FOLDED="true" ID="ID_1340003801" CREATED="1566553719249" MODIFIED="1566553719249" LINK="http://pubs.sciepub.com/dt/1/1/7/">
<node TEXT="Big Data analytics plays a key role through reducing the data size and complexity in Big Data applications. Visualization is an important approach to helping Big Data get a complete view of data and discover data values. Big Data analytics and visualization should be integrated seamlessly so that they work best in Big Data applications." ID="ID_1563539017" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="What is data visualization? - powerbi.microsoft.com" FOLDED="true" ID="ID_829825500" CREATED="1566553719249" MODIFIED="1566553719249" LINK="https://powerbi.microsoft.com/en-us/data-visualization/">
<node TEXT="Power BI publish to web lets you create data stories with amazing interactive visualizations and publish them to your blog or website in minutes. Microsoft and data visualization Transforming your data into rich visuals Power BI is a customizable data visualization toolset that gives you a complete view of your business." ID="ID_23286147" CREATED="1566553719249" MODIFIED="1566553719249"/>
</node>
<node TEXT="Solving Sudoku with Consistency: A Visual and Interactive " FOLDED="true" ID="ID_678852913" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://www.ijcai.org/proceedings/2018/0852.pdf">
<node TEXT="Solving Sudoku with Consistency: A Visual and Interactive Approach Ian Howell1 Robert Woodward1;2 Berthe Y. Choueiry1 Christian Bessiere2 1Constraint Systems Laboratory University of Nebraska-Lincoln USA 2CNRS University of Montpellier France fihowelljrwoodwarchoueiryj g@cse.unl.edu bessiere@lirmm.fr Abstract" ID="ID_1429697436" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="14 Useful Methods for a Successful Data Visualization " FOLDED="true" ID="ID_171199818" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://www.sisense.com/blog/10-useful-ways-visualize-data-examples/">
<node TEXT="These represent categories by circle color and the volume of the data by circle size; they&#xe2;&#x20ac;&#x2122;re used to visualize the distribution of and relationship between two variables. For example the chart below visualizes each product line by the number of units sold and the revenue this brings in representing the value in physical size." ID="ID_1506220070" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="Create interactive timeline visualizations for your data " FOLDED="true" ID="ID_1043951091" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://powerbi.microsoft.com/en-us/blog/create-interactive-timeline-visualizations-for-your-data-with-the-new-timeline-storyteller-community-visual/">
<node TEXT="Create interactive timeline visualizations for your data with the new timeline storyteller community visual  providing an amazing set of capabilities for visualizing data representing a sequences of events. It is also a great example of how Power BI is building a community of data visualization enthusiasts to help you move beyond basic data " ID="ID_1963746919" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
</node>
<node TEXT="Representing Satisfiability Code#$D$#" FOLDED="true" ID="ID_1993703912" CREATED="1566553719250" MODIFIED="1566553719250">
<icon BUILTIN="stop-sign"/>
<node TEXT="Boolean satisfiability problem - Wikipedia" FOLDED="true" ID="ID_286521486" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://en.wikipedia.org/wiki/Boolean_satisfiability_problem">
<node TEXT="A variant of the 3-satisfiability problem is the one-in-three 3-SAT (also known variously as 1-in-3-SAT and exactly-1 3-SAT).Given a conjunctive normal form with three literals per clause the problem is to determine whether there exists a truth assignment to the variables so that each clause has exactly one TRUE literal (and thus exactly two FALSE literals)." ID="ID_777325849" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="Polynomial Time Code For 3-SAT Released P==NP - Slashdot" FOLDED="true" ID="ID_516147398" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://science.slashdot.org/story/11/01/20/1546206/Polynomial-Time-Code-For-3-SAT-Released-PNP">
<node TEXT="An anonymous reader writes Vladimir Romanov has released what he claims is a polynomial-time algorithm for solving 3-SAT. Because 3-SAT is NP-complete this would imply that P==NP. While theres still good reason to be skeptical that this is in fact true hes made source code available and app" ID="ID_800498580" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="GitHub - asgordon/DPLL: Boolean satisfiability for " FOLDED="true" ID="ID_1926288466" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://github.com/asgordon/DPLL">
<node TEXT="DPLL : Boolean satisfiability for propositional logic in Python. Andrew S. Gordon June  September 2015. I was the co-instructor of the big masters-level Artificial Intelligence course in the Spring of 2015 at the University of Southern California for eight lectures on formal logic." ID="ID_953274962" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="2-CNF | Code Overflow" FOLDED="true" ID="ID_1397605074" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://codeoverflow.wordpress.com/tag/2-cnf/">
<node TEXT="Here we are going to discuss Satisfiability (or SAT) and especially 2-SAT based problems. SAT problems refer to checking if the following kinds of boolean formulae are satisfiable. However since the above is too general to represent with a data-structure we typically reduce such formulae into the Causal Normal Form (CNF) as shown &#xe2;&#x20ac;&#x201c;" ID="ID_553625690" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="Propositional Logic and Satisfiability - MIT OpenCourseWare" FOLDED="true" ID="ID_834480547" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://ocw.mit.edu/courses/aeronautics-and-astronautics/16-410-principles-of-autonomy-and-decision-making-fall-2010/lecture-notes/MIT16_410F10_lec10.pdf">
<node TEXT="&#xe2;&#x20ac;&#xa2;Propositional Satisfiability &#xe2;&#x20ac;&#xa2;Empirical Average Case Analysis &#xe2;&#x20ac;&#xa2;Appendices Brian Williams Fall 10 9 Logic in General &#xe2;&#x20ac;&#xa2;Logic &#xe2;&#x20ac;&#xa2; A formal language for representing information that can be used to draw conclusions. &#xe2;&#x20ac;&#xa2; About the truth of statements and their consequences. &#xe2;&#x20ac;&#xa2;Syntax &#xe2;&#x20ac;&#xa2; Defines the expressible sentences in the language." ID="ID_381850707" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="1. - Stanford University" FOLDED="true" ID="ID_1338915053" CREATED="1566553719250" MODIFIED="1566553719250" LINK="http://intrologic.stanford.edu/extras/satisfiability.html">
<node TEXT="The propositional satisfiability problem (often called SAT) is the problem of determining whether a set of sentences in Propositional Logic is satisfiable. Many other questions in Propositional Logic (such as logical entailment) can be reduced to that of propositional satisfiability." ID="ID_370646957" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="code golf - Solve 2-SAT (boolean satisfiability) - Code " FOLDED="true" ID="ID_1174334051" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://codegolf.stackexchange.com/questions/1933/solve-2-sat-boolean-satisfiability">
<node TEXT="The general SAT (boolean satisfiability) problem is NP-complete. But 2-SAT where each clause has only 2 variables is in P.Write a solver for 2-SAT. Input: A 2-SAT instance encoded in CNF as follows. The first line contains V the number of boolean variables and N the number of clauses." ID="ID_848327869" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="2-Satisfiability (2-SAT) Problem - GeeksforGeeks" FOLDED="true" ID="ID_18459973" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://www.geeksforgeeks.org/2-satisfiability-2-sat-problem/">
<node TEXT="Note : Boolean satisfiability problem is NP-complete (For proof refer lank&#xe2;&#x20ac;&#xfffd;Cook&#xe2;&#x20ac;&#x2122;s Theorem). What is 2-SAT Problem 2-SAT is a special case of Boolean Satisfiability Problem and can be solved in polynomial time.. To understand this better first let us see what is Conjunctive Normal Form (CNF) or also known as Product of Sums (POS)." ID="ID_160151196" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="Brute force SAT solver in Java - Code Review Stack Exchange" FOLDED="true" ID="ID_1366648490" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://codereview.stackexchange.com/questions/159340/brute-force-sat-solver-in-java">
<node TEXT="(See the next iteration.). I have this small library for solving the SAT (satisfiability problem) via brute force: we are given a boolean formula which is a conjuction (and) of clauses.Each clause is a disjunction (or) of variables or their negatives.Also each clause may be negated." ID="ID_113933602" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="Understanding SAT by Implementing a Simple SAT Solver in " FOLDED="true" ID="ID_952141144" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://sahandsaba.com/understanding-sat-by-implementing-a-simple-sat-solver-in-python.html">
<node TEXT="SAT is often described as the mother of all NP-complete problems. This post goes over what SAT is and why it is considered to be so important. A simple SAT solver is implemented using Python in the process. Coding mathematics and problem solving by Sahand Saba." ID="ID_1167368494" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="Satisfiability of Equality Equations - LeetCode" FOLDED="true" ID="ID_1722878966" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://leetcode.com/problems/satisfiability-of-equality-equations/">
<node TEXT="Given an array equations of strings that represent relationships between variables each string equations[i] has length 4 and takes one of two different forms: a==b or a!=b.Here a and b are lowercase letters (not necessarily different) that represent one-letter variable names. Return true if and only if it is possible to assign integers to variable names so as to satisfy all the given " ID="ID_1485444569" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="2-satisfiability - Wikipedia" FOLDED="true" ID="ID_291172357" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://en.wikipedia.org/wiki/2-satisfiability">
<node TEXT="In computer science 2-satisfiability 2-SAT or just 2SAT is a computational problem of assigning values to variables each of which has two possible values in order to satisfy a system of constraints on pairs of variables. It is a special case of the general Boolean satisfiability problem which can involve constraints on more than two variables and of constraint satisfaction problems " ID="ID_1006287727" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
</node>
</node>
<node TEXT="Instances" ID="ID_1713908495" CREATED="1566881027758" MODIFIED="1566881027758" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
<node TEXT="NP Completeness of the SAT Problem" ID="ID_45276890" CREATED="1566881027758" MODIFIED="1566881027758" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="NP Completeness of the SAT Problem Interactive Visualisation#$D$#" FOLDED="true" ID="ID_113920501" CREATED="1566553719250" MODIFIED="1566553719250">
<icon BUILTIN="stop-sign"/>
<node TEXT="SAT is NP Complete - YouTube" FOLDED="true" ID="ID_1542762750" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://www.youtube.com/watch?v=MWerZ2FsIB4">
<node TEXT="What Does The SAT Really Test? | Idea Channel | PBS Digital Studios - Duration: 13:28. PBS Idea Channel 303532 views" ID="ID_71350813" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="NP completeness of SAT Problem || English ||By Studies " FOLDED="true" ID="ID_1144618669" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://www.youtube.com/watch?v=VaTSWN9JnzY">
<node TEXT="NP completeness of SAT Problem NP completeness of SAT Problem in Hindi: https://youtu.be/VaTSWN9JnzY SAT problem NP complete NP completeness of SAT Problem" ID="ID_705979869" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="NP-completeness - Wikipedia" FOLDED="true" ID="ID_1718577900" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://en.wikipedia.org/wiki/NP-completeness">
<node TEXT="Overview. NP-complete problems are in NP the set of all decision problems whose solutions can be verified in polynomial time; NP may be equivalently defined as the set of decision problems that can be solved in polynomial time on a non-deterministic Turing machine.A problem p in NP is NP-complete if every other problem in NP can be transformed (or reduced) into p in polynomial time." ID="ID_250015852" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="NP-Completeness | Set 1 (Introduction) - GeeksforGeeks" FOLDED="true" ID="ID_1747579385" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://www.geeksforgeeks.org/np-completeness-set-1/">
<node TEXT="What was the first problem proved as NP-Complete? There must be some first NP-Complete problem proved by definition of NP-Complete problems. SAT (Boolean satisfiability problem) is the first NP-Complete problem proved by Cook (See CLRS book for proof). It is always useful to know about NP-Completeness even for engineers." ID="ID_1977608441" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="2-satisfiability - Wikipedia" FOLDED="true" ID="ID_1497708834" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://en.wikipedia.org/wiki/2-satisfiability">
<node TEXT="In computer science 2-satisfiability 2-SAT or just 2SAT is a computational problem of assigning values to variables each of which has two possible values in order to satisfy a system of constraints on pairs of variables. It is a special case of the general Boolean satisfiability problem which can involve constraints on more than two variables and of constraint satisfaction problems " ID="ID_1480036234" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="A polynomial time solution for 2-SAT" FOLDED="true" ID="ID_635129305" CREATED="1566553719250" MODIFIED="1566553719250" LINK="http://sigtbd.csail.mit.edu/pubs/veryconference-paper7.pdf">
<node TEXT="A polynomial time solution for 2-SAT William M. Leiserson MIT Cambridge MA 02140 willtor@mit.edu Abstract The question of whether the P and NP complexity classes are equivalent is unresolved. It is conjectured that they are inequivalent because of the vast number of NP-Complete languages (including" ID="ID_1977611623" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="Analysis - lti.cs.vt.edu" FOLDED="true" ID="ID_1128224252" CREATED="1566553719250" MODIFIED="1566553719250" LINK="http://lti.cs.vt.edu/Presentations/MajiNabanitaDefensePresentation.pptx">
<node TEXT="&#xe2;&#x20ac;&#x153;Incorporating an interactive visualization of NP-Completeness proofs into a web-based learning environment.&#xe2;&#x20ac;&#xfffd;  The Formula Satisfiability problem (SAT) The 3CNF Satisfiability problem ( 3SAT ) The Clique problem. The Independent Set problem. The Vertex Cover problem." ID="ID_1882698282" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="VisSAT: Visualization of SAT Solver Internals for Computer " FOLDED="true" ID="ID_1174829864" CREATED="1566553719250" MODIFIED="1566553719250" LINK="http://www.informatik.uni-bremen.de/agra/doc/konf/11_msv_vissat.pdf">
<node TEXT="veri&#xef;&#xac;&#xfffd;cation problem is deduced. In this sense the SAT solver is utilized as a black-box. However since the SAT problem is proven to be NP-complete [10] SAT solvers may need a signi&#xef;&#xac;&#xfffd;cant amount of time to produce results for large instances. In contrast advanced problem encodings [11] [12] [13] [14]" ID="ID_1573783797" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="Using Interactive Visualization for Teaching the Theory of " FOLDED="true" ID="ID_980882840" CREATED="1566553719250" MODIFIED="1566553719250" LINK="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.27.1163">
<node TEXT="CiteSeerX - Document Details (Isaac Councill Lee Giles Pradeep Teregowda): In this paper we investigate the potential of interactive visualization for teaching the theory of NP-completeness to undergraduate students of computer science. Based on this analysis we developed some interactive Java applets which we use to present an NP-complete tiling problem PUZZLE in our lecture." ID="ID_190108385" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="An Interactive Tutorial for NP-Completeness - Virginia Tech" FOLDED="true" ID="ID_1153990593" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://vtechworks.lib.vt.edu/handle/10919/52973">
<node TEXT="Then we present an exercise to provide a first-hand experience with attempting to solve a problem instance. Finally we present a visualization of a reduction as a part of the proof for NP-Completeness. Our work has been delivered as a collection of modules in OpenDSA an interactive eTextbook system developed at Virginia Tech." ID="ID_295901941" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="KIT - ITI Algorithmik I - Graph Drawing using SAT (GDSAT)" FOLDED="true" ID="ID_1492262512" CREATED="1566553719250" MODIFIED="1566553719250" LINK="https://i11www.iti.kit.edu/projects/gdsat">
<node TEXT="Boxes can be further constrained in their shapes and interactions by additional problem-specific constraints. Our framework GDSAT defines a generic SAT model that is flexible enough to capture a large variety of different grid-based graph layout problems both polynomially-solvable and NP-complete. The dimension of the grid is not restricted." ID="ID_1182036655" CREATED="1566553719250" MODIFIED="1566553719250"/>
</node>
<node TEXT="Topic: 3-sat &#xc2;&#xb7; GitHub" FOLDED="true" ID="ID_113910372" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://github.com/topics/3-sat">
<node TEXT="SleekPanther / 3-sat-certifier A Certifier algorithm to check a particular solution to the NP-Complete 3-Sat problem np-hard np-complete np p exp certifier-algorithm certificate clause negation cnf conjunctive-normal-form 3-sat 3-satisfiability circuit-satisfiability computational-instability 3sat sat satisfiability literals compound-boolean" ID="ID_1233942789" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
</node>
<node TEXT="NP Completeness of the SAT Problem Code#$D$#" FOLDED="true" ID="ID_1984516224" CREATED="1566553719251" MODIFIED="1566553719251">
<icon BUILTIN="stop-sign"/>
<node TEXT="Boolean satisfiability problem - Wikipedia" FOLDED="true" ID="ID_1755045693" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://en.wikipedia.org/wiki/Boolean_satisfiability_problem">
<node TEXT="SAT was the first known NP-complete problem as proved by Stephen Cook at the University of Toronto in 1971 and independently by Leonid Levin at the National Academy of Sciences in 1973. Until that time the concept of an NP-complete problem did not even exist." ID="ID_1528993480" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="NP-completeness - Wikipedia" FOLDED="true" ID="ID_1224811302" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://en.wikipedia.org/wiki/NP-completeness">
<node TEXT="Overview. NP-complete problems are in NP the set of all decision problems whose solutions can be verified in polynomial time; NP may be equivalently defined as the set of decision problems that can be solved in polynomial time on a non-deterministic Turing machine.A problem p in NP is NP-complete if every other problem in NP can be transformed (or reduced) into p in polynomial time." ID="ID_1996341188" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="computer science - What is the $3$-SAT problem " FOLDED="true" ID="ID_1093602309" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://math.stackexchange.com/questions/86210/what-is-the-3-sat-problem">
<node TEXT="Like how does it compare to a general SAT problem and why is $3$-SAT NP-complete? Stack Exchange Network Stack Exchange network consists of 176 QA communities including Stack Overflow  the largest most trusted online community for developers to learn share their knowledge and build their careers." ID="ID_1084419584" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="Algorithms for 3-SAT - University Of Maryland" FOLDED="true" ID="ID_337061548" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://www.cs.umd.edu/~gasarch/TOPICS/sat/SATtalk.pdf">
<node TEXT="The Satis&#xef;&#xac;&#xfffd;ability Problem SAT Algorithms and Analyzes by  1. 3SAT is NP-complete. 2. ALL NPC problems can be coded into SAT. (Some directly like 3COL.) Exposition by William Gasarch Algorithms for 3-SAT. OUR GOAL 1. Will we show that 3SAT is in P?  Exposition by William Gasarch Algorithms for 3-SAT." ID="ID_1971702616" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="The Satisfiability Problem - Stanford University" FOLDED="true" ID="ID_1480897462" CREATED="1566553719251" MODIFIED="1566553719251" LINK="http://infolab.stanford.edu/~ullman/ialc/spr10/slides/pnp2.pdf">
<node TEXT="The Satisfiability Problem (SAT) Study of boolean functions generally is concerned with the set of truth assignments (assignments of 0 or 1 to each of the variables) that make the function true. NP-completeness needs only a simpler question (SAT): does there exist a truth assignment making the function true?" ID="ID_958855704" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="The Boolean Satisfiability Problem (SAT)" FOLDED="true" ID="ID_1815315198" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://embedded.eecs.berkeley.edu/eecsx44/fall2011/lectures/SATSolving.pdf">
<node TEXT="Phase Transitions in k-SAT &#xe2;&#x20ac;&#xa2; Consider a fixed-length clause model &#xe2;&#x20ac;&#x201c; k-SAT means that each clause contains exactly k literals &#xe2;&#x20ac;&#xa2; Let SAT problem comprise m clauses and n variables &#xe2;&#x20ac;&#x201c; Randomly generate the problem for fixed k and varying m and n &#xe2;&#x20ac;&#xa2; Question: How does the problem hardness vary with m/n ?" ID="ID_1991626706" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="NP-Completeness - Stanford University" FOLDED="true" ID="ID_534416933" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://web.stanford.edu/class/archive/cs/cs103/cs103.1142/lectures/27/Small27.pdf">
<node TEXT="A Feel for NP-Completeness If a problem is NP-complete then under the assumption that P &#xe2;&#x2030;&#xa0; NP there cannot be an efficient algorithm for it. In a sense NP-complete problems are the hardest problems in NP. All known NP-complete problems are enormously hard to solve: All known algorithms for NP-complete problems" ID="ID_1215663519" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="2-Satisfiability (2-SAT) Problem - GeeksforGeeks" FOLDED="true" ID="ID_651613337" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://www.geeksforgeeks.org/2-satisfiability-2-sat-problem/">
<node TEXT="Note : Boolean satisfiability problem is NP-complete (For proof refer lank&#xe2;&#x20ac;&#xfffd;Cook&#xe2;&#x20ac;&#x2122;s Theorem). What is 2-SAT Problem 2-SAT is a special case of Boolean Satisfiability Problem and can be solved in polynomial time.. To understand this better first let us see what is Conjunctive Normal Form (CNF) or also known as Product of Sums (POS)." ID="ID_233263338" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="NP-Completeness | Set 1 (Introduction) - GeeksforGeeks" FOLDED="true" ID="ID_1545452467" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://www.geeksforgeeks.org/np-completeness-set-1/">
<node TEXT="What was the first problem proved as NP-Complete? There must be some first NP-Complete problem proved by definition of NP-Complete problems. SAT (Boolean satisfiability problem) is the first NP-Complete problem proved by Cook (See CLRS book for proof). It is always useful to know about NP-Completeness even for engineers." ID="ID_419080151" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="Polynomial Time Code For 3-SAT Released P==NP - Slashdot" FOLDED="true" ID="ID_538568223" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://science.slashdot.org/story/11/01/20/1546206/Polynomial-Time-Code-For-3-SAT-Released-PNP">
<node TEXT="Every NP-Complete problem is based off the fact that 3-SAT is NP-Complete (3-SAT was the problem used by Levin and Cook to introduce the concept of NP-Completeness). Ever since then getting into the NP-Complete club has meant reducing 3-SAT to your problem of choice in polynomial time." ID="ID_1837629311" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="Circuit satisfiability problem - Wikipedia" FOLDED="true" ID="ID_1043684724" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://en.wikipedia.org/wiki/Circuit_satisfiability_problem">
<node TEXT="CircuitSAT is closely related to Boolean satisfiability problem (SAT) and likewise has been proven to be NP-complete. It is a prototypical NP-complete problem; the Cook&#xe2;&#x20ac;&#x201c;Levin theorem is sometimes proved on CircuitSAT instead of on the SAT and then reduced to the other satisfiability problems to prove their NP-completeness." ID="ID_1773564485" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="SAT is NP Complete - YouTube" FOLDED="true" ID="ID_1914621693" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://www.youtube.com/watch?v=MWerZ2FsIB4">
<node TEXT="What Does The SAT Really Test? | Idea Channel | PBS Digital Studios - Duration: 13:28. PBS Idea Channel 303532 views" ID="ID_1034048190" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
</node>
</node>
<node TEXT="A Restricted Satisfiability Problem" ID="ID_1743571379" CREATED="1566881027759" MODIFIED="1566881027759" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Normal Forms for Boolean Expressions" ID="ID_1852889399" CREATED="1566881027759" MODIFIED="1566881027759" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="A Restricted Satisfiability Problem: Normal Forms for Boolean Expressions Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1551636529" CREATED="1566553719251" MODIFIED="1566553719251">
<icon BUILTIN="stop-sign"/>
<node TEXT="Computer Science  Engineering Mock Interview 12 of 28 " FOLDED="true" ID="ID_278345206" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://www.youtube.com/watch?v=C9LtdHbx-Ms">
<node TEXT="The interactive transcript could not be loaded.  NP-Completeness of the SAT Problem A Restricted Satisfiability Problem Normal Forms for Boolean Expressions Converting Expressions to CNFThe " ID="ID_1500110819" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="DNF BOOLEAN EXPRESSION - YouTube" FOLDED="true" ID="ID_212709193" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://www.youtube.com/watch?v=3CbLT1D-ctU">
<node TEXT="matematika diskrit universitas negeri malang pti 12 offering a dawam abdul aziz ahkmad aziz kurnia ayu" ID="ID_65557097" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="(PDF) On Satisfiability. - researchgate.net" FOLDED="true" ID="ID_263682109" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://www.researchgate.net/publication/221342087_On_Satisfiability">
<node TEXT="PDF | Among the NP-hard problems is 3SAT [2 4] whichasks if there exists a satisfying assignment for theBoolean variables in a conjunctive normal form formula.This paper gives a mapping of 3SAT " ID="ID_186907524" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="A Graphical 3-SAT Program for Research and Instruction" FOLDED="true" ID="ID_147421429" CREATED="1566553719251" MODIFIED="1566553719251" LINK="http://www.micsymposium.org/mics_2001/oneil.pdf">
<node TEXT="3-SAT is the problem of determining the satisfiability of a Boolean expression where the expression is in conjunctive normal form with three literals per clause. A Boolean expression is satisfiable if and only if its value is true for some assignment of values to its variables. The problem of determining whether an arbitrary Boolean expression is" ID="ID_427507069" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="Highest Voted satisfiability Questions - Page 3 " FOLDED="true" ID="ID_365829307" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://cs.stackexchange.com/questions/tagged/satisfiability?page=3sort=votes">
<node TEXT="QA for students researchers and practitioners of computer science. Stack Exchange network consists of 176 QA communities including Stack Overflow the largest most trusted online community for developers to learn share their knowledge and build their careers.. Visit Stack Exchange" ID="ID_735533927" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="(PDF) Configuration Management Through Satisfiability" FOLDED="true" ID="ID_904472354" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://www.researchgate.net/publication/302922053_Configuration_Management_Through_Satisfiability">
<node TEXT="Configuration Management Through Satisfiability.pdf.  Boolean satisfiability problem (SAT).  expressions of the form discussed in section 3.1 m ay be ." ID="ID_565023400" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="The complexity of satisfiability problems" FOLDED="true" ID="ID_1852945624" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://dl.acm.org/citation.cfm?id=804350">
<node TEXT="The problem of deciding whether a given propositional formula in conjunctive normal form is satisfiable has been widely studied. I t is known that when restricted to formulas having only two literals per clause this problem has an efficient (polynomial-time) solution." ID="ID_66195912" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="List of algorithms - Wikipedia" FOLDED="true" ID="ID_621105732" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://en.wikipedia.org/wiki/List_of_geometric_algorithms">
<node TEXT="The following is a list of algorithms along with one-line descriptions for each. Automated  an algorithm for solving instances of the boolean satisfiability problem;  an algorithm for deciding the satisfiability of propositional logic formula in conjunctive normal form i.e. for solving the CNF-SAT problem; Exact cover problem " ID="ID_1397674137" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="PROGRAM FOR MONDAY JULY 9TH - easychair.org" FOLDED="true" ID="ID_571749300" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://easychair.org/smart-program/FLoC2018/2018-07-09.html">
<node TEXT="Previous works have shown that the satisfiability problem for various variants of the logic of repeating values is equivalent to the reachability and coverability problems in vector addition systems. Our results raise this connection to the level of games augmenting further the associations between logics on data words and counter systems." ID="ID_979303812" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="Satisfiability Modulo Theories: Introduction and " FOLDED="true" ID="ID_656899234" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://m-cacm.acm.org/magazines/2011/9/122785-satisfiability-modulo-theories/fulltext?mobile=true">
<node TEXT="The most well-known constraint satisfaction problem is propositional satisfiability or SAT aiming to decide whether a formula over Boolean variables formed using logical connectives can be made true by choosing true/false values for its variables. Some problems are more naturally described with richer languages (such as arithmetic)." ID="ID_250793755" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="BibSLEIGH &#xe2;&#x20ac;&#x201d; satisfiability tag - GitHub Pages" FOLDED="true" ID="ID_1027645155" CREATED="1566553719251" MODIFIED="1566553719251" LINK="http://bibtex.github.io/tag/satisfiability.html">
<node TEXT="Optimizing the automatic test generation by SAT and SMT solving for Boolean expressions (PA AG ER) pp. 388&#xe2;&#x20ac;&#x201c;391.  using a database for mixed random conjunctive normal forms built upon the Advanced Encryption Standard (AES) (OK) p. 8.  Steiner systems and the Boolean satisfiability problem (SJH) pp. 277&#xe2;&#x20ac;&#x201c;281." ID="ID_437037230" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="First-order logic - Wikipedia" FOLDED="true" ID="ID_1969377199" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://en.wikipedia.org/wiki/First-order_logic">
<node TEXT="First-order logic uses quantified variables over non-logical objects and allows the use of sentences that contain variables so that rather than propositions such as Socrates is a man one can have expressions in the form there exists x such that x is Socrates and x is a man and there exists is a quantifier while x is a variable." ID="ID_1292312052" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
</node>
<node TEXT="A Restricted Satisfiability Problem: Normal Forms for Boolean Expressions Code#$D$#" FOLDED="true" ID="ID_35363818" CREATED="1566553719251" MODIFIED="1566553719251">
<icon BUILTIN="stop-sign"/>
<node TEXT="Boolean satisfiability problem - Wikipedia" FOLDED="true" ID="ID_582745423" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://en.wikipedia.org/wiki/Boolean_satisfiability_problem">
<node TEXT="A variant of the 3-satisfiability problem is the one-in-three 3-SAT (also known variously as 1-in-3-SAT and exactly-1 3-SAT).Given a conjunctive normal form with three literals per clause the problem is to determine whether there exists a truth assignment to the variables so that each clause has exactly one TRUE literal (and thus exactly two FALSE literals)." ID="ID_955062182" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="Boolean satisfiability problem | Wiki | Everipedia" FOLDED="true" ID="ID_654523542" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://everipedia.org/wiki/lang_en/Boolean_satisfiability_problem/">
<node TEXT="Boolean satisfiability problems wiki: In computer science the Boolean satisfiability problem (sometimes called Propositional Satisfiability Problem and abbreviated as SATISFIABILITY or SAT ) is the problem of determining if there exists an interpretation that satisfies a given Boolean formula. In other words it asks whether the variables of a given Boolean formula can be consistently " ID="ID_1064465198" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="The Satisfiability Problem - Stanford University" FOLDED="true" ID="ID_1131583703" CREATED="1566553719251" MODIFIED="1566553719251" LINK="http://infolab.stanford.edu/~ullman/ialc/spr10/slides/pnp2.pdf">
<node TEXT="The Satisfiability Problem Cook&#xe2;&#x20ac;&#x2122;s Theorem: An NP-Complete Problem Restricted SAT: CSAT 3SAT. 2 Boolean Expressions Boolean or propositional-logic expressions are built from variables and constants using the operators AND OR  Conjunctive Normal Form A Boolean formula is in Conjunctive Normal Form (CNF) if it is the AND of" ID="ID_761901452" CREATED="1566553719251" MODIFIED="1566553719251"/>
</node>
<node TEXT="Solving SAT by converting to disjunctive normal form" FOLDED="true" ID="ID_780626226" CREATED="1566553719251" MODIFIED="1566553719251" LINK="https://math.stackexchange.com/questions/159591/solving-sat-by-converting-to-disjunctive-normal-form">
<node TEXT="In complexity theory the satisfiability problem (SAT) is a decision problem whose instance is a Boolean expression written using only AND OR NOT variables and parentheses. So we should give an answer yes if there is a set of boolean variables which yield TRUE for the given for the corresponding expression. However I have a question." ID="ID_47399851" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="2-satisfiability - Wikipedia" FOLDED="true" ID="ID_1030371333" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://en.wikipedia.org/wiki/2-satisfiability">
<node TEXT="A 2-satisfiability problem may be described using a Boolean expression with a special restricted form. It is a conjunction (a Boolean and operation) of clauses where each clause is a disjunction (a Boolean or operation) of two variables or negated variables. The variables or their negations appearing in this formula are known as literals. For example the following formula is in conjunctive " ID="ID_984535361" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="Boolean satisfiability problem explained" FOLDED="true" ID="ID_340887526" CREATED="1566553719252" MODIFIED="1566553719252" LINK="http://everything.explained.today/Boolean_satisfiability_problem/">
<node TEXT="Boolean satisfiability problem explained. In computer science the Boolean satisfiability problem (sometimes called propositional satisfiability problem and abbreviated as SATISFIABILITY or SAT) is the problem of determining if there exists an interpretation that satisfies a given Boolean formula." ID="ID_1199043540" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="Boolean satisfiability problem : Wikis (The Full Wiki)" FOLDED="true" ID="ID_914536843" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://www.thefullwiki.org/Boolean_satisfiability_problem">
<node TEXT="Satisfiability is the problem of determining if the variables of a given Boolean formula can be assigned in such a way as to make the formula evaluate to TRUE. Equally important is to determine whether no such assignments exist which would imply that the function expressed by the formula is identically FALSE for all possible variable assignments." ID="ID_1955686567" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="L21-Restricted_Satisfiability_Problems - Columbia University" FOLDED="true" ID="ID_1132583005" CREATED="1566553719252" MODIFIED="1566553719252" LINK="http://www.cs.columbia.edu/~aho/cs3261/Lectures/L21-Restricted_Satisfiability_Problems.html">
<node TEXT="Lecture 21: Restricted Satisfiability Problems 1. SAT is NP-Complete.  The variables of the Boolean expression are of the form y ijA. If the variable y ijA is assigned the value TRUE  A boolean expression is in conjunctive normal form (CNF) if it is the logical AND of clauses where a clause is the logical OR of one or more literals. " ID="ID_672049936" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="On Conjunctive Normal Form Satisfiability" FOLDED="true" ID="ID_1981462879" CREATED="1566553719252" MODIFIED="1566553719252" LINK="http://repository.upenn.edu/cgi/viewcontent.cgi?article=1354context=cis_reports">
<node TEXT="On Conjunctive Normal Form Satisfiability Jon Freeman Department of Computer and Information Science University of Pennsylvania Philadelphia PA 19104 November 1991 Abstract This paper focuses on algorithms that solve CSAT (conjunctive normal form sa.tis- fiability) by searching for a satisfying truth assignment for the given formula F. We" ID="ID_1565574654" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="Computer Science  Engineering Mock Interview 12 of 28 " FOLDED="true" ID="ID_186475205" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://www.youtube.com/watch?v=C9LtdHbx-Ms">
<node TEXT="Realistic Computer Science  Engineering Interviews: 12 of 28 - Theory of Computation Database Management Systems  Project Management. For infinite number " ID="ID_1320784511" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="Hopcroft Motwani  Ullman Introduction to Automata " FOLDED="true" ID="ID_1506503963" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://www.pearson.com/us/higher-education/product/Hopcroft-Introduction-to-Automata-Theory-Languages-and-Computation-2nd-Edition/9780201441246.html">
<node TEXT="Introduction to Automata Theory Languages and Computation. Introduction to Automata Theory Languages and Computation  A Restricted Satisfiability Problem. Normal Forms for Boolean Expressions. Converting Expressions to CNF. NP-Completeness of CSAT." ID="ID_1933056581" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="Where might I find a method to convert an arbitrary " FOLDED="true" ID="ID_384259053" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://stackoverflow.com/questions/7990554/where-might-i-find-a-method-to-convert-an-arbitrary-boolean-expression-into-conj">
<node TEXT="Where might I find a method to convert an arbitrary boolean expression into conjunctive or disjunctive normal form? Ask Question  (Converting into CNF or DNF is at the heart of the original NP Complete problem satisfiability) &#xe2;&#x20ac;&#x201c; Billy ONeal Oct 24 13 at 17:15.  Why is it important to express code in Disjunctive Normal Form? 1545." ID="ID_875674346" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
</node>
</node>
</node>
<node TEXT="Converting Expressions to CNF" ID="ID_308417265" CREATED="1566881027761" MODIFIED="1566881027761" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="Converting Expressions to CNF Interactive Visualisation#$D$#" FOLDED="true" ID="ID_1768597773" CREATED="1566553719252" MODIFIED="1566553719252">
<icon BUILTIN="stop-sign"/>
<node TEXT="conversion to CNF (propositional logic) - YouTube" FOLDED="true" ID="ID_1068492839" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://www.youtube.com/watch?v=cDOT58otLxw">
<node TEXT="UNH CS 730. Normal Forms DNF and CNF with Examples Lecture 13.3 - Duration: 28:44. Discrete Mathematics for computer sceince with real time examples [Marathi + English] 24358 views" ID="ID_188302500" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="Chomsky Normal Form  CFG to CNF Conversion - YouTube" FOLDED="true" ID="ID_1586778519" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://www.youtube.com/watch?v=Mh-UQVmAxnw">
<node TEXT="TOC: Chomsky Normal Form  CFG to CNF Conversion Topics discussed: 1. Chomsky Normal Form 2. Steps to convert CFG to CNF Contribute: http://www.nesoacademy.o" ID="ID_21331573" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="Converting a CFG to Chomsky Normal FormJP - jflap.org" FOLDED="true" ID="ID_1396013991" CREATED="1566553719252" MODIFIED="1566553719252" LINK="http://www.jflap.org/modules/ConvertedFiles/CFG%20to%20Chomsky%20Normal%20Form%20Transformation%20Module.pdf">
<node TEXT="Example of the CFGCNF Conversion Process One approach to converting a CFG into an equivalent grammar in CNF is to successively replace objects in the CFG to get closer to the requirements for CNF while maintaining the integrity of the language recognized. The following sequence follows a path through the conversion process as provided by JFLAP." ID="ID_1179754530" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="JFLAP &#xe2;&#x20ac;&#x201c; An Interactive Formal Languages and Automata Package" FOLDED="true" ID="ID_298382360" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://www2.cs.duke.edu/csed/jflap/jflapbook/jflapbook2006.pdf">
<node TEXT="(JFLAP) an interactive visualization and teaching tool for formal languages. This book is intended as a supplement to an undergraduate automata theory course or an undergraduate compiler course." ID="ID_1172811257" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="Visual and Interactive Tools - users.cs.duke.edu" FOLDED="true" ID="ID_1083000256" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://users.cs.duke.edu/~rodger/tools/">
<node TEXT="Visual and Interactive Tools .  New features in 3.1 include regular expressions including conversions of regular expressions to NFA and DFA to regular expressions. New features from 3.0 include several conversions from one representation to another.  the conversion of an automaton into an equivalent form and the animation of algorithms " ID="ID_1478921121" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="Interactive Visualizations In Jupyter Notebook - Towards " FOLDED="true" ID="ID_1280176387" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://towardsdatascience.com/interactive-visualizations-in-jupyter-notebook-3be02ab2b8cd">
<node TEXT="This entry is a non-exhaustive introduction on how to create interactive content directly from your Jupyter notebook. Content mostly refers to data visualization artifacts but we&#xe2;&#x20ac;&#x2122;ll see that we can easily expand beyond the usual plots and graphs providing worthy interactive bits for all kind of scenarios from data-exploration to animations." ID="ID_1348299940" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="Increasing Visualization and Interaction in the Automata " FOLDED="true" ID="ID_551933562" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://users.cs.duke.edu/~rodger/papers/cse00/cse00fin.html">
<node TEXT="The new features in JFLAP include regular expressions the conversion of regular expressions to NFA the conversion of NFA to regular expressions steps added to the conversions of automata to grammars that previously just gave the answer and an expanded help section now in html format." ID="ID_261928571" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="PROC. OF THE 14th PYTHON IN SCIENCE CONF. (SCIPY 2015) 25 " FOLDED="true" ID="ID_1217202660" CREATED="1566553719252" MODIFIED="1566553719252" LINK="http://conference.scipy.org/proceedings/scipy2015/pdfs/chris_drake.pdf">
<node TEXT="Currently expressions also support conversion to the following forms: Binary operator (only two args per Or And etc) Disjunctive Normal Form (DNF) Conjunctive Normal Form (CNF) DNF and CNF expressions are two-level forms. That is the entire expression is either an Orof Andclauses (DNF) or an And of Orclauses (CNF)." ID="ID_747040585" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="Create interactive timeline visualizations for your data " FOLDED="true" ID="ID_867140800" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://powerbi.microsoft.com/en-us/blog/create-interactive-timeline-visualizations-for-your-data-with-the-new-timeline-storyteller-community-visual/">
<node TEXT="During the keynote of the 2017 Microsoft Data Insight Summit we showed a bunch of exciting new features. One that caught a lot of people&#xe2;&#x20ac;&#x2122;s eye and is now available in the Office Store is the timeline storyteller.. The timeline storyteller lets you present different aspects of your data using a palette of timeline representations scales and layouts as well as controls for filtering " ID="ID_1984099906" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="10 Tools for Creating Infographics and Visualizations - Moz" FOLDED="true" ID="ID_317423450" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://moz.com/blog/10-tools-for-creating-infographics-visualizations">
<node TEXT="10 Tools for Creating Infographics and Visualizations Link Building . 167. 173.  Gephi is an interactive visualization and exploration desktop app for all kinds of networks and complex systems dynamic and hierarchical graphs.  you can use json-csv.com to convert the data to spreadsheet friendly CSV." ID="ID_1193183631" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="Visualize any Text as a Network - Textexture" FOLDED="true" ID="ID_1401916321" CREATED="1566553719252" MODIFIED="1566553719252" LINK="http://www.textexture.com/">
<node TEXT="If you would like to visualize a text as a network graph please use our new open source InfraNodus text network visualization tool. Textexture is outdated and is not supported any longer." ID="ID_1730246442" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="QRC extraction  BUS - Custom IC Design - Cadence " FOLDED="true" ID="ID_155383407" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://community.cadence.com/cadence_technology_forums/f/custom-ic-design/24912/qrc-extraction-bus">
<node TEXT="See the Visualization  Analysis Tool documentation for information. about the types of objects that can be plotted in Visualization  Analysis Tool. Only. the expressions that evaluate to those objects can be plotted. *Warning* Wave2 is not a waveform object that can be displayed and. will be DELETED automatically. name: /cnf_reg_analog15" ID="ID_1352250997" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
</node>
<node TEXT="Converting Expressions to CNF Code#$D$#" FOLDED="true" ID="ID_875055234" CREATED="1566553719252" MODIFIED="1566553719252">
<icon BUILTIN="stop-sign"/>
<node TEXT="code golf - Convert a logical expression to conjunctive " FOLDED="true" ID="ID_1201130772" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://codegolf.stackexchange.com/questions/108747/convert-a-logical-expression-to-conjunctive-normal-form">
<node TEXT="The conjunction of any two previously constructed expressions is in conjunctive normal form. Any other expression is not in conjunctive normal form. Any logical expression can be converted (non-uniquely) into a logically equivalent expression in conjunctive normal form (see this algorithm). You do not need to use that particular algorithm. Input:" ID="ID_786687098" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="How to Convert a Formula to CNF - Department of Computer " FOLDED="true" ID="ID_650681652" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://www.cs.jhu.edu/~jason/tutorials/convert-to-CNF.html">
<node TEXT="How to Convert a Formula to CNF Declarative Methods CS 325/425 - Prof. Jason Eisner. This algorithm corresponds exactly to the one you saw on the lecture slides but this presentation gives a somewhat different perspective along with some further discussion. In Homework 1 youll get to convert some formulas to CNF by hand.(Or if you want you could implement the algorithm below and implement " ID="ID_389029467" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="logic - How to convert to conjunctive normal form " FOLDED="true" ID="ID_1670275435" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://math.stackexchange.com/questions/214338/how-to-convert-to-conjunctive-normal-form">
<node TEXT="Stack Exchange network consists of 175 QA communities including Stack Overflow the largest most trusted online community for developers to learn share their knowledge and build their careers.. Visit Stack Exchange" ID="ID_665804243" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="boolean logic - How to convert formula to CNF? - Stack " FOLDED="true" ID="ID_1664658795" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://stackoverflow.com/questions/31529209/how-to-convert-formula-to-cnf">
<node TEXT="Recipe for converting an expression into CNF One way to convert a formula to CNF is: Write a truth table (only the terms are relevant where the formula evaluates to false) In every term of the truth table invert all literals; Take the resulting terms as CNF clauses; This recipe can be made plausible as follows: None of the clauses must be false " ID="ID_1774617060" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="Conjunctive normal form - Wikipedia" FOLDED="true" ID="ID_414494484" CREATED="1566553719252" MODIFIED="1566553719252" LINK="https://en.wikipedia.org/wiki/Conjunctive_normal_form">
<node TEXT="In Boolean logic a formula is in conjunctive normal form (CNF) or clausal normal form if it is a conjunction of one or more clauses where a clause is a disjunction of literals; otherwise put it is an AND of ORs.As a canonical normal form it is useful in automated theorem proving and circuit theory.. All conjunctions of literals and all disjunctions of literals are in CNF as they can be " ID="ID_98931554" CREATED="1566553719252" MODIFIED="1566553719252"/>
</node>
<node TEXT="PDF generated using the open source mwlib toolkit. See " FOLDED="true" ID="ID_861164847" CREATED="1566553719252" MODIFIED="1566553719252" LINK="http://www.cse.unt.edu/~tarau/teaching/cf1/logic.pdf">
<node TEXT="Conjunctive normal form 3 Converting from first-order logic To convert first-order logic to CNF:[4] 1. Convert to negation normal form. 1. Eliminate implications and equivalences: repeatedly replace with ; replace with . Eventually this will eliminate all occurrences of and . 2. Move NOTs inwards by repeatedly applying De Morgans Law." ID="ID_1014051611" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="First Order Logic: Conversion to CNF - april.eecs.umich.edu" FOLDED="true" ID="ID_1517536741" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://april.eecs.umich.edu/courses/eecs492_w10/wiki/images/6/6b/CNF_conversion.pdf">
<node TEXT="First Order Logic: Conversion to CNF 1. Eliminate biconditionals and implications: &#xe2;&#x20ac;&#xa2; Eliminate &#xe2;&#x2021;&#x201d; replacing &#xce;&#xb1; &#xe2;&#x2021;&#x201d; &#xce;&#xb2; with (&#xce;&#xb1; &#xe2;&#x2021;&#x2019; &#xce;&#xb2;) &#xe2;&#x2c6;&#xa7; (&#xce;&#xb2; &#xe2;&#x2021;&#x2019; &#xce;&#xb1;)." ID="ID_835758936" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="GitHub - omkarkarande/CNF-Converter: Python code to " FOLDED="true" ID="ID_1032750764" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://github.com/omkarkarande/CNF-Converter">
<node TEXT="CNF-Converter [NOT MAINTAINED] NOTE: This code was written as a first project when learning python about 4 years ago. It is therefore very un-optimized and probably buggy. Do not use this for critical tasks. I would not be maintaining this but feel free to create a fork. Python code to convert First Order Logic statements to Conjunctive Normal Form" ID="ID_1227114702" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="COMP2411 Lecture 6: Conjunctive Normal Form Motivation" FOLDED="true" ID="ID_797895638" CREATED="1566553719253" MODIFIED="1566553719253" LINK="http://www.cse.unsw.edu.au/~meyden/teaching/cs2411/lectures/lecture7.pdf">
<node TEXT="COMP2411 Lecture 6: Conjunctive Normal Form Reading: Huth and Ryan Section 1.5.1|1.5.2 Motivation So far we have seen two approaches to determining/proving validity" ID="ID_1856740745" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Boolean Expressions Calculator - dCode" FOLDED="true" ID="ID_771711557" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://www.dcode.fr/boolean-expressions-calculator">
<node TEXT="Send this message. Team dCode likes feedback and relevant comments; to get an answer give an email (not published). It is thanks to you that dCode has the best Boolean Expressions Calculator tool." ID="ID_311480918" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Disjunctive normal form - Wikipedia" FOLDED="true" ID="ID_1438949698" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://en.wikipedia.org/wiki/Disjunctive_normal_form">
<node TEXT="Definition. A logical formula is considered to be in DNF if and only if it is a disjunction of one or more conjunctions of one or more literals.: 153 A DNF formula is in full disjunctive normal form if each of its variables appears exactly once in every conjunction. As in conjunctive normal form (CNF) the only propositional operators in DNF are and or and not." ID="ID_672834744" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="6.3 Convert first-order logic expressions to  - cpp.edu" FOLDED="true" ID="ID_1492307387" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://www.cpp.edu/~jrfisher/www/prolog_tutorial/logic_topics/normal_forms/normal_form.html">
<node TEXT="6.3 Convert first-order logic expressions to normal form This section of Logic Topics presents a Prolog program that translates well-formed formulas (wffs) of first-order logic into so-called normal program clauses. The next section of Logic Topics presents a Prolog-like meta-interpreter (in XSB Prolog) for normal programs. Wffs The well-formed formulas will be Prolog terms formed according " ID="ID_1665245864" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
</node>
</node>
<node TEXT="The Problem of Independent Sets" ID="ID_138071011" CREATED="1566881027763" MODIFIED="1566881027763" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
<node TEXT="The Problem of Independent Sets Interactive Visualisation#$D$#" FOLDED="true" ID="ID_831645845" CREATED="1566553719253" MODIFIED="1566553719253">
<icon BUILTIN="stop-sign"/>
<node TEXT="An Interactive Tutorial for NP-Completeness" FOLDED="true" ID="ID_1094149081" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://vtechworks.lib.vt.edu/bitstream/handle/10919/52973/Maji_N_T_2015.pdf">
<node TEXT="An Interactive Tutorial for NP-Completeness Nabanita Maji (ABSTRACT) A Theory of Algorithms course is essential to any Computer Science curriculum at both the undergraduate" ID="ID_1582235088" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Interactive Visualization of Large Data Sets - cs.brown.edu" FOLDED="true" ID="ID_1509511568" CREATED="1566553719253" MODIFIED="1566553719253" LINK="http://cs.brown.edu/courses/cs227/papers/interactive-vizualization-large-datasets.pdf">
<node TEXT="is a topic that is too large to be addressed in a single survey paper. Thus we restrict our attention here to interactive visualization of large data sets. Our focus then is skewed in a natural way towards query processingproblem&#xe2;&#x20ac;&#x201d;provided byan underlying database system&#xe2;&#x20ac;&#x201d;rather than to the actual data visualization problem." ID="ID_310182927" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Five Key Properties of Interactive Data Visualization" FOLDED="true" ID="ID_102040627" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://www.forbes.com/sites/benkerschberg/2014/04/30/five-key-properties-of-interactive-data-visualization/">
<node TEXT="The following are five key properties of Interactive Visualization: The Novice User . Even novices must be able to examine data and find patterns distributions correlations and/or anomalies." ID="ID_1255295194" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Mastering Model Driven Engineering complexity by " FOLDED="true" ID="ID_833604920" CREATED="1566553719253" MODIFIED="1566553719253" LINK="http://iihm.imag.fr/publs/2016/TSI-miratul-finale.pdf">
<node TEXT="This paper focuses on the problem of model proliferation i.e. the management of a lot of models and their relationships. Our approach considers model as data to take advantage of the data visualization research for managing the problem of model proliferation. The interactive visualization approach provides a large set of features" ID="ID_138205544" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Independent set (graph theory) - Wikipedia" FOLDED="true" ID="ID_271036124" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://en.wikipedia.org/wiki/Independent_set_(graph_theory)">
<node TEXT="The maximum independent set problem is the special case in which all weights are one. In the maximal independent set listing problem the input is an undirected graph and the output is a list of all its maximal independent sets. The maximum independent set problem may be solved using as a subroutine an algorithm for the maximal independent set " ID="ID_1442321895" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Interactive Visualisation of Products in Online Configurators" FOLDED="true" ID="ID_609896832" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://www.researchgate.net/profile/Arnaud_Blouin2/publication/256461449_Interactive_Visualisation_of_Products_in_Online_Configurators_A_Case_Study_for_Variability_Modelling_Technologies/links/0deec532ec0a8b2273000000/Interactive-Visualisation-of-Products-in-Online-Configurators-A-Case-Study-for-Variability-Modelling-Technologies.pdf">
<node TEXT="the interactive visualisation of products in online con&#xef;&#xac;&#xfffd;gurators is  related to the problem the variability and product line com-  Though the set of options can be considered" ID="ID_1839232483" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="From Data Visualization to Interactive Data Analysis - Medium" FOLDED="true" ID="ID_63901902" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://medium.com/@FILWD/from-data-visualization-to-interactive-data-analysis-e24ae3751bf3">
<node TEXT="From Data Visualization to Interactive Data Analysis.  a popular independent newsroom located in New York City. We helped them sift through large sets of medical reviews from Yelp to identify " ID="ID_186457244" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Graph Theory Independent Sets - tutorialspoint.com" FOLDED="true" ID="ID_1461695730" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://www.tutorialspoint.com/graph_theory/graph_theory_independent_sets">
<node TEXT="Clearly S 1 is not an independent vertex set because for getting an independent vertex set there should be at least two vertices in the from a graph. But here it is not that case. The subsets S 2 S 3 and S 4 are the independent vertex sets because there is no vertex that is adjacent to any one vertex from the subsets. Maximal Independent " ID="ID_1629387273" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Information Visualization Techniques for Big Data" FOLDED="true" ID="ID_162904689" CREATED="1566553719253" MODIFIED="1566553719253" LINK="http://kdd.cs.ksu.edu/Publications/Book-Chapters/hsu2013visualization.pdf">
<node TEXT="Information visualization is the study of (interactive) visual representations of abstract data to reinforce human cognition. (Information visualization Wikipedia 2013) Abstract data include both numerical data such as geospatial locations or other physical measurements and non-numerical data such as text." ID="ID_1879117138" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="UpSet: Visualization of Intersecting Sets" FOLDED="true" ID="ID_1501232625" CREATED="1566553719253" MODIFIED="1566553719253" LINK="http://people.seas.harvard.edu/~alex/papers/2014_infovis_upset.pdf">
<node TEXT="which countries export the same products are examples of problems that can be solved using set visualization. Analysts can also create sets based on an attribute and study the set and its (other) attributes in isolation compare it to other sets or investigate the intersection of multiple sets." ID="ID_644877265" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Data visualisation tips from a DBS data scientist " FOLDED="true" ID="ID_1229433135" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://www.marketing-interactive.com/data-visualisation-tips-from-a-dbs-data-scientist/">
<node TEXT="For organisations without a dedicated data science team knowing where to start when it comes to deriving a story from data might present its fair set of challenges. One possible way to get " ID="ID_127835590" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Validating the independent components of neuroimaging time " FOLDED="true" ID="ID_1443824087" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://www.cs.helsinki.fi/u/ahyvarin/papers/Himberg04reprint.pdf">
<node TEXT="Validating the independent components of neuroimaging time series via clustering and visualization Johan Himberga Aapo Hyva&#xc2;&#xa8;rinenb* and Fabrizio Espositocd aNeural Networks Research Centre Helsinki University of Technology Helsinki Finland bDepartment of Computer Science Helsinki Institute for Information Technology/BRU University of Helsinki Helsinki Finland" ID="ID_1079899926" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
</node>
<node TEXT="The Problem of Independent Sets Code#$D$#" FOLDED="true" ID="ID_1982899730" CREATED="1566553719253" MODIFIED="1566553719253">
<icon BUILTIN="stop-sign"/>
<node TEXT="Independent set (graph theory) - Wikipedia" FOLDED="true" ID="ID_636135973" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://en.wikipedia.org/wiki/Independent_set_(graph_theory)">
<node TEXT="The maximum independent set problem is the special case in which all weights are one. In the maximal independent set listing problem the input is an undirected graph and the output is a list of all its maximal independent sets. The maximum independent set problem may be solved using as a subroutine an algorithm for the maximal independent set " ID="ID_1744961777" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="The Independent Set Algorithm - Four Color Theorem" FOLDED="true" ID="ID_1203523217" CREATED="1566553719253" MODIFIED="1566553719253" LINK="http://www.dharwadker.org/independent_set/">
<node TEXT="In 1972 Karp introduced a list of twenty-one NP-complete problems one of which was the problem of finding a maximum independent set in a graph.Given a graph one must find a largest set of vertices such that no two vertices in the set are connected by an edge. Such a set of vertices is called a maximum independent set of the graph and in general can be very difficult to find." ID="ID_217155796" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Largest Independent Set Problem | DP-26 - GeeksforGeeks" FOLDED="true" ID="ID_212299273" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://www.geeksforgeeks.org/largest-independent-set-problem-dp-26/">
<node TEXT="Given a Binary Tree find size of the Largest Independent Set(LIS) in it. A subset of all tree nodes is an independent set if there is no edge between any two nodes of the subset. For example consider the following binary tree. The largest independent set(LIS) is {10 40 60 70 80} and size of " ID="ID_122087916" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Maximal Independent Set - uni-freiburg.de" FOLDED="true" ID="ID_410134945" CREATED="1566553719253" MODIFIED="1566553719253" LINK="http://ac.informatik.uni-freiburg.de/teaching/ss_12/netalg/lectures/chapter6.pdf">
<node TEXT="52 CHAPTER 6. MAXIMAL INDEPENDENT SET Remarks: &#xe2;&#x20ac;&#xa2; Computing a maximum independent set (MaxIS) is a notoriously di&#xef;&#xac;&#x192;cult problem. It is equivalent to maximum clique on the complementary graph. Both problems are NP-hard in fact not approximable within n1 2 &#xe2;&#x2c6;&#x2019;&#xef;&#xbf;&#xbf;. &#xe2;&#x20ac;&#xa2; In this course we concentrate on the maximal independent set (MIS) prob-lem." ID="ID_1718063253" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Independent Set - Georgia Tech - Computability Complexity " FOLDED="true" ID="ID_1039699982" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://www.youtube.com/watch?v=ST1ozPWvgjs">
<node TEXT="Independent Set - Georgia Tech - Computability Complexity Theory: Complexity Udacity.  8.1 NP-Hard Graph Problem - Clique Decision Problem - Duration: 17:14." ID="ID_734322394" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="ISS Group at the University of Texas" FOLDED="true" ID="ID_955385418" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://iss.oden.utexas.edu/?p=projects/galois/benchmarks/independent_set">
<node TEXT="The problem of finding maximal independent sets is simpler and more useful in practice for large graphs. A maximal independent set is an independent set that cannot be extended with another node and still remain an independent set. Algorithm. In the pseudocode below a node can be in one of the following three states: IN if it is definitely in " ID="ID_1491026957" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Approximation &#xe2;&#x20ac;&#x201d; NetworkX 1.9.1 documentation" FOLDED="true" ID="ID_192001121" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://networkx.github.io/documentation/networkx-1.9.1/reference/algorithms.approximation.html">
<node TEXT="A maximum independent set is a largest independent set for a given graph G and its size is denoted &#xce;&#xb1;(G). The problem of finding such a set is called the maximum independent set problem and is an NP-hard optimization problem. As such it is unlikely that there exists an efficient algorithm for finding a maximum independent set of a graph." ID="ID_330716714" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Introduction: Weighted Independent Sets in Path Graphs " FOLDED="true" ID="ID_300799209" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://www.coursera.org/lecture/algorithms-greedy/introduction-weighted-independent-sets-in-path-graphs-WENc1">
<node TEXT="The primary topics in this part of the specialization are: greedy algorithms (scheduling minimum spanning trees clustering Huffman codes) and dynamic programming (knapsack sequence alignment optimal search trees)." ID="ID_515937168" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Graph Theory Independent Sets - tutorialspoint.com" FOLDED="true" ID="ID_1627351421" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://www.tutorialspoint.com/graph_theory/graph_theory_independent_sets">
<node TEXT="Clearly S 1 is not an independent vertex set because for getting an independent vertex set there should be at least two vertices in the from a graph. But here it is not that case. The subsets S 2 S 3 and S 4 are the independent vertex sets because there is no vertex that is adjacent to any one vertex from the subsets. Maximal Independent " ID="ID_381809441" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="algorithm to find max independent set in a tree - Stack " FOLDED="true" ID="ID_1072984106" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://stackoverflow.com/questions/13544240/algorithm-to-find-max-independent-set-in-a-tree">
<node TEXT="I need an algorithm to find max independent set in a tree. Im thinking start from all leaf nodes and then delete the direct parent nodes to these leaf nodes then choose the parent nodes of the parent nodes we deleted repeat this procedure recursively until we get to root. and is this done in O(n) time? any reply is appreciated. thanks." ID="ID_550739642" CREATED="1566553719253" MODIFIED="1566553719253"/>
</node>
<node TEXT="Computer Science Exam #3 Flashcards | Quizlet" FOLDED="true" ID="ID_143719969" CREATED="1566553719253" MODIFIED="1566553719253" LINK="https://quizlet.com/40702573/computer-science-exam-3-flash-cards/">
<node TEXT="A(n) ____ is a set of independent computer systems connected by telecommunication links for the purpose of sharing information and resources. Switched In the early days of networking the most common way to transmit data was via ____ dial-up telephone lines." ID="ID_589354439" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
<node TEXT="The INDEPENDENT SET Decision Problem is NP-complete" FOLDED="true" ID="ID_209271102" CREATED="1566553719254" MODIFIED="1566553719254" LINK="http://scholarscompass.vcu.edu/cgi/viewcontent.cgi?article=3572context=etd">
<node TEXT="THE INDEPENDENT SET DECISION PROBLEM IS NP-COMPLETE By Andrew Schuyler Bristow IV Master of Science. A thesis submitted in partial ful&#xef;&#xac;&#xfffd;llment of the requirements for the degree of Master of Science at Virginia Commonwealth University. Virginia Commonwealth University 2011." ID="ID_988544801" CREATED="1566553719254" MODIFIED="1566553719254"/>
</node>
</node>
</node>
<node TEXT="The Node-Cover Problem" ID="ID_530185060" CREATED="1566881027765" MODIFIED="1566881027765" Folded="true">
<attribute NAME="Type" VALUE="syllabus_point"/>
</node>
</node>
</node>
</map>
